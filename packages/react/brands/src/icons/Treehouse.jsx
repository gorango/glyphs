
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'color':
      return (
        <>
          <circle
            cx="40"
            cy="40"
            r="35"
            fill="#5FCF80"
          />
          <path
            d="M59.8035 25.7961C57.8104 24.6037 55.5616 22.9307 53.4823 25.0688C50.8985 28.7379 46.1552 33.678 48.5756 38.4779C49.5528 40.32 51.1677 41.6945 52.4656 43.2961C53.2272 44.0792 53.629 45.099 53.4823 46.2052C53.3055 47.7052 52.112 48.887 50.6532 49.0689C48.7083 49.2961 47.0285 47.7052 47.0285 45.7507C46.8517 44.7052 47.1169 42.3416 45.3487 42.0689C44.1994 41.887 42.7407 43.7507 41.9892 46.2052C41.3878 48.2321 41.724 49.9567 41.724 51.9779C41.724 54.1435 40.1562 56.0903 37.834 55.8416C36.2868 55.6598 34.9607 54.387 34.7397 52.7961C34.5457 51.5327 35.0899 50.2487 35.8448 49.2507C36.5963 48.1143 37.7456 46.387 38.3202 44.7961C38.9391 43.1143 39.8477 41.7735 38.6739 40.887C37.5 40.0006 32.5187 47.4165 29.7888 46.9325C28.5511 46.7052 27.5786 45.6598 27.3576 44.4325C27.0039 42.5689 28.1974 40.9325 29.833 40.6143C31.7528 40.2659 37.4423 38.1258 36.8173 35.7961C36.2493 33.8103 31.3678 37.4892 29.7888 37.3416C28.2859 37.2961 27.0923 35.9779 27.0481 34.4325C27.0481 32.7037 28.4287 31.4779 30.0982 31.4779C32.0545 31.4779 33.9887 32.3033 35.9774 31.8416C41.0749 30.7098 42.9837 26.1638 45.5255 22.1143C46.7191 20.2052 46.1444 17.6143 44.1994 16.4779C41.8128 15.1486 39.345 14.359 36.7731 15.887L20.1523 25.7961C18.5167 26.7507 17.5 28.5688 17.5 30.5234V49.5234C17.5 51.4779 18.5167 53.2961 20.1523 54.2507L36.8173 64.1143C38.7623 65.2961 41.1935 65.2961 43.1827 64.1143L59.8477 54.2507C61.4833 53.2961 62.5 51.4779 62.5 49.5234V30.5234C62.4558 28.5688 61.4391 26.7507 59.8035 25.7961Z"
            fill="white"
          />
        </>
      )
    case 'solid':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M40 75C59.33 75 75 59.33 75 40C75 20.67 59.33 5 40 5C20.67 5 5 20.67 5 40C5 59.33 20.67 75 40 75ZM59.318 25.5014C59.4813 25.6012 59.6433 25.7002 59.8035 25.7961C61.4391 26.7507 62.4558 28.5688 62.5 30.5234V49.5234C62.5 51.4779 61.4833 53.2961 59.8477 54.2507L43.1827 64.1143C41.1935 65.2961 38.7623 65.2961 36.8173 64.1143L20.1523 54.2507C18.5167 53.2961 17.5 51.4779 17.5 49.5234V30.5234C17.5 28.5688 18.5167 26.7507 20.1523 25.7961L36.7731 15.887C39.345 14.359 41.8128 15.1486 44.1994 16.4779C46.1444 17.6143 46.7191 20.2052 45.5255 22.1143C45.1416 22.726 44.7721 23.3489 44.4039 23.9698C42.3343 27.4592 40.305 30.8808 35.9774 31.8416C34.7645 32.1232 33.5719 31.926 32.3821 31.7294C31.6212 31.6035 30.8614 31.4779 30.0982 31.4779C28.4287 31.4779 27.0481 32.7037 27.0481 34.4325C27.0923 35.9779 28.2859 37.2961 29.7888 37.3416C30.3968 37.3984 31.4943 36.888 32.6467 36.352C34.4874 35.496 36.468 34.5749 36.8173 35.7961C37.4423 38.1258 31.7528 40.2659 29.833 40.6143C28.1974 40.9325 27.0039 42.5689 27.3576 44.4325C27.5786 45.6598 28.5511 46.7052 29.7888 46.9325C31.3029 47.2009 33.5096 45.0392 35.3751 43.2117C36.8731 41.7442 38.1511 40.4923 38.6739 40.887C39.6299 41.609 39.2046 42.6323 38.6795 43.8958C38.5599 44.1837 38.4351 44.484 38.3202 44.7961C37.7538 46.3643 36.629 48.065 35.8772 49.2016L35.8448 49.2507C35.0899 50.2487 34.5457 51.5327 34.7397 52.7961C34.9607 54.387 36.2868 55.6598 37.834 55.8416C40.1562 56.0903 41.724 54.1435 41.724 51.9779C41.724 51.4345 41.6997 50.9125 41.6758 50.4002C41.611 49.0074 41.5495 47.6871 41.9892 46.2052C42.7407 43.7507 44.1994 41.887 45.3487 42.0689C46.7693 42.288 46.8774 43.8566 46.9566 45.0071C46.976 45.2886 46.9937 45.5451 47.0285 45.7507C47.0285 47.7052 48.7083 49.2961 50.6532 49.0689C52.112 48.887 53.3055 47.7052 53.4823 46.2052C53.629 45.099 53.2272 44.0792 52.4656 43.2961C52.0374 42.7677 51.5746 42.264 51.1116 41.76C50.1714 40.7366 49.2304 39.7122 48.5756 38.4779C46.5078 34.3772 49.6685 30.1743 52.2444 26.749C52.6836 26.1649 53.1059 25.6034 53.4823 25.0688C55.3944 23.1027 57.4498 24.3593 59.318 25.5014Z"
            fill="currentColor"
          />
        </>
      )
    case 'path':
      return (
        <>
          <path
            d="M75 40C75 59.33 59.33 75 40 75C20.67 75 5 59.33 5 40C5 20.67 20.67 5 40 5C59.33 5 75 20.67 75 40Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M59.8035 25.7961C57.8104 24.6037 55.5616 22.9307 53.4823 25.0688C50.8985 28.7379 46.1552 33.678 48.5756 38.4779C49.5528 40.32 51.1677 41.6945 52.4656 43.2961C53.2272 44.0792 53.629 45.099 53.4823 46.2052C53.3055 47.7052 52.112 48.887 50.6532 49.0689C48.7083 49.2961 47.0285 47.7052 47.0285 45.7507C46.8517 44.7052 47.1169 42.3416 45.3487 42.0689C44.1994 41.887 42.7407 43.7507 41.9892 46.2052C41.3878 48.2321 41.724 49.9567 41.724 51.9779C41.724 54.1435 40.1562 56.0903 37.834 55.8416C36.2868 55.6598 34.9607 54.387 34.7397 52.7961C34.5457 51.5327 35.0899 50.2487 35.8448 49.2507C36.5963 48.1143 37.7456 46.387 38.3202 44.7961C38.9391 43.1143 39.8477 41.7735 38.6739 40.887C37.5 40.0006 32.5187 47.4165 29.7888 46.9325C28.5511 46.7052 27.5786 45.6598 27.3576 44.4325C27.0039 42.5689 28.1974 40.9325 29.833 40.6143C31.7528 40.2659 37.4423 38.1258 36.8173 35.7961C36.2493 33.8103 31.3678 37.4892 29.7888 37.3416C28.2859 37.2961 27.0923 35.9779 27.0481 34.4325C27.0481 32.7037 28.4287 31.4779 30.0982 31.4779C32.0545 31.4779 33.9887 32.3033 35.9774 31.8416C41.0749 30.7098 42.9837 26.1638 45.5255 22.1143C46.7191 20.2052 46.1444 17.6143 44.1994 16.4779C41.8128 15.1486 39.345 14.359 36.7731 15.887L20.1523 25.7961C18.5167 26.7507 17.5 28.5688 17.5 30.5234V49.5234C17.5 51.4779 18.5167 53.2961 20.1523 54.2507L36.8173 64.1143C38.7623 65.2961 41.1935 65.2961 43.1827 64.1143L59.8477 54.2507C61.4833 53.2961 62.5 51.4779 62.5 49.5234V30.5234C62.4558 28.5688 61.4391 26.7507 59.8035 25.7961Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const BrandsTreehouse = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

BrandsTreehouse.displayName = 'BrandsTreehouse'

export default BrandsTreehouse
