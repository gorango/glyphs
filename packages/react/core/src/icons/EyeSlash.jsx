
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M71.03 39.7359C69.8997 37.3183 68.4799 35.0186 66.7828 32.8905C60.2866 24.7445 50.4345 20 40.0154 20C29.5963 20 19.7442 24.7445 13.248 32.8905C11.5505 35.0191 10.1304 37.3195 9 39.7377"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M71.03 39.7358C69.8996 42.1541 68.4795 44.4544 66.782 46.583C60.2858 54.729 50.4337 59.4736 40.0146 59.4736C29.5955 59.4736 19.7434 54.729 13.2472 46.583C11.5501 44.4549 10.1302 42.1552 9 39.7376"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M35.3239 49.4779C38.2883 50.9054 41.7414 50.9054 44.7058 49.4779C47.6702 48.0503 49.8233 45.3505 50.5554 42.1427C51.2876 38.935 50.5192 35.5684 48.4677 32.996C46.4163 30.4236 43.3051 28.9253 40.0148 28.9253C36.7246 28.9253 33.6134 30.4236 31.562 32.996C29.5105 35.5684 28.7421 38.935 29.4743 42.1427C30.2064 45.3505 32.3595 48.0503 35.3239 49.4779Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M16.0151 64L64.0151 16"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M51.1 21.8439C47.5726 20.6366 43.8321 20 40.0154 20C29.5963 20 19.7442 24.7445 13.248 32.8905C11.5505 35.0191 10.1304 37.3195 9 39.7377C10.1302 42.1553 11.5501 44.455 13.2472 46.5831C15.2051 49.0383 17.4678 51.1844 19.9591 52.9848L27.8353 45.1087C27.4959 44.3392 27.2275 43.533 27.0371 42.6989C26.1357 38.7494 27.0818 34.6044 29.6075 31.4372C32.1333 28.2699 35.9639 26.4252 40.015 26.4252C41.8885 26.4252 43.7148 26.8197 45.3868 27.5572L51.1 21.8439Z"
            fill="currentColor"
          />
          <path
            d="M41.4022 31.5417C40.9474 31.4647 40.4836 31.4252 40.015 31.4252C37.4856 31.4252 35.0938 32.577 33.5167 34.5546C32.0379 36.4089 31.4264 38.8001 31.8199 41.124L41.4022 31.5417Z"
            fill="currentColor"
          />
          <path
            d="M39.0893 47.9968L48.2749 38.8111C48.3777 39.7278 48.3284 40.6656 48.1182 41.5863C47.5554 44.0523 45.9002 46.1279 43.6213 47.2253C42.1963 47.9116 40.6244 48.1687 39.0893 47.9968Z"
            fill="currentColor"
          />
          <path
            d="M35.0131 52.073C38.4806 53.4793 42.3959 53.365 45.7907 51.7302C49.4406 49.9725 52.0914 46.6484 52.9929 42.6989C53.6062 40.0116 53.3642 37.2337 52.3512 34.7349L60.375 26.7111C62.7465 28.465 64.9049 30.5356 66.7828 32.8905C68.4799 35.0186 69.8997 37.3183 71.03 39.7359C69.8996 42.1541 68.4795 44.4545 66.782 46.5831C60.2858 54.7291 50.4337 59.4736 40.0146 59.4736C36.3398 59.4736 32.7355 58.8834 29.3241 57.762L35.0131 52.073Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M69.7828 14.2322C70.7591 15.2085 70.7591 16.7915 69.7828 17.7678L21.7828 65.7678C20.8064 66.7441 19.2235 66.7441 18.2472 65.7678C17.2709 64.7915 17.2709 63.2085 18.2472 62.2322L66.2472 14.2322C67.2235 13.2559 68.8064 13.2559 69.7828 14.2322Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M71.03 39.7359C69.8996 42.1541 68.4795 44.4545 66.782 46.5831C60.2858 54.7291 50.4337 59.4736 40.0146 59.4736C29.5955 59.4736 19.7434 54.7291 13.2472 46.5831C11.5501 44.455 10.1302 42.1553 9 39.7377C10.1304 37.3195 11.5505 35.0191 13.248 32.8905C19.7442 24.7445 29.5963 20 40.0154 20C50.4345 20 60.2866 24.7445 66.7828 32.8905C68.4799 35.0186 69.8997 37.3183 71.03 39.7359Z"
            fill="#F2F2F2"
          />
          <path
            d="M71.03 39.7359L72.8418 40.5828L73.2377 39.7358L72.8418 38.8889L71.03 39.7359ZM66.782 46.5831L65.2183 45.3361L66.782 46.5831ZM13.2472 46.5831L14.8108 45.3361L14.8108 45.3361L13.2472 46.5831ZM9 39.7377L7.18817 38.8908L6.79226 39.7378L7.18822 40.5847L9 39.7377ZM13.248 32.8905L14.8117 34.1375L13.248 32.8905ZM66.7828 32.8905L65.2192 34.1375V34.1375L66.7828 32.8905ZM69.2182 38.889C68.1539 41.1658 66.8168 43.3317 65.2183 45.3361L68.3457 47.8301C70.1422 45.5773 71.6453 43.1425 72.8418 40.5828L69.2182 38.889ZM65.2183 45.3361C59.1016 53.0063 49.825 57.4736 40.0146 57.4736V61.4736C51.0423 61.4736 61.47 56.4519 68.3457 47.8301L65.2183 45.3361ZM40.0146 57.4736C30.2041 57.4736 20.9275 53.0063 14.8108 45.3361L11.6835 47.8301C18.5592 56.452 28.9868 61.4736 40.0146 61.4736V57.4736ZM14.8108 45.3361C13.2127 43.3322 11.8759 41.1669 10.8118 38.8907L7.18822 40.5847C8.38456 43.1437 9.88739 45.5779 11.6835 47.8301L14.8108 45.3361ZM11.6843 31.6435C9.88779 33.8963 8.38466 36.3311 7.18817 38.8908L10.8118 40.5846C11.8761 38.3078 13.2132 36.1419 14.8117 34.1375L11.6843 31.6435ZM40.0154 18C28.9877 18 18.56 23.0217 11.6843 31.6435L14.8117 34.1375C20.9284 26.4674 30.205 22 40.0154 22V18ZM68.3465 31.6435C61.4708 23.0217 51.0432 18 40.0154 18V22C49.8259 22 59.1025 26.4674 65.2192 34.1375L68.3465 31.6435ZM72.8418 38.8889C71.6454 36.3299 70.1426 33.8958 68.3465 31.6435L65.2192 34.1375C66.8173 36.1415 68.1541 38.3068 69.2182 40.5829L72.8418 38.8889Z"
            fill="#E0E0E0"
          />
          <path
            d="M35.3241 49.4778C38.2886 50.9053 41.7417 50.9053 44.7061 49.4778C47.6705 48.0502 49.8235 45.3504 50.5557 42.1426C51.2878 38.9349 50.5194 35.5683 48.468 32.9959C46.4166 30.4235 43.3054 28.9252 40.0151 28.9252C36.7249 28.9252 33.6137 30.4235 31.5623 32.9959C29.5108 35.5683 28.7424 38.9349 29.4746 42.1426C30.2067 45.3504 32.3597 48.0502 35.3241 49.4778Z"
            fill="#F2994A"
            stroke="#F2994A"
            stroke-width={strokeWidth}
          />
          <path
            d="M16.0151 64L64.0151 16"
            stroke="#4F4F4F"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M71.03 39.7359C69.8996 42.1541 68.4795 44.4545 66.782 46.5831C60.2858 54.7291 50.4337 59.4736 40.0146 59.4736C29.5955 59.4736 19.7434 54.7291 13.2472 46.5831C11.5501 44.455 10.1302 42.1553 9 39.7377C10.1304 37.3195 11.5505 35.0191 13.248 32.8905C19.7442 24.7445 29.5963 20 40.0154 20C50.4345 20 60.2866 24.7445 66.7828 32.8905C68.4799 35.0186 69.8997 37.3183 71.03 39.7359Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M35.324 49.4778C38.2884 50.9053 41.7416 50.9053 44.706 49.4778C47.6704 48.0502 49.8234 45.3504 50.5555 42.1426C51.2877 38.9349 50.5193 35.5683 48.4679 32.9959C46.4164 30.4235 43.3052 28.9252 40.015 28.9252C36.7248 28.9252 33.6136 30.4235 31.5621 32.9959C29.5107 35.5683 28.7423 38.9349 29.4744 42.1426C30.2066 45.3504 32.3596 48.0502 35.324 49.4778Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M16.015 64L64.015 16M71.03 39.7359C69.8996 42.1541 68.4795 44.4545 66.782 46.5831C60.2858 54.7291 50.4337 59.4736 40.0146 59.4736C29.5955 59.4736 19.7434 54.7291 13.2472 46.5831C11.5501 44.455 10.1302 42.1553 9 39.7377C10.1304 37.3195 11.5505 35.0191 13.248 32.8905C19.7442 24.7445 29.5963 20 40.0154 20C50.4345 20 60.2866 24.7445 66.7828 32.8905C68.4799 35.0186 69.8997 37.3183 71.03 39.7359ZM29.4744 42.1426C30.2066 45.3504 32.3596 48.0502 35.324 49.4778C38.2884 50.9053 41.7416 50.9053 44.706 49.4778C47.6704 48.0502 49.8234 45.3504 50.5555 42.1426C51.2877 38.9349 50.5193 35.5683 48.4679 32.9959C46.4164 30.4235 43.3052 28.9252 40.015 28.9252C36.7247 28.9252 33.6136 30.4235 31.5621 32.9959C29.5107 35.5683 28.7423 38.9349 29.4744 42.1426Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M65.4294 17.4142C66.2105 16.6332 66.2105 15.3668 65.4294 14.5858C64.6484 13.8047 63.3821 13.8047 62.601 14.5858L55.6436 21.5432C50.8236 19.2391 45.4937 18 40.0156 18C28.9879 18 18.5603 23.0217 11.6846 31.6435C9.88801 33.8963 8.38488 36.3311 7.1884 38.8908L6.79248 39.7378L7.18844 40.5847C8.38479 43.1437 9.88761 45.5779 11.6837 47.8301C14.3377 51.1581 17.5209 53.9497 21.0636 56.1232L14.601 62.5858C13.82 63.3668 13.82 64.6332 14.601 65.4142C15.3821 66.1953 16.6484 66.1953 17.4294 65.4142L24.7446 58.0991C29.47 60.2949 34.672 61.4736 40.0148 61.4736C51.0426 61.4736 61.4702 56.4519 68.3459 47.8301C70.1424 45.5773 71.6456 43.1425 72.842 40.5828L73.238 39.7359L72.842 38.8889C71.6456 36.3299 70.1428 33.8958 68.3467 31.6435C65.7741 28.4175 62.7042 25.6956 59.2916 23.5521L65.4294 17.4142ZM52.6204 24.5664C48.682 22.8931 44.4022 22 40.0156 22C30.2052 22 20.9286 26.4674 14.8119 34.1375C13.4128 35.8918 12.2141 37.7699 11.2232 39.7377C12.2139 41.7048 13.4124 43.5823 14.811 45.3361C17.3768 48.5535 20.4986 51.2073 23.9825 53.2043L29.7647 47.4221C28.7006 46.0029 27.9295 44.3608 27.5248 42.5877C26.6572 38.7865 27.5678 34.7972 29.9987 31.7489C32.4296 28.7006 36.1163 26.9252 40.0152 26.9252C42.8153 26.9252 45.506 27.8409 47.7006 29.4862L52.6204 24.5664ZM50.4874 32.3563L56.3809 26.4628C59.7308 28.4365 62.7356 31.0229 65.2194 34.1375C66.618 35.8913 67.8165 37.7688 68.8073 39.736C67.8164 41.7038 66.6176 43.5818 65.2186 45.3361C59.1018 53.0063 49.8253 57.4736 40.0148 57.4736C35.7657 57.4736 31.6168 56.6356 27.7814 55.0623L32.6346 50.209C33.207 50.6124 33.8157 50.9711 34.4565 51.2797C37.9692 52.9714 42.0612 52.9714 45.574 51.2797C49.0868 49.588 51.638 46.3888 52.5056 42.5877C53.3167 39.0341 52.5738 35.3161 50.4874 32.3563ZM44.8299 32.3568C43.4142 31.4333 41.7451 30.9252 40.0152 30.9252C37.3336 30.9252 34.798 32.1463 33.126 34.2429C31.4541 36.3394 30.8278 39.0832 31.4245 41.6976C31.6591 42.7255 32.0728 43.6895 32.6353 44.5515L44.8299 32.3568ZM35.525 47.3186L47.597 35.2466C48.7392 37.175 49.1114 39.4827 48.6059 41.6976C48.0092 44.312 46.2545 46.5123 43.8384 47.6758C41.4224 48.8393 38.608 48.8393 36.192 47.6758C35.9636 47.5658 35.7412 47.4466 35.525 47.3186Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreEyeSlash = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreEyeSlash.displayName = 'CoreEyeSlash'

export default CoreEyeSlash
