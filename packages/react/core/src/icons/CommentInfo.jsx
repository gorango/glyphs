
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M40 66C54.3594 66 66 54.3594 66 40C66 25.6406 54.3594 14 40 14C25.6406 14 14 25.6406 14 40C14 46.5596 16.4291 52.5518 20.4369 57.1261L16 66L40 66Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M40.1328 51.9999V32.3999H32.1328M32 51.9999H48"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M40 26.1001V27.5001"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M66 40C66 54.3594 54.3594 66 40 66L16 66L20.4369 57.1261C16.4291 52.5518 14 46.5596 14 40C14 25.6406 25.6406 14 40 14C54.3594 14 66 25.6406 66 40ZM42.5 26.1C42.5 24.7193 41.3807 23.6 40 23.6C38.6193 23.6 37.5 24.7193 37.5 26.1V27.5C37.5 28.6369 38.2589 29.5965 39.2977 29.9H32.1328C30.7521 29.9 29.6328 31.0193 29.6328 32.4C29.6328 33.7807 30.7521 34.9 32.1328 34.9H37.6328V49.5H32C30.6193 49.5 29.5 50.6193 29.5 52C29.5 53.3807 30.6193 54.5 32 54.5H48C49.3807 54.5 50.5 53.3807 50.5 52C50.5 50.6193 49.3807 49.5 48 49.5H42.6328V32.4C42.6328 31.1655 41.7381 30.14 40.5617 29.9366C41.6719 29.6818 42.5 28.6876 42.5 27.5V26.1Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M40 66C54.3594 66 66 54.3594 66 40C66 25.6406 54.3594 14 40 14C25.6406 14 14 25.6406 14 40C14 46.5596 16.4291 52.5518 20.4369 57.1261L16 66L40 66Z"
            fill="#56CCF2"
          />
          <path
            d="M40 66V68V66ZM20.4369 57.1261L22.2258 58.0206C22.5892 57.2938 22.4767 56.4193 21.9412 55.8082L20.4369 57.1261ZM16 66L14.2111 65.1056C13.9012 65.7255 13.9343 66.4618 14.2987 67.0515C14.6631 67.6411 15.3068 68 16 68L16 66ZM64 40C64 53.2548 53.2548 64 40 64V68C55.464 68 68 55.464 68 40H64ZM40 16C53.2548 16 64 26.7452 64 40H68C68 24.536 55.464 12 40 12V16ZM16 40C16 26.7452 26.7452 16 40 16V12C24.536 12 12 24.536 12 40H16ZM21.9412 55.8082C18.2407 51.5845 16 46.0564 16 40H12C12 47.0627 14.6176 53.519 18.9326 58.4441L21.9412 55.8082ZM17.7889 66.8944L22.2258 58.0206L18.6481 56.2317L14.2111 65.1056L17.7889 66.8944ZM40 64L16 64L16 68L40 68V64Z"
            fill="#56CCF2"
          />
          <path
            d="M38.1328 52.0001C38.1328 53.1047 39.0282 54.0001 40.1328 54.0001C41.2374 54.0001 42.1328 53.1047 42.1328 52.0001H38.1328ZM42.1328 32.4001C42.1328 31.2955 41.2374 30.4001 40.1328 30.4001C39.0282 30.4001 38.1328 31.2955 38.1328 32.4001H42.1328ZM42 26.1001C42 24.9955 41.1046 24.1001 40 24.1001C38.8954 24.1001 38 24.9955 38 26.1001H42ZM38 27.5001C38 28.6047 38.8954 29.5001 40 29.5001C41.1046 29.5001 42 28.6047 42 27.5001H38ZM32.1328 30.4001C31.0282 30.4001 30.1328 31.2955 30.1328 32.4001C30.1328 33.5047 31.0282 34.4001 32.1328 34.4001V30.4001ZM40.1328 34.4001C41.2374 34.4001 42.1328 33.5047 42.1328 32.4001C42.1328 31.2955 41.2374 30.4001 40.1328 30.4001V34.4001ZM32 50.0001C30.8954 50.0001 30 50.8955 30 52.0001C30 53.1047 30.8954 54.0001 32 54.0001V50.0001ZM48 54.0001C49.1046 54.0001 50 53.1047 50 52.0001C50 50.8955 49.1046 50.0001 48 50.0001V54.0001ZM42.1328 52.0001V32.4001H38.1328V52.0001H42.1328ZM38 26.1001V27.5001H42V26.1001H38ZM32.1328 34.4001H40.1328V30.4001H32.1328V34.4001ZM32 54.0001H48V50.0001H32V54.0001Z"
            fill="#F2F2F2"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M40 66C54.3594 66 66 54.3594 66 40C66 25.6406 54.3594 14 40 14C25.6406 14 14 25.6406 14 40C14 46.5596 16.4291 52.5518 20.4369 57.1261L16 66L40 66Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M40.1328 52V32.4H32.1328M40 26.1V27.5M32 52H48M66 40C66 54.3594 54.3594 66 40 66L16 66L20.4369 57.1261C16.4291 52.5518 14 46.5596 14 40C14 25.6406 25.6406 14 40 14C54.3594 14 66 25.6406 66 40Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            d="M42 26.1C42 24.9954 41.1046 24.1 40 24.1C38.8954 24.1 38 24.9954 38 26.1V27.5C38 28.6046 38.8954 29.5 40 29.5C41.1046 29.5 42 28.6046 42 27.5V26.1Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M32.1328 30.4C31.0282 30.4 30.1328 31.2954 30.1328 32.4C30.1328 33.5046 31.0282 34.4 32.1328 34.4H38.1328V50H32C30.8954 50 30 50.8954 30 52C30 53.1046 30.8954 54 32 54H48C49.1046 54 50 53.1046 50 52C50 50.8954 49.1046 50 48 50H42.1328V32.4C42.1328 31.2954 41.2374 30.4 40.1328 30.4H32.1328Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M40 12C24.536 12 12 24.536 12 40C12 46.5748 14.2684 52.6242 18.063 57.4019L14.2111 65.1056C13.9012 65.7255 13.9343 66.4618 14.2987 67.0515C14.6631 67.6411 15.3068 68 16 68L40 68C55.464 68 68 55.464 68 40C68 24.536 55.464 12 40 12ZM16 40C16 26.7452 26.7452 16 40 16C53.2548 16 64 26.7452 64 40C64 53.2548 53.2548 64 40 64L19.2361 64L22.2258 58.0206C22.5892 57.2938 22.4767 56.4193 21.9412 55.8082C18.2407 51.5845 16 46.0564 16 40Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreCommentInfo = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreCommentInfo.displayName = 'CoreCommentInfo'

export default CoreCommentInfo
