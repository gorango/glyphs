
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M26 48.9998H64L71 20.9998H19"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M28.9507 60.8029L17 13H9"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M26.402 61.4989C28.0097 60.5707 29.9905 60.5707 31.5982 61.4989C33.2059 62.4271 34.1963 64.1425 34.1963 65.9989C34.1963 67.8553 33.2059 69.5707 31.5982 70.4989C29.9905 71.4271 28.0097 71.4271 26.402 70.4989C24.7943 69.5707 23.804 67.8553 23.804 65.9989C23.804 64.1425 24.7943 62.4271 26.402 61.4989Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M30.4189 61H60.581"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M59.402 61.4989C61.0097 60.5707 62.9905 60.5707 64.5982 61.4989C66.2059 62.4271 67.1963 64.1425 67.1963 65.9989C67.1963 67.8553 66.2059 69.5707 64.5982 70.4989C62.9905 71.4271 61.0097 71.4271 59.402 70.4989C57.7943 69.5707 56.804 67.8553 56.804 65.9989C56.804 64.1425 57.7943 62.4271 59.402 61.4989Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M65.8769 20.9998C68.4791 20.9998 70.3886 23.4453 69.7574 25.9699L64.7574 45.9699C64.3123 47.7506 62.7123 48.9998 60.8769 48.9998H29.1231C27.2876 48.9998 25.6877 47.7506 25.2425 45.9699L20.2425 25.9699C19.6113 23.4453 21.5208 20.9998 24.1231 20.9998H65.8769Z"
            fill="currentColor"
          />
          <path
            d="M26.0403 61.5305C26.4421 63.1379 28.0709 64.1151 29.6783 63.7133C31.2857 63.3114 32.263 61.6826 31.8611 60.0753L26.0403 61.5305ZM17 13L19.9104 12.2724C19.5766 10.9369 18.3766 10 17 10V13ZM9 10C7.34315 10 6 11.3431 6 13C6 14.6569 7.34315 16 9 16V10ZM30.419 58C28.7621 58 27.419 59.3431 27.419 61C27.419 62.6569 28.7621 64 30.419 64V58ZM60.581 64C62.2379 64 63.581 62.6569 63.581 61C63.581 59.3431 62.2379 58 60.581 58V64ZM31.8611 60.0753L19.9104 12.2724L14.0896 13.7276L26.0403 61.5305L31.8611 60.0753ZM17 10H9V16H17V10ZM30.419 64H60.581V58H30.419V64Z"
            fill="currentColor"
          />
          <path
            d="M26.4019 61.4988C28.0096 60.5706 29.9904 60.5706 31.5981 61.4988C33.2058 62.427 34.1962 64.1424 34.1962 65.9988C34.1962 67.8552 33.2058 69.5706 31.5981 70.4988C29.9904 71.427 28.0096 71.427 26.4019 70.4988C24.7942 69.5706 23.8038 67.8552 23.8038 65.9988C23.8038 64.1424 24.7942 62.427 26.4019 61.4988Z"
            fill="currentColor"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M59.4019 61.4988C61.0096 60.5706 62.9904 60.5706 64.5981 61.4988C66.2058 62.427 67.1962 64.1424 67.1962 65.9988C67.1962 67.8552 66.2058 69.5706 64.5981 70.4988C62.9904 71.427 61.0096 71.427 59.4019 70.4988C57.7942 69.5706 56.8038 67.8552 56.8038 65.9988C56.8038 64.1424 57.7942 62.427 59.4019 61.4988Z"
            fill="currentColor"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M71 20.9998L64 48.9998H26L19 20.9998H71Z"
            fill="#56CCF2"
          />
          <path
            d="M64 48.9998V50.9998C64.9177 50.9998 65.7177 50.3752 65.9403 49.4848L64 48.9998ZM71 20.9998L72.9403 21.4848C73.0897 20.8873 72.9554 20.2544 72.5764 19.7689C72.1974 19.2835 71.6159 18.9998 71 18.9998V20.9998ZM26 48.9998L24.0597 49.4848C24.2823 50.3752 25.0823 50.9998 26 50.9998V48.9998ZM19 20.9998V18.9998C18.3841 18.9998 17.8026 19.2835 17.4236 19.7689C17.0446 20.2544 16.9103 20.8873 17.0597 21.4848L19 20.9998ZM65.9403 49.4848L72.9403 21.4848L69.0597 20.5147L62.0597 48.5147L65.9403 49.4848ZM26 50.9998H64V46.9998H26V50.9998ZM17.0597 21.4848L24.0597 49.4848L27.9403 48.5147L20.9403 20.5147L17.0597 21.4848ZM71 18.9998H19V22.9998H71V18.9998Z"
            fill="#56CCF2"
          />
          <path
            d="M27.0104 61.2879C27.2783 62.3595 28.3642 63.011 29.4358 62.7431C30.5074 62.4752 31.1589 61.3894 30.891 60.3178L27.0104 61.2879ZM17 13L18.9403 12.5149C18.7177 11.6246 17.9177 11 17 11V13ZM9 11C7.89543 11 7 11.8954 7 13C7 14.1046 7.89543 15 9 15V11ZM30.419 59C29.3144 59 28.419 59.8954 28.419 61C28.419 62.1046 29.3144 63 30.419 63V59ZM60.581 63C61.6856 63 62.581 62.1046 62.581 61C62.581 59.8954 61.6856 59 60.581 59V63ZM30.891 60.3178L18.9403 12.5149L15.0597 13.4851L27.0104 61.2879L30.891 60.3178ZM17 11H9V15H17V11ZM30.419 63H60.581V59H30.419V63Z"
            fill="#9B51E0"
          />
          <path
            d="M26.4019 61.4988C28.0096 60.5706 29.9904 60.5706 31.5981 61.4988C33.2058 62.427 34.1962 64.1424 34.1962 65.9988C34.1962 67.8552 33.2058 69.5706 31.5981 70.4988C29.9904 71.427 28.0096 71.427 26.4019 70.4988C24.7942 69.5706 23.8038 67.8552 23.8038 65.9988C23.8038 64.1424 24.7942 62.427 26.4019 61.4988Z"
            fill="#2F80ED"
            stroke="#2F80ED"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M59.4019 61.4988C61.0096 60.5706 62.9904 60.5706 64.5981 61.4988C66.2058 62.427 67.1962 64.1424 67.1962 65.9988C67.1962 67.8552 66.2058 69.5706 64.5981 70.4988C62.9904 71.427 61.0096 71.427 59.4019 70.4988C57.7942 69.5706 56.8038 67.8552 56.8038 65.9988C56.8038 64.1424 57.7942 62.427 59.4019 61.4988Z"
            fill="#2F80ED"
            stroke="#2F80ED"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M71 21.0002L64 49.0002H26L19 21.0002H71Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M26.4019 61.4993C28.0096 60.5711 29.9904 60.5711 31.5981 61.4993C33.2058 62.4275 34.1962 64.1429 34.1962 65.9993C34.1962 67.8557 33.2058 69.5711 31.5981 70.4993C29.9904 71.4275 28.0096 71.4275 26.4019 70.4993C24.7942 69.5711 23.8038 67.8557 23.8038 65.9993C23.8038 64.1429 24.7942 62.4275 26.4019 61.4993Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M59.4019 61.4993C61.0096 60.5711 62.9904 60.5711 64.5981 61.4993C66.2058 62.4275 67.1962 64.1429 67.1962 65.9993C67.1962 67.8557 66.2058 69.5711 64.5981 70.4993C62.9904 71.4275 61.0096 71.4275 59.4019 70.4993C57.7942 69.5711 56.8038 67.8557 56.8038 65.9993C56.8038 64.1429 57.7942 62.4275 59.4019 61.4993Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M28.9507 60.8033L17 13.0005H9M30.419 61.0005H60.581M64 49.0002L71 21.0002H19L26 49.0002H64ZM23.8038 65.9993C23.8038 64.1429 24.7942 62.4275 26.4019 61.4993C28.0096 60.5711 29.9904 60.5711 31.5981 61.4993C33.2058 62.4275 34.1962 64.1429 34.1962 65.9993C34.1962 67.8557 33.2058 69.5711 31.5981 70.4993C29.9904 71.4275 28.0096 71.4275 26.4019 70.4993C24.7942 69.5711 23.8038 67.8557 23.8038 65.9993ZM56.8038 65.9993C56.8038 64.1429 57.7942 62.4275 59.4019 61.4993C61.0096 60.5711 62.9904 60.5711 64.5981 61.4993C66.2058 62.4275 67.1962 64.1429 67.1962 65.9993C67.1962 67.8557 66.2058 69.5711 64.5981 70.4993C62.9904 71.4275 61.0096 71.4275 59.4019 70.4993C57.7942 69.5711 56.8038 67.8557 56.8038 65.9993Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M9 11C7.89543 11 7 11.8954 7 13C7 14.1046 7.89543 15 9 15H15.4384L26.501 59.2503C26.1243 59.3898 25.7566 59.562 25.4019 59.7667C23.1754 61.0522 21.8038 63.4278 21.8038 65.9988C21.8038 68.5697 23.1754 70.9454 25.4019 72.2308C27.6284 73.5163 30.3716 73.5163 32.5981 72.2308C34.8246 70.9454 36.1962 68.5697 36.1962 65.9988C36.1962 64.9459 35.9661 63.9259 35.5416 63H55.4584C55.0339 63.9259 54.8038 64.9459 54.8038 65.9988C54.8038 68.5697 56.1754 70.9454 58.4019 72.2308C60.6284 73.5163 63.3716 73.5163 65.5981 72.2308C67.8246 70.9454 69.1962 68.5697 69.1962 65.9988C69.1962 63.4278 67.8246 61.0522 65.5981 59.7667C63.9811 58.8332 62.0917 58.5776 60.3255 59H30.6745C30.6346 58.9905 30.5947 58.9813 30.5547 58.9724L28.5615 50.9998H64C64.9177 50.9998 65.7177 50.3752 65.9403 49.4848L72.9403 21.4848C73.0897 20.8873 72.9554 20.2544 72.5764 19.7689C72.1974 19.2835 71.6159 18.9998 71 18.9998H20.5615L18.9403 12.5149C18.7177 11.6246 17.9177 11 17 11H9ZM61.0954 62.9332C61.1172 62.9275 61.1388 62.9213 61.1603 62.9148C61.9718 62.6939 62.8505 62.7992 63.5981 63.2308C64.587 63.8018 65.1962 64.8569 65.1962 65.9988C65.1962 67.1407 64.587 68.1958 63.5981 68.7667C62.6092 69.3377 61.3908 69.3377 60.4019 68.7667C59.413 68.1958 58.8038 67.1407 58.8038 65.9988C58.8038 64.8569 59.413 63.8018 60.4019 63.2308C60.6233 63.103 60.8562 63.0038 61.0954 62.9332ZM27.4019 63.2308C27.877 62.9565 28.4051 62.814 28.9352 62.8033C28.9574 62.8034 28.9797 62.8032 29.0021 62.8026C29.2839 62.8028 29.5656 62.8402 29.8397 62.9148C29.8612 62.9213 29.8829 62.9275 29.9047 62.9333C30.1439 63.0038 30.3767 63.103 30.5981 63.2308C31.587 63.8018 32.1962 64.8569 32.1962 65.9988C32.1962 67.1407 31.587 68.1958 30.5981 68.7667C29.6092 69.3377 28.3908 69.3377 27.4019 68.7667C26.413 68.1958 25.8038 67.1407 25.8038 65.9988C25.8038 64.8569 26.413 63.8018 27.4019 63.2308ZM27.5616 46.9998L21.5616 22.9998H68.4384L62.4384 46.9998H27.5616Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreShoppingCart = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreShoppingCart.displayName = 'CoreShoppingCart'

export default CoreShoppingCart
