
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M26 55L26 16"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M31.818 55H20.182C19.0078 55 18.4197 56.4197 19.25 57.25L24.5858 62.5858C25.3668 63.3668 26.6332 63.3668 27.4142 62.5858L32.75 57.25C33.5803 56.4197 32.9923 55 31.818 55Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M47.9999 29.4998H59.9999M45 36L53.6592 16.2228C53.7185 16.0875 53.8522 16 54 16C54.1478 16 54.2815 16.0875 54.3408 16.2228L63 36"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M46.5333 44H61.4667V44.4167L46 63.5833V64H62"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M29 55C29 56.6569 27.6569 58 26 58C24.3431 58 23 56.6569 23 55L29 55ZM23 16C23 14.3431 24.3431 13 26 13C27.6569 13 29 14.3431 29 16H23ZM23 55L23 16H29L29 55L23 55Z"
            fill="currentColor"
          />
          <path
            d="M31.818 55L20.182 55C19.0078 55 18.4197 56.4197 19.25 57.25L24.5858 62.5858C25.3668 63.3668 26.6332 63.3668 27.4142 62.5858L32.75 57.25C33.5803 56.4197 32.9923 55 31.818 55Z"
            fill="currentColor"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M47.9999 26.4998C46.3431 26.4998 44.9999 27.8429 44.9999 29.4998C44.9999 31.1566 46.3431 32.4998 47.9999 32.4998V26.4998ZM59.9999 32.4998C61.6568 32.4998 62.9999 31.1566 62.9999 29.4998C62.9999 27.8429 61.6568 26.4998 59.9999 26.4998V32.4998ZM53.6592 16.2228L50.9111 15.0196V15.0196L53.6592 16.2228ZM42.2519 34.7968C41.5873 36.3145 42.279 38.0836 43.7968 38.7481C45.3145 39.4127 47.0836 38.721 47.7481 37.2032L42.2519 34.7968ZM54.3408 16.2228L57.0889 15.0196V15.0196L54.3408 16.2228ZM60.2519 37.2032C60.9164 38.721 62.6855 39.4127 64.2032 38.7481C65.721 38.0836 66.4127 36.3145 65.7481 34.7968L60.2519 37.2032ZM47.9999 32.4998H59.9999V26.4998H47.9999V32.4998ZM50.9111 15.0196L42.2519 34.7968L47.7481 37.2032L56.4073 17.4261L50.9111 15.0196ZM51.5927 17.4261L60.2519 37.2032L65.7481 34.7968L57.0889 15.0196L51.5927 17.4261ZM54 19C52.9562 19 52.0113 18.3822 51.5927 17.4261L57.0889 15.0196C56.5517 13.7927 55.3394 13 54 13V19ZM56.4073 17.4261C55.9887 18.3822 55.0438 19 54 19V13C52.6606 13 51.4483 13.7927 50.9111 15.0196L56.4073 17.4261Z"
            fill="currentColor"
          />
          <path
            d="M46.5333 41C44.8765 41 43.5333 42.3431 43.5333 44C43.5333 45.6569 44.8765 47 46.5333 47V41ZM61.4667 44H64.4667C64.4667 42.3431 63.1235 41 61.4667 41V44ZM62 67C63.6569 67 65 65.6569 65 64C65 62.3431 63.6569 61 62 61V67ZM46 64H43C43 65.6569 44.3431 67 46 67V64ZM61.4667 44.4167L63.8013 46.3006C64.2319 45.7671 64.4667 45.1022 64.4667 44.4167H61.4667ZM46 63.5833L43.6653 61.6994C43.2348 62.2329 43 62.8978 43 63.5833H46ZM46.5333 47H61.4667V41H46.5333V47ZM62 61H46L46 67H62V61ZM58.4667 44V44.4167H64.4667V44H58.4667ZM59.132 42.5327L43.6653 61.6994L48.3347 65.4673L63.8013 46.3006L59.132 42.5327ZM43 63.5833V64H49V63.5833H43Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M28 55C28 56.1046 27.1046 57 26 57C24.8954 57 24 56.1046 24 55L28 55ZM24 16C24 14.8954 24.8954 14 26 14C27.1046 14 28 14.8954 28 16H24ZM24 55L24 16H28L28 55L24 55Z"
            fill="#F2C94C"
          />
          <path
            d="M31.818 55L20.182 55C19.0078 55 18.4197 56.4197 19.25 57.25L24.5858 62.5858C25.3668 63.3668 26.6332 63.3668 27.4142 62.5858L32.75 57.25C33.5803 56.4197 32.9923 55 31.818 55Z"
            fill="#EB5757"
            stroke="#EB5757"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M47.9999 27.4998C46.8954 27.4998 45.9999 28.3952 45.9999 29.4998C45.9999 30.6043 46.8954 31.4998 47.9999 31.4998V27.4998ZM59.9999 31.4998C61.1045 31.4998 61.9999 30.6043 61.9999 29.4998C61.9999 28.3952 61.1045 27.4998 59.9999 27.4998V31.4998ZM53.6592 16.2228L51.8271 15.4207L51.8271 15.4207L53.6592 16.2228ZM43.1679 35.1978C42.7249 36.2097 43.186 37.3891 44.1978 37.8321C45.2097 38.2751 46.3891 37.814 46.8321 36.8022L43.1679 35.1978ZM54.3408 16.2228L56.1729 15.4207V15.4207L54.3408 16.2228ZM61.1679 36.8022C61.6109 37.814 62.7903 38.2751 63.8022 37.8321C64.814 37.3891 65.2751 36.2097 64.8321 35.1978L61.1679 36.8022ZM47.9999 31.4998H59.9999V27.4998H47.9999V31.4998ZM51.8271 15.4207L43.1679 35.1978L46.8321 36.8022L55.4913 17.025L51.8271 15.4207ZM52.5087 17.025L61.1679 36.8022L64.8321 35.1978L56.1729 15.4207L52.5087 17.025ZM54 18C53.3534 18 52.7681 17.6173 52.5087 17.025L56.1729 15.4207C55.795 14.5576 54.9422 14 54 14V18ZM55.4913 17.025C55.2319 17.6173 54.6466 18 54 18V14C53.0578 14 52.205 14.5576 51.8271 15.4207L55.4913 17.025Z"
            fill="#F2C94C"
          />
          <path
            d="M46.5333 42C45.4288 42 44.5333 42.8954 44.5333 44C44.5333 45.1046 45.4288 46 46.5333 46V42ZM61.4667 44H63.4667C63.4667 42.8954 62.5712 42 61.4667 42V44ZM62 66C63.1046 66 64 65.1046 64 64C64 62.8954 63.1046 62 62 62V66ZM46 64H44C44 65.1046 44.8954 66 46 66V64ZM61.4667 44.4167L63.0231 45.6726C63.3101 45.317 63.4667 44.8737 63.4667 44.4167H61.4667ZM46 63.5833L44.4436 62.3274C44.1565 62.683 44 63.1263 44 63.5833H46ZM46.5333 46H61.4667V42H46.5333V46ZM62 62H46V66H62V62ZM59.4667 44V44.4167H63.4667V44H59.4667ZM59.9102 43.1607L44.4436 62.3274L47.5564 64.8393L63.0231 45.6726L59.9102 43.1607ZM44 63.5833V64H48V63.5833H44Z"
            fill="#F2994A"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M31.818 55H20.182C19.0078 55 18.4197 56.4197 19.25 57.25L24.5858 62.5858C25.3668 63.3668 26.6332 63.3668 27.4142 62.5858L32.75 57.25C33.5803 56.4197 32.9923 55 31.818 55Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M26 55L26 16M47.9999 29.4998H59.9999M45 36L53.6592 16.2228C53.7185 16.0875 53.8522 16 54 16C54.1478 16 54.2815 16.0875 54.3408 16.2228L63 36M46.5333 44H61.4667V44.4167L46 63.5833V64H62M20.182 55H31.818C32.9923 55 33.5803 56.4197 32.75 57.25L27.4142 62.5858C26.6332 63.3668 25.3668 63.3668 24.5858 62.5858L19.25 57.25C18.4197 56.4197 19.0078 55 20.182 55Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M20.1821 53H24.0001L24.0001 16C24.0001 14.8954 24.8955 14 26.0001 14C27.1047 14 28.0001 14.8954 28.0001 16L28.0001 53H31.8181C34.7742 53 36.2546 56.574 34.1643 58.6642L28.8285 64C27.2664 65.5621 24.7338 65.5621 23.1717 64L17.8359 58.6642C15.7457 56.574 17.2261 53 20.1821 53ZM21.8285 57H30.1717L26.0001 61.1716L21.8285 57Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M46.8322 36.8022L49.1538 31.4998H58.8464L61.168 36.8022C61.611 37.814 62.7904 38.2751 63.8023 37.8321C64.8141 37.3891 65.2752 36.2097 64.8322 35.1978L56.173 15.4207C55.7951 14.5576 54.9423 14 54.0001 14C53.058 14 52.2051 14.5576 51.8272 15.4207L43.168 35.1978C42.725 36.2097 43.1861 37.3891 44.198 37.8321C45.2098 38.2751 46.3892 37.814 46.8322 36.8022ZM54.0001 20.431L50.9051 27.4998H57.0951L54.0001 20.431Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M61.4668 42C62.5714 42 63.4668 42.8954 63.4668 44V44.4167C63.4668 44.8737 63.3102 45.317 63.0232 45.6726L49.8478 62H62.0001C63.1047 62 64.0001 62.8954 64.0001 64C64.0001 65.1046 63.1047 66 62.0001 66H46.0001C44.8955 66 44.0001 65.1046 44.0001 64V63.5833C44.0001 63.1263 44.1567 62.683 44.4437 62.3274L57.6191 46H46.5334C45.4289 46 44.5334 45.1046 44.5334 44C44.5334 42.8954 45.4289 42 46.5334 42H61.4668Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreSortAlphaDown = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreSortAlphaDown.displayName = 'CoreSortAlphaDown'

export default CoreSortAlphaDown
