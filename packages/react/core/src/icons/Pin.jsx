
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M39.9998 48.75V67.25"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M51.9998 12.75C51.9998 15.2924 50.8138 17.5578 48.9649 19.0232L51.5842 36.0488C54.7639 38.2544 57.2743 41.3412 58.7781 44.9718C59.2868 46.1999 59.6701 47.4655 59.9279 48.75H20.072C20.3298 47.4655 20.7131 46.1999 21.2218 44.9718C22.7256 41.3413 25.2358 38.2547 28.4153 36.0492L31.0347 19.0232C29.1857 17.5578 27.9998 15.2924 27.9998 12.75H51.9998Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M39.9277 49V67.5"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M47.9277 13H51.9277C51.9277 15.5424 50.7418 17.8078 48.8928 19.2732L51.5122 36.2988C54.6919 38.5044 57.2023 41.5912 58.7061 45.2218C59.2148 46.4499 59.5981 47.7155 59.8559 49L20 49C20.2578 47.7155 20.6411 46.4499 21.1498 45.2218C22.6536 41.5913 25.1638 38.5047 28.3432 36.2992L30.9626 19.2732C29.1137 17.8078 27.9277 15.5424 27.9277 13H31.9277L47.9277 13Z"
            fill="currentColor"
          />
          <path
            d="M51.9277 13H53.9277C53.9277 11.8954 53.0323 11 51.9277 11V13ZM48.8928 19.2732L47.6506 17.7058C47.0872 18.1523 46.8068 18.8668 46.9161 19.5773L48.8928 19.2732ZM51.5122 36.2988L49.5354 36.603C49.6189 37.1453 49.9214 37.6295 50.3723 37.9422L51.5122 36.2988ZM58.7061 45.2218L60.5539 44.4565V44.4565L58.7061 45.2218ZM59.8559 49V51C60.4553 51 61.0231 50.7311 61.403 50.2675C61.7829 49.8038 61.9347 49.1941 61.8168 48.6064L59.8559 49ZM20 49L18.0391 48.6064C17.9211 49.1941 18.073 49.8038 18.4529 50.2674C18.8328 50.7311 19.4006 51 20 51V49ZM21.1498 45.2218L19.302 44.4565L19.302 44.4565L21.1498 45.2218ZM28.3432 36.2992L29.4832 37.9425C29.934 37.6298 30.2366 37.1456 30.32 36.6033L28.3432 36.2992ZM30.9626 19.2732L32.9394 19.5773C33.0487 18.8668 32.7683 18.1523 32.2049 17.7058L30.9626 19.2732ZM27.9277 13V11C26.8232 11 25.9277 11.8954 25.9277 13H27.9277ZM51.9277 11L47.9277 11V15L51.9277 15V11ZM50.1351 20.8406C52.4421 19.0122 53.9277 16.179 53.9277 13H49.9277C49.9277 14.9058 49.0414 16.6035 47.6506 17.7058L50.1351 20.8406ZM46.9161 19.5773L49.5354 36.603L53.4889 35.9947L50.8696 18.9691L46.9161 19.5773ZM50.3723 37.9422C53.2392 39.9308 55.5025 42.7139 56.8584 45.9872L60.5539 44.4565C58.902 40.4685 56.1445 37.078 52.6521 34.6555L50.3723 37.9422ZM56.8584 45.9872C57.3171 47.0946 57.6626 48.2355 57.895 49.3936L61.8168 48.6064C61.5336 47.1954 61.1126 45.8053 60.5539 44.4565L56.8584 45.9872ZM59.8559 47L20 47V51L59.8559 51V47ZM21.9609 49.3936C22.1933 48.2355 22.5388 47.0946 22.9975 45.9872L19.302 44.4565C18.7433 45.8053 18.3223 47.1954 18.0391 48.6064L21.9609 49.3936ZM22.9975 45.9872C24.3533 42.714 26.6165 39.9311 29.4832 37.9425L27.2033 34.6559C23.7111 37.0784 20.9538 40.4687 19.302 44.4565L22.9975 45.9872ZM30.32 36.6033L32.9394 19.5773L28.9859 18.9691L26.3665 35.9951L30.32 36.6033ZM25.9277 13C25.9277 16.179 27.4134 19.0122 29.7204 20.8406L32.2049 17.7058C30.814 16.6035 29.9277 14.9058 29.9277 13H25.9277ZM31.9277 11H27.9277V15H31.9277V11ZM31.9277 15L47.9277 15V11L31.9277 11V15Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M39.9277 49V67.5"
            stroke="#4F4F4F"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M47.9277 13H51.9277C51.9277 15.5424 50.7418 17.8078 48.8928 19.2732L51.5122 36.2988C54.6919 38.5044 57.2023 41.5912 58.7061 45.2218C59.2148 46.4499 59.5981 47.7155 59.8559 49L20 49C20.2578 47.7155 20.6411 46.4499 21.1498 45.2218C22.6536 41.5913 25.1638 38.5047 28.3432 36.2992L30.9626 19.2732C29.1137 17.8078 27.9277 15.5424 27.9277 13H31.9277L47.9277 13Z"
            fill="#EB5757"
          />
          <path
            d="M51.9277 13H53.9277C53.9277 11.8954 53.0323 11 51.9277 11V13ZM48.8928 19.2732L47.6506 17.7058C47.0872 18.1523 46.8068 18.8668 46.9161 19.5773L48.8928 19.2732ZM51.5122 36.2988L49.5354 36.603C49.6189 37.1453 49.9214 37.6295 50.3723 37.9422L51.5122 36.2988ZM58.7061 45.2218L60.5539 44.4565V44.4565L58.7061 45.2218ZM59.8559 49V51C60.4553 51 61.0231 50.7311 61.403 50.2675C61.7829 49.8038 61.9347 49.1941 61.8168 48.6064L59.8559 49ZM20 49L18.0391 48.6064C17.9211 49.1941 18.073 49.8038 18.4529 50.2674C18.8328 50.7311 19.4006 51 20 51V49ZM21.1498 45.2218L19.302 44.4565L19.302 44.4565L21.1498 45.2218ZM28.3432 36.2992L29.4832 37.9425C29.934 37.6298 30.2366 37.1456 30.32 36.6033L28.3432 36.2992ZM30.9626 19.2732L32.9394 19.5773C33.0487 18.8668 32.7683 18.1523 32.2049 17.7058L30.9626 19.2732ZM27.9277 13V11C26.8232 11 25.9277 11.8954 25.9277 13H27.9277ZM51.9277 11L47.9277 11V15L51.9277 15V11ZM50.1351 20.8406C52.4421 19.0122 53.9277 16.179 53.9277 13H49.9277C49.9277 14.9058 49.0414 16.6035 47.6506 17.7058L50.1351 20.8406ZM46.9161 19.5773L49.5354 36.603L53.4889 35.9947L50.8696 18.9691L46.9161 19.5773ZM50.3723 37.9422C53.2392 39.9308 55.5025 42.7139 56.8584 45.9872L60.5539 44.4565C58.902 40.4685 56.1445 37.078 52.6521 34.6555L50.3723 37.9422ZM56.8584 45.9872C57.3171 47.0946 57.6626 48.2355 57.895 49.3936L61.8168 48.6064C61.5336 47.1954 61.1126 45.8053 60.5539 44.4565L56.8584 45.9872ZM59.8559 47L20 47V51L59.8559 51V47ZM21.9609 49.3936C22.1933 48.2355 22.5388 47.0946 22.9975 45.9872L19.302 44.4565C18.7433 45.8053 18.3223 47.1954 18.0391 48.6064L21.9609 49.3936ZM22.9975 45.9872C24.3533 42.714 26.6165 39.9311 29.4832 37.9425L27.2033 34.6559C23.7111 37.0784 20.9538 40.4687 19.302 44.4565L22.9975 45.9872ZM30.32 36.6033L32.9394 19.5773L28.9859 18.9691L26.3665 35.9951L30.32 36.6033ZM25.9277 13C25.9277 16.179 27.4134 19.0122 29.7204 20.8406L32.2049 17.7058C30.814 16.6035 29.9277 14.9058 29.9277 13H25.9277ZM31.9277 11H27.9277V15H31.9277V11ZM31.9277 15L47.9277 15V11L31.9277 11V15Z"
            fill="#EB5757"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M52 12.75C52 15.2924 50.814 17.5578 48.9651 19.0232L51.5844 36.0488C54.7641 38.2544 57.2745 41.3412 58.7784 44.9718C59.2871 46.1999 59.6704 47.4655 59.9282 48.75H20.0723C20.3301 47.4655 20.7133 46.1999 21.222 44.9718C22.7258 41.3413 25.2361 38.2547 28.4155 36.0492L31.0349 19.0232C29.186 17.5578 28 15.2924 28 12.75H52Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M40 48.75V67.25M52 12.75C52 15.2924 50.814 17.5578 48.9651 19.0232L51.5844 36.0488C54.7641 38.2544 57.2745 41.3412 58.7784 44.9718C59.2871 46.1999 59.6704 47.4655 59.9282 48.75H20.0723C20.3301 47.4655 20.7133 46.1999 21.222 44.9718C22.7258 41.3413 25.2361 38.2547 28.4155 36.0492L31.0349 19.0232C29.186 17.5578 28 15.2924 28 12.75H52Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M27.9998 10.75C26.8952 10.75 25.9998 11.6454 25.9998 12.75C25.9998 15.4943 27.1069 17.9809 28.8938 19.7859L26.5656 34.9191C23.4092 37.2973 20.9123 40.4928 19.3741 44.2065C18.8153 45.5553 18.3943 46.9454 18.1111 48.3564C17.9932 48.9441 18.1451 49.5538 18.5249 50.0174C18.9048 50.4811 19.4726 50.75 20.072 50.75H37.9998V67.25C37.9998 68.3546 38.8952 69.25 39.9998 69.25C41.1043 69.25 41.9998 68.3546 41.9998 67.25V50.75H59.9279C60.5274 50.75 61.0952 50.4811 61.4751 50.0175C61.8549 49.5538 62.0068 48.9441 61.8888 48.3564C61.6056 46.9454 61.1846 45.5553 60.6259 44.2065C59.0876 40.4926 56.5905 37.297 53.4339 34.9187L51.1057 19.7859C52.8926 17.9809 53.9998 15.4943 53.9998 12.75C53.9998 11.6454 53.1043 10.75 51.9998 10.75H27.9998ZM57.3153 46.75C57.1973 46.4096 57.069 46.0719 56.9304 45.7372C55.5745 42.4639 53.3112 39.6808 50.4443 37.6922C49.9935 37.3795 49.6909 36.8953 49.6075 36.353L46.9881 19.3273C46.8788 18.6168 47.1592 17.9023 47.7226 17.4558C48.6017 16.7591 49.2792 15.8246 49.6588 14.75H30.3408C30.7204 15.8246 31.3979 16.7591 32.2769 17.4558C32.8403 17.9023 33.1207 18.6168 33.0114 19.3273L30.392 36.3533C30.3086 36.8956 30.0061 37.3798 29.5552 37.6925C26.6885 39.6811 24.4254 42.464 23.0696 45.7372C22.9309 46.0719 22.8026 46.4096 22.6847 46.75H57.3153Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CorePin = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CorePin.displayName = 'CorePin'

export default CorePin
