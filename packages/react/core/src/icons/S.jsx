
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M24 51.5V52C24 58.6274 29.3726 64 36 64H44.5425C50.8703 64 56 58.8703 56 52.5425C56 47.3563 52.5165 42.8169 47.5069 41.4751L41.0667 39.75L33.4675 37.8502C28.5303 36.6159 25.0667 32.1798 25.0667 27.0907C25.0667 20.9655 30.0321 16 36.1573 16L42.9333 16C49.5608 16 54.9333 21.3726 54.9333 28V28.5"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M33.4675 37.8502L32.7398 40.7606H32.7398L33.4675 37.8502ZM41.0667 39.75L41.8429 36.8522C41.8267 36.8478 41.8105 36.8436 41.7943 36.8396L41.0667 39.75ZM47.5069 41.4751L48.2832 38.5772L47.5069 41.4751ZM27 51.5C27 49.8431 25.6569 48.5 24 48.5C22.3431 48.5 21 49.8431 21 51.5H27ZM51.9333 28.5C51.9333 30.1569 53.2765 31.5 54.9333 31.5C56.5902 31.5 57.9333 30.1569 57.9333 28.5H51.9333ZM42.9333 13L36.1573 13V19L42.9333 19V13ZM36 67H44.5425V61H36V67ZM32.7398 40.7606L40.3391 42.6604L41.7943 36.8396L34.1951 34.9398L32.7398 40.7606ZM40.2905 42.6478L46.7307 44.3729L48.2832 38.5772L41.8429 36.8522L40.2905 42.6478ZM27 52V51.5H21V52H27ZM51.9333 28V28.5H57.9333V28H51.9333ZM59 52.5425C59 45.9984 54.6043 40.2704 48.2832 38.5772L46.7307 44.3729C50.4286 45.3634 53 48.7143 53 52.5425H59ZM22.0667 27.0907C22.0667 33.5564 26.4671 39.1924 32.7398 40.7606L34.1951 34.9398C30.5934 34.0393 28.0667 30.8032 28.0667 27.0907H22.0667ZM44.5425 67C52.5271 67 59 60.5271 59 52.5425H53C53 57.2134 49.2134 61 44.5425 61V67ZM36 61C31.0294 61 27 56.9706 27 52H21C21 60.2843 27.7157 67 36 67V61ZM42.9333 19C47.9039 19 51.9333 23.0294 51.9333 28H57.9333C57.9333 19.7157 51.2176 13 42.9333 13V19ZM36.1573 13C28.3753 13 22.0667 19.3086 22.0667 27.0907H28.0667C28.0667 22.6223 31.689 19 36.1573 19V13Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M33.4675 37.8502L32.9824 39.7905L33.4675 37.8502ZM41.0667 39.75L41.5841 37.8181C41.5734 37.8152 41.5626 37.8124 41.5517 37.8097L41.0667 39.75ZM47.5069 41.4751L48.0244 39.5432L47.5069 41.4751ZM26 51.5C26 50.3954 25.1046 49.5 24 49.5C22.8954 49.5 22 50.3954 22 51.5H26ZM52.9333 28.5C52.9333 29.6046 53.8288 30.5 54.9333 30.5C56.0379 30.5 56.9333 29.6046 56.9333 28.5H52.9333ZM42.9333 14L36.1573 14V18H42.9333V14ZM36 66H44.5425V62H36V66ZM32.9824 39.7905L40.5816 41.6903L41.5517 37.8097L33.9525 35.9099L32.9824 39.7905ZM40.5492 41.6819L46.9895 43.407L48.0244 39.5432L41.5841 37.8181L40.5492 41.6819ZM26 52V51.5H22V52H26ZM52.9333 28V28.5H56.9333V28H52.9333ZM58 52.5425C58 46.4511 53.9084 41.1192 48.0244 39.5432L46.9895 43.407C51.1245 44.5146 54 48.2616 54 52.5425H58ZM23.0667 27.0907C23.0667 33.0976 27.1549 38.3336 32.9824 39.7905L33.9525 35.9099C29.9057 34.8982 27.0667 31.2621 27.0667 27.0907H23.0667ZM44.5425 66C51.9749 66 58 59.9749 58 52.5425H54C54 57.7657 49.7657 62 44.5425 62V66ZM36 62C30.4772 62 26 57.5229 26 52H22C22 59.732 28.268 66 36 66V62ZM42.9333 18C48.4562 18 52.9333 22.4772 52.9333 28H56.9333C56.9333 20.268 50.6653 14 42.9333 14V18ZM36.1573 14C28.9276 14 23.0667 19.8609 23.0667 27.0907H27.0667C27.0667 22.07 31.1367 18 36.1573 18V14Z"
            fill="#EB5757"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M24 51.5V52C24 58.6274 29.3726 64 36 64H44.5425C50.8703 64 56 58.8703 56 52.5425C56 47.3563 52.5165 42.8169 47.5069 41.4751L41.0667 39.75L33.4675 37.8502C28.5303 36.6159 25.0667 32.1798 25.0667 27.0907C25.0667 20.9655 30.0321 16 36.1573 16H42.9333C49.5608 16 54.9333 21.3726 54.9333 28V28.5"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            d="M23.0667 27.0907C23.0667 19.8609 28.9276 14 36.1573 14L42.9333 14C50.6653 14 56.9333 20.268 56.9333 28V28.5C56.9333 29.6046 56.0379 30.5 54.9333 30.5C53.8288 30.5 52.9333 29.6046 52.9333 28.5V28C52.9333 22.4772 48.4562 18 42.9333 18H36.1573C31.1367 18 27.0667 22.07 27.0667 27.0907C27.0667 31.2621 29.9057 34.8982 33.9525 35.9099L41.5517 37.8097L41.5841 37.8181L48.0244 39.5432C53.9084 41.1192 58 46.4511 58 52.5425C58 59.9749 51.9749 66 44.5425 66H36C28.268 66 22 59.732 22 52V51.5C22 50.3954 22.8954 49.5 24 49.5C25.1046 49.5 26 50.3954 26 51.5V52C26 57.5228 30.4772 62 36 62L44.5425 62C49.7657 62 54 57.7657 54 52.5425C54 48.2616 51.1245 44.5146 46.9895 43.407L40.5654 41.6862L32.9824 39.7905C27.1549 38.3336 23.0667 33.0976 23.0667 27.0907Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreS = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreS.displayName = 'CoreS'

export default CoreS
