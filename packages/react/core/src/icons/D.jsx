
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M24 16L24 64"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M24.4468 16L32.2927 16C38.5761 16 44.6494 18.5682 49.0651 23.0384C53.4754 27.5031 56 33.5781 56 39.8538V40.1462C56 46.4219 53.4754 52.4969 49.0651 56.9616C44.6494 61.4318 38.5761 64 32.2927 64H24.4468"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M27 16C27 14.3431 25.6569 13 24 13C22.3431 13 21 14.3431 21 16H27ZM21 64C21 65.6569 22.3431 67 24 67C25.6569 67 27 65.6569 27 64H21ZM24.4469 13C22.7901 13 21.4469 14.3431 21.4469 16C21.4469 17.6569 22.7901 19 24.4469 19V13ZM24.4469 61C22.7901 61 21.4469 62.3431 21.4469 64C21.4469 65.6569 22.7901 67 24.4469 67V61ZM49.0653 56.9616L51.1996 59.0699H51.1996L49.0653 56.9616ZM49.0653 23.0384L51.1996 20.9301L49.0653 23.0384ZM21 16V16.5H27V16H21ZM21 16.5L21 38H27L27 16.5H21ZM21 38L21 63.5H27L27 38H21ZM21 63.5V64H27V63.5H21ZM53.0001 39.8538V40.1462L59.0001 40.1462V39.8538L53.0001 39.8538ZM24.4469 19H32.2929V13L24.4469 13V19ZM32.2929 61H24.4469V67H32.2929V61ZM46.931 54.8534C43.0719 58.76 37.7644 61 32.2929 61V67C39.3881 67 46.2272 64.1036 51.1996 59.0699L46.931 54.8534ZM53.0001 40.1462C53.0001 45.6229 50.7934 50.9432 46.931 54.8534L51.1996 59.0699C56.1577 54.0506 59.0001 47.2209 59.0001 40.1462L53.0001 40.1462ZM46.931 25.1466C50.7934 29.0568 53.0001 34.377 53.0001 39.8538L59.0001 39.8538C59.0001 32.7791 56.1577 25.9494 51.1996 20.9301L46.931 25.1466ZM51.1996 20.9301C46.2272 15.8964 39.3881 13 32.2929 13V19C37.7644 19 43.0719 21.24 46.931 25.1466L51.1996 20.9301Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M26 16C26 14.8954 25.1046 14 24 14C22.8954 14 22 14.8954 22 16H26ZM22 64C22 65.1046 22.8954 66 24 66C25.1046 66 26 65.1046 26 64H22ZM24.4469 14C23.3424 14 22.4469 14.8954 22.4469 16C22.4469 17.1046 23.3424 18 24.4469 18V14ZM24.4469 62C23.3424 62 22.4469 62.8954 22.4469 64C22.4469 65.1046 23.3424 66 24.4469 66V62ZM49.0653 56.9616L50.4881 58.3671L49.0653 56.9616ZM49.0653 23.0384L50.4881 21.6329L49.0653 23.0384ZM22 16V16.5H26V16H22ZM22 16.5L22 38H26L26 16.5H22ZM22 38L22 63.5H26L26 38H22ZM22 63.5V64H26V63.5H22ZM54.0001 39.8538V40.1462L58.0001 40.1462V39.8538L54.0001 39.8538ZM24.4469 18H32.2929V14L24.4469 14V18ZM32.2929 62H24.4469V66H32.2929V62ZM47.6424 55.5561C43.5978 59.6506 38.035 62 32.2929 62V66C39.1175 66 45.7013 63.213 50.4881 58.3671L47.6424 55.5561ZM54.0001 40.1462C54.0001 45.8893 51.6875 51.4611 47.6424 55.5561L50.4881 58.3671C55.2636 53.5327 58.0001 46.9545 58.0001 40.1462L54.0001 40.1462ZM47.6424 24.4439C51.6875 28.5389 54.0001 34.1107 54.0001 39.8538L58.0001 39.8538C58.0001 33.0455 55.2636 26.4673 50.4881 21.6329L47.6424 24.4439ZM50.4881 21.6329C45.7013 16.787 39.1175 14 32.2929 14V18C38.035 18 43.5978 20.3494 47.6424 24.4439L50.4881 21.6329Z"
            fill="#F2994A"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M24 16V64M24.4469 16H32.2929C38.5763 16 44.6496 18.5682 49.0653 23.0384C53.4756 27.5031 56.0001 33.5781 56.0001 39.8538V40.1462C56.0001 46.4219 53.4756 52.4969 49.0653 56.9616C44.6496 61.4318 38.5763 64 32.2929 64H24.4469"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M24.2234 14.0123C24.1501 14.0042 24.0755 14 24 14C22.8954 14 22 14.8954 22 16L22 64C22 65.1046 22.8954 66 24 66C24.0755 66 24.1501 65.9958 24.2234 65.9877C24.2968 65.9958 24.3713 66 24.4469 66H32.2928C39.1174 66 45.7013 63.213 50.488 58.3671C55.2636 53.5327 58.0001 46.9545 58.0001 40.1462V39.8538C58.0001 33.0455 55.2636 26.4673 50.488 21.6329C45.7013 16.787 39.1174 14 32.2928 14L24.4469 14C24.3713 14 24.2968 14.0042 24.2234 14.0123ZM26 18L26 62H32.2928C38.0349 62 43.5977 59.6506 47.6423 55.5561C51.6874 51.4611 54.0001 45.8893 54.0001 40.1462V39.8538C54.0001 34.1107 51.6874 28.5389 47.6423 24.4439C43.5977 20.3494 38.0349 18 32.2928 18H26Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreD = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreD.displayName = 'CoreD'

export default CoreD
