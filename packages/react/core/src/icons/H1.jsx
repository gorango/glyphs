
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M10 60V20"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M10 40H38"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M38 60V20"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M56 28.0001L63.7791 20.2173C63.8592 20.1372 63.9962 20.1939 63.9962 20.3073V60.0001"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M35 60.1083C35 61.7651 36.3431 63.1083 38 63.1083C39.6569 63.1083 41 61.7651 41 60.1083H35ZM41 20.1083C41 18.4514 39.6569 17.1083 38 17.1083C36.3431 17.1083 35 18.4514 35 20.1083H41ZM7 60.1083C7 61.7651 8.34315 63.1083 10 63.1083C11.6569 63.1083 13 61.7651 13 60.1083H7ZM13 20.1083C13 18.4514 11.6569 17.1083 10 17.1083C8.34315 17.1083 7 18.4514 7 20.1083H13ZM10 37.1083C8.34315 37.1083 7 38.4514 7 40.1083C7 41.7651 8.34315 43.1083 10 43.1083V37.1083ZM38 43.1083C39.6569 43.1083 41 41.7651 41 40.1083C41 38.4514 39.6569 37.1083 38 37.1083V43.1083ZM41 60.1083V20.1083H35V60.1083H41ZM13 60.1083V20.1083H7V60.1083H13ZM10 43.1083H38V37.1083H10V43.1083Z"
            fill="currentColor"
          />
          <path
            d="M53.8782 25.8792C52.7069 27.0511 52.7073 28.9506 53.8792 30.1219C55.051 31.2932 56.9505 31.2927 58.1218 30.1209L53.8782 25.8792ZM63.7791 20.2173L65.9009 22.3382L65.9009 22.3382L63.7791 20.2173ZM60.9962 60.0001C60.9962 61.6569 62.3394 63.0001 63.9962 63.0001C65.6531 63.0001 66.9962 61.6569 66.9962 60.0001H60.9962ZM58.1218 30.1209L65.9009 22.3382L61.6572 18.0965L53.8782 25.8792L58.1218 30.1209ZM60.9962 20.3073V60.0001H66.9962V20.3073H60.9962ZM65.9009 22.3382C64.0913 24.1486 60.9962 22.867 60.9962 20.3073H66.9962C66.9962 17.5209 63.6271 16.1258 61.6572 18.0965L65.9009 22.3382Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M36 60.1083C36 61.2128 36.8954 62.1083 38 62.1083C39.1046 62.1083 40 61.2128 40 60.1083H36ZM40 20.1083C40 19.0037 39.1046 18.1083 38 18.1083C36.8954 18.1083 36 19.0037 36 20.1083H40ZM8 60.1083C8 61.2128 8.89543 62.1083 10 62.1083C11.1046 62.1083 12 61.2128 12 60.1083H8ZM12 20.1083C12 19.0037 11.1046 18.1083 10 18.1083C8.89543 18.1083 8 19.0037 8 20.1083H12ZM10 38.1083C8.89543 38.1083 8 39.0037 8 40.1083C8 41.2128 8.89543 42.1083 10 42.1083V38.1083ZM38 42.1083C39.1046 42.1083 40 41.2128 40 40.1083C40 39.0037 39.1046 38.1083 38 38.1083V42.1083ZM40 60.1083V20.1083H36V60.1083H40ZM12 60.1083V20.1083H8V60.1083H12ZM10 42.1083H38V38.1083H10V42.1083Z"
            fill="#56CCF2"
          />
          <path
            d="M54.5855 26.5862C53.8046 27.3674 53.8049 28.6337 54.5861 29.4146C55.3673 30.1955 56.6337 30.1952 57.4145 29.4139L54.5855 26.5862ZM63.7791 20.2173L65.1936 21.6312L65.1936 21.6312L63.7791 20.2173ZM61.9962 60.0001C61.9962 61.1046 62.8917 62.0001 63.9962 62.0001C65.1008 62.0001 65.9962 61.1046 65.9962 60.0001H61.9962ZM57.4145 29.4139L65.1936 21.6312L62.3645 18.8035L54.5855 26.5862L57.4145 29.4139ZM61.9962 20.3073V60.0001H65.9962V20.3073H61.9962ZM65.1936 21.6312C64.0139 22.8114 61.9962 21.976 61.9962 20.3073H65.9962C65.9962 18.4119 63.7044 17.4629 62.3645 18.8035L65.1936 21.6312Z"
            fill="#2F80ED"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M38 60.1083V20.1083M10 60.1083V20.1083M10 40.1083H38M56 28L63.7791 20.2173C63.8592 20.1372 63.9963 20.1939 63.9963 20.3073V60"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M10 18.1083C11.1046 18.1083 12 19.0037 12 20.1083V38.1083H36V20.1083C36 19.0037 36.8954 18.1083 38 18.1083C39.1046 18.1083 40 19.0037 40 20.1083V60.1083C40 61.2128 39.1046 62.1083 38 62.1083C36.8954 62.1083 36 61.2128 36 60.1083V42.1083H12V60.1083C12 61.2128 11.1046 62.1083 10 62.1083C8.89543 62.1083 8 61.2128 8 60.1083V20.1083C8 19.0037 8.89543 18.1083 10 18.1083Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M62.3645 18.8034C63.7044 17.4629 65.9962 18.4119 65.9962 20.3073V60C65.9962 61.1046 65.1008 62 63.9962 62C62.8917 62 61.9962 61.1046 61.9962 60V24.8301L57.4145 29.4139C56.6337 30.1952 55.3673 30.1954 54.5861 29.4146C53.8049 28.6337 53.8046 27.3674 54.5855 26.5862L62.3645 18.8034Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreH1 = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreH1.displayName = 'CoreH1'

export default CoreH1
