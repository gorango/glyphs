
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M46 15C46 13.8954 45.1046 13 44 13H36C34.8954 13 34 13.8954 34 15V26.5653C34 26.8054 33.8054 27 33.5653 27L22 27C20.8954 27 20 27.8954 20 29V37C20 38.1046 20.8954 39 22 39H33.9512C33.9782 39 34 39.0218 34 39.0488V65C34 66.1046 34.8954 67 36 67H44C45.1046 67 46 66.1046 46 65V39.0488C46 39.0218 46.0218 39 46.0488 39H58C59.1046 39 60 38.1046 60 37V29C60 27.8954 59.1046 27 58 27H46.4347C46.1946 27 46 26.8054 46 26.5653V15Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M46 19V15C46 13.8954 45.1046 13 44 13L36 13C34.8954 13 34 13.8954 34 15V19V25.2333V25.636V26.1006V26.5653C34 26.8054 33.8054 27 33.5653 27H26L22 27C20.8954 27 20 27.8954 20 29V37C20 38.1046 20.8954 39 22 39H26H33.9512C33.9782 39 34 39.0218 34 39.0488L34 61V65C34 66.1046 34.8954 67 36 67H44C45.1046 67 46 66.1046 46 65V61L46 39.0488C46 39.0218 46.0218 39 46.0488 39L54 39H58C59.1046 39 60 38.1046 60 37L60 29C60 27.8954 59.1046 27 58 27H54L46.4347 27C46.1946 27 46 26.8054 46 26.5653V26.1006V25.636V25.2333V19Z"
            fill="currentColor"
          />
          <path
            d="M26 27L26 28.5H26V27ZM22 27L22 28.5L22 27ZM44.5 15V19H47.5V15H44.5ZM36 14.5H44V11.5H36V14.5ZM35.5 19V15H32.5V19L35.5 19ZM35.5 25.2333V19L32.5 19V25.2333H35.5ZM35.5 25.636V25.2333H32.5V25.636H35.5ZM35.5 26.1006V25.636H32.5V26.1006H35.5ZM35.5 26.5653V26.1006H32.5V26.5653H35.5ZM26 28.5H33.5653V25.5H26L26 28.5ZM22 28.5L26 28.5L26 25.5L22 25.5L22 28.5ZM21.5 37V29H18.5V37H21.5ZM26 37.5H22V40.5H26V37.5ZM33.9512 37.5H26V40.5H33.9512V37.5ZM35.5 61L35.5 39.0488H32.5L32.5 61H35.5ZM35.5 65V61H32.5V65H35.5ZM44 65.5H36V68.5H44L44 65.5ZM44.5 61V65H47.5V61H44.5ZM44.5 39.0488L44.5 61H47.5L47.5 39.0488H44.5ZM54 37.5L46.0488 37.5V40.5L54 40.5V37.5ZM58 37.5H54V40.5H58V37.5ZM58.5 29L58.5 37H61.5L61.5 29H58.5ZM54 28.5H58V25.5H54V28.5ZM46.4347 28.5L54 28.5V25.5L46.4347 25.5V28.5ZM44.5 26.1006V26.5653H47.5V26.1006H44.5ZM44.5 25.636V26.1006H47.5V25.636H44.5ZM44.5 25.2333V25.636H47.5V25.2333H44.5ZM44.5 19V25.2333H47.5V19H44.5ZM47.5 15C47.5 13.067 45.933 11.5 44 11.5V14.5C44.2761 14.5 44.5 14.7239 44.5 15H47.5ZM61.5 29C61.5 27.067 59.933 25.5 58 25.5V28.5C58.2761 28.5 58.5 28.7239 58.5 29H61.5ZM47.5 39.0488C47.5 39.8503 46.8503 40.5 46.0488 40.5V37.5C45.1934 37.5 44.5 38.1934 44.5 39.0488H47.5ZM44 68.5C45.933 68.5 47.5 66.933 47.5 65H44.5C44.5 65.2761 44.2761 65.5 44 65.5L44 68.5ZM32.5 65C32.5 66.933 34.067 68.5 36 68.5V65.5C35.7239 65.5 35.5 65.2761 35.5 65H32.5ZM58 40.5C59.933 40.5 61.5 38.933 61.5 37H58.5C58.5 37.2761 58.2761 37.5 58 37.5V40.5ZM18.5 37C18.5 38.933 20.067 40.5 22 40.5V37.5C21.7239 37.5 21.5 37.2761 21.5 37H18.5ZM32.5 26.5653C32.5 25.9769 32.9769 25.5 33.5653 25.5V28.5C34.6338 28.5 35.5 27.6338 35.5 26.5653H32.5ZM33.9512 40.5C33.1497 40.5 32.5 39.8503 32.5 39.0488H35.5C35.5 38.1934 34.8066 37.5 33.9512 37.5V40.5ZM46.4347 25.5C47.0231 25.5 47.5 25.9769 47.5 26.5653H44.5C44.5 27.6338 45.3662 28.5 46.4347 28.5V25.5ZM36 11.5C34.067 11.5 32.5 13.067 32.5 15H35.5C35.5 14.7239 35.7239 14.5 36 14.5V11.5ZM22 25.5C20.067 25.5 18.5 27.067 18.5 29H21.5C21.5 28.7239 21.7239 28.5 22 28.5L22 25.5Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M46 19V15C46 13.8954 45.1046 13 44 13L36 13C34.8954 13 34 13.8954 34 15V19V25.2333V25.636V26.1006V26.5653C34 26.8054 33.8054 27 33.5653 27H26L22 27C20.8954 27 20 27.8954 20 29V37C20 38.1046 20.8954 39 22 39H26H33.9512C33.9782 39 34 39.0218 34 39.0488L34 61V65C34 66.1046 34.8954 67 36 67H44C45.1046 67 46 66.1046 46 65V61L46 39.0488C46 39.0218 46.0218 39 46.0488 39L54 39H58C59.1046 39 60 38.1046 60 37L60 29C60 27.8954 59.1046 27 58 27H54L46.4347 27C46.1946 27 46 26.8054 46 26.5653V26.1006V25.636V25.2333V19Z"
            fill="#F2C94C"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M41.5 19V18.5C41.5 17.9477 41.0523 17.5 40.5 17.5H39.5C38.9477 17.5 38.5 17.9477 38.5 18.5V19V25.2333V25.636V26.1006V26.5653V27.0299V27.4326V27.8043V28.3V28.6407V29.0434V29.3841V29.7868V30.5C38.5 31.0523 38.0523 31.5 37.5 31.5H26H25.5C24.9477 31.5 24.5 31.9477 24.5 32.5V33.5C24.5 34.0523 24.9477 34.5 25.5 34.5H26H37.6064C38.0999 34.5 38.5 34.9001 38.5 35.3936V35.7653V36.075V36.4777V36.9114V37.2212V37.469V37.9026V38.3363V38.739V39.0488L38.5 61V61.5C38.5 62.0523 38.9477 62.5 39.5 62.5H40.5C41.0523 62.5 41.5 62.0523 41.5 61.5V61L41.5 39.0488V38.739V38.3363V37.9026V37.469V37.2212V36.9114V36.4777V36.075V35.7653V35.3936C41.5 34.9001 41.9001 34.5 42.3936 34.5H54H54.5C55.0523 34.5 55.5 34.0523 55.5 33.5V32.5C55.5 31.9477 55.0523 31.5 54.5 31.5H54L42.5 31.5C41.9477 31.5 41.5 31.0523 41.5 30.5V29.7868V29.3841V29.0434V28.6407V28.3V27.8043V27.4326V27.0299V26.5653V26.1006V25.636V25.2333V19Z"
            fill="#F2994A"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M46 15C46 13.8954 45.1046 13 44 13H36C34.8954 13 34 13.8954 34 15V26.5653C34 26.8054 33.8054 27 33.5653 27L22 27C20.8954 27 20 27.8954 20 29V37C20 38.1046 20.8954 39 22 39H33.9512C33.9782 39 34 39.0218 34 39.0488V65C34 66.1046 34.8954 67 36 67H44C45.1046 67 46 66.1046 46 65V39.0488C46 39.0218 46.0218 39 46.0488 39H58C59.1046 39 60 38.1046 60 37V29C60 27.8954 59.1046 27 58 27H46.4347C46.1946 27 46 26.8054 46 26.5653V15Z"
            fill="currentColor"
            fill-opacity="0.25"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M32 15C32 12.7909 33.7909 11 36 11H44C46.2091 11 48 12.7909 48 15V25H58C60.2091 25 62 26.7909 62 29V37C62 39.2091 60.2091 41 58 41H48V65C48 67.2091 46.2091 69 44 69H36C33.7909 69 32 67.2091 32 65V41H22C19.7909 41 18 39.2091 18 37V29C18 26.7909 19.7909 25 22 25L32 25V15ZM44 15H36V26.5653C36 27.9099 34.9099 29 33.5653 29L22 29V37H33.9512C35.0827 37 36 37.9173 36 39.0488V65H44V39.0488C44 37.9173 44.9173 37 46.0488 37H58V29H46.4347C45.0901 29 44 27.9099 44 26.5653V15Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreCrossChristian = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreCrossChristian.displayName = 'CoreCrossChristian'

export default CoreCrossChristian
