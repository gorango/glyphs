
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M34.8757 14.7586C37.8401 13.331 41.2933 13.331 44.2577 14.7586C47.2221 16.1862 49.3751 18.886 50.1073 22.0937C50.8394 25.3015 50.071 28.6681 48.0196 31.2405C45.9682 33.8129 42.857 35.3112 39.5667 35.3112C36.2765 35.3112 33.1653 33.8129 31.1139 31.2405C29.0624 28.6681 28.294 25.3015 29.0262 22.0937C29.7583 18.886 31.9113 16.1862 34.8757 14.7586Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M27.1128 26.4996H52.0208"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M32.7941 32.9276L34.4615 36.0678C34.6059 36.3396 34.6855 36.6411 34.6943 36.9487L35.5117 65.5575C35.5426 66.6394 36.4286 67.5004 37.5109 67.5004H41.6236C42.7059 67.5004 43.5918 66.6394 43.6227 65.5575L44.4404 36.9384C44.4492 36.6301 44.5293 36.3279 44.6743 36.0556L46.3393 32.9285C44.4375 34.4565 42.0535 35.312 39.5672 35.312C37.0805 35.312 34.696 34.4562 32.7941 32.9276Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M50.2291 27.3125H29.7708C30.1679 28.4729 30.764 29.5706 31.5471 30.5526C33.5985 33.125 36.7097 34.6233 40 34.6233C43.2902 34.6233 46.4014 33.125 48.4528 30.5526C49.2359 29.5706 49.8321 28.4729 50.2291 27.3125Z"
            fill="currentColor"
          />
          <path
            d="M34.8947 35.3799L33.2272 32.2397C35.1292 33.7682 37.5132 34.6233 40 34.6233C42.4862 34.6233 44.8707 33.7686 46.7724 32.2405L45.1074 35.3676C44.9624 35.6399 44.8824 35.9421 44.8736 36.2505L44.0559 64.8696C44.025 65.9515 43.139 66.8125 42.0567 66.8125H37.944C36.8617 66.8125 35.9758 65.9515 35.9449 64.8696L35.1275 36.2607C35.1187 35.9531 35.039 35.6517 34.8947 35.3799Z"
            fill="currentColor"
          />
          <path
            d="M44.6909 14.0707C41.7265 12.6431 38.2734 12.6431 35.309 14.0707C32.3446 15.4983 30.1915 18.1981 29.4594 21.4058C29.2396 22.3687 29.1551 23.3459 29.1998 24.3116H50.8001C50.8449 23.3459 50.7603 22.3687 50.5405 21.4058C49.8084 18.1981 47.6554 15.4983 44.6909 14.0707Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M33.2273 32.428L34.8948 35.5683C35.0391 35.8401 35.1188 36.1415 35.1275 36.4491L35.9449 65.058C35.9759 66.1399 36.8618 67.0008 37.9441 67.0008H42.0568C43.1391 67.0008 44.0251 66.1399 44.056 65.058L44.8737 36.4389C44.8825 36.1305 44.9625 35.8283 45.1075 35.556L46.7725 32.4289C44.8707 33.9569 42.4867 34.8125 40.0005 34.8125C37.5137 34.8125 35.1293 33.9566 33.2273 32.428Z"
            fill="#EB5757"
          />
          <path
            d="M35.309 14.2591C38.2734 12.8315 41.7266 12.8315 44.691 14.2591C47.6554 15.6866 49.8084 18.3864 50.5406 21.5942C51.2727 24.8019 50.5043 28.1685 48.4529 30.7409C46.4014 33.3134 43.2902 34.8116 40 34.8116C36.7098 34.8116 33.5986 33.3134 31.5471 30.7409C29.4957 28.1685 28.7273 24.8019 29.4594 21.5942C30.1916 18.3864 32.3446 15.6866 35.309 14.2591Z"
            fill="#BDBDBD"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M28.7576 28C28.3275 28 27.9417 27.7259 27.8288 27.3109C27.6232 26.5553 27.4882 25.7813 27.426 24.999C27.3823 24.4484 27.8341 24 28.3864 24L51.6137 24C52.166 24 52.6178 24.4484 52.5741 24.999C52.5119 25.7813 52.3768 26.5553 52.1713 27.3109C52.0584 27.7259 51.6726 28 51.2425 28L28.7576 28Z"
            fill="#EB5757"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M32.7941 32.9276L34.4615 36.0678C34.6059 36.3396 34.6855 36.641 34.6943 36.9487L35.5117 65.5575C35.5426 66.6394 36.4286 67.5004 37.5109 67.5004H41.6235C42.7059 67.5004 43.5918 66.6394 43.6227 65.5575L44.4404 36.9384C44.4492 36.63 44.5293 36.3279 44.6743 36.0556L46.3393 32.9284C44.4375 34.4565 42.0535 35.312 39.5672 35.312C37.0805 35.312 34.696 34.4562 32.7941 32.9276Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M34.8758 14.7586C37.8402 13.331 41.2934 13.331 44.2578 14.7586C47.2222 16.1862 49.3752 18.886 50.1074 22.0937C50.8395 25.3015 50.0711 28.6681 48.0197 31.2405C45.9682 33.8129 42.8575 35.312 39.5672 35.312C36.277 35.312 33.1654 33.8129 31.1139 31.2405C29.0625 28.6681 28.2941 25.3015 29.0262 22.0937C29.7584 18.886 31.9114 16.1862 34.8758 14.7586Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M39.5672 35.312C42.0535 35.312 44.4375 34.4565 46.3393 32.9284L44.6743 36.0556C44.5293 36.3279 44.4492 36.63 44.4404 36.9384L43.6227 65.5575C43.5918 66.6394 42.7059 67.5004 41.6235 67.5004H37.5109C36.4286 67.5004 35.5426 66.6394 35.5117 65.5575L34.6943 36.9487C34.6855 36.641 34.6059 36.3396 34.4615 36.0678L32.7941 32.9276C34.696 34.4562 37.0805 35.312 39.5672 35.312ZM39.5672 35.312C36.277 35.312 33.1654 33.8129 31.1139 31.2405C29.0625 28.6681 28.2941 25.3015 29.0262 22.0937C29.7584 18.886 31.9114 16.1862 34.8758 14.7586C37.8402 13.331 41.2934 13.331 44.2578 14.7586C47.2222 16.1862 49.3752 18.886 50.1074 22.0937C50.8395 25.3015 50.0711 28.6681 48.0197 31.2405C45.9682 33.8129 42.8575 35.312 39.5672 35.312ZM27.1128 26.4996H52.0208"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M34.4413 12.4571C37.9541 10.7654 42.046 10.7654 45.5588 12.4571C49.0716 14.1488 51.6229 17.348 52.4904 21.1491C52.7084 22.1041 52.8142 23.071 52.8117 24.0319C53.7456 24.2005 54.454 25.0175 54.454 26C54.454 27.1046 53.5586 28 52.454 28H52.1713C51.7014 29.4299 50.9779 30.7825 50.0166 31.9879C49.5133 32.6189 48.9563 33.1954 48.3547 33.7129L46.8728 36.496L46.0551 65.1151C45.9933 67.2788 44.2214 69.0008 42.0568 69.0008H37.9441C35.7795 69.0008 34.0076 67.2788 33.9457 65.115L33.1284 36.5062L31.6448 33.7124C31.0434 33.1951 30.4866 32.6187 29.9835 31.9879C29.0222 30.7825 28.2987 29.4299 27.8288 28H27.546C26.4415 28 25.546 27.1046 25.546 26C25.546 25.0175 26.2544 24.2005 27.1883 24.0319C27.1859 23.071 27.2916 22.1041 27.5096 21.1491C28.3772 17.348 30.9285 14.1488 34.4413 12.4571ZM32.1485 28C32.4157 28.5245 32.7372 29.0254 33.1108 29.4939C34.7828 31.5905 37.3184 32.8116 40 32.8116C42.6816 32.8116 45.2173 31.5905 46.8892 29.4939C47.2629 29.0254 47.5843 28.5245 47.8515 28H32.1485ZM48.8117 24H31.1883C31.1883 23.3463 31.2611 22.6888 31.4093 22.0392C32.006 19.4248 33.7608 17.2245 36.1768 16.061C38.5928 14.8975 41.4072 14.8975 43.8233 16.061C46.2393 17.2245 47.994 19.4248 48.5907 22.0392C48.739 22.6888 48.8118 23.3463 48.8117 24ZM37.1294 36.4867L37.9441 65.0008H42.0568L42.8715 36.4867C41.9387 36.7012 40.9762 36.8124 40.0004 36.8124C39.0247 36.8124 38.0622 36.7012 37.1294 36.4867Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreMicrophone2 = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreMicrophone2.displayName = 'CoreMicrophone2'

export default CoreMicrophone2
