
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M8.8125 49C8.8125 49.2761 9.03636 49.5 9.3125 49.5H46.3938C52.695 49.5 58.8086 47.3555 63.729 43.4191L69.6551 38.6783C71.2723 37.3845 71.5345 35.0246 70.2408 33.4074C68.947 31.7902 66.5871 31.528 64.9699 32.8217L59.0438 37.5626C58.2404 38.2054 57.2235 38.5 56.1945 38.5H34.8124C34.6744 38.5 34.5625 38.3881 34.5625 38.2501C34.5625 38.1146 34.6705 38.0037 34.806 38.0018C34.897 38.0006 34.988 38 35.0791 38H44.8125C46.8836 38 48.5625 36.3211 48.5625 34.25C48.5625 32.1789 46.8836 30.5 44.8125 30.5H35.0791C30.4929 30.5 25.9925 31.6364 21.974 33.7894C20.6071 34.5218 19.1042 35 17.5535 35H9.3125C9.03636 35 8.8125 35.2239 8.8125 35.5V49Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M9 48.625C9 48.9011 9.22386 49.125 9.5 49.125L46.5813 49.125C52.8825 49.125 58.9961 46.9805 63.9165 43.0441L69.8426 38.3033C71.4598 37.0095 71.722 34.6496 70.4283 33.0324C69.1345 31.4152 66.7746 31.153 65.1574 32.4467L59.2313 37.1876C58.4279 37.8304 57.411 38.125 56.382 38.125H55.5L34.9999 38.125C34.8619 38.125 34.75 38.0131 34.75 37.8751C34.75 37.7396 34.858 37.6287 34.9935 37.6268C35.0845 37.6256 35.1755 37.625 35.2666 37.625H45C47.0711 37.625 48.75 35.9461 48.75 33.875C48.75 31.8039 47.0711 30.125 45 30.125L35.2666 30.125C30.6804 30.125 26.18 31.2614 22.1615 33.4144C20.7946 34.1468 19.2917 34.625 17.741 34.625H9.5C9.22386 34.625 9 34.8489 9 35.125L9 48.625Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M9 48.625C9 48.9011 9.22386 49.125 9.5 49.125L46.5813 49.125C52.8825 49.125 58.9961 46.9805 63.9165 43.0441L69.8426 38.3033C71.4598 37.0095 71.722 34.6496 70.4283 33.0324C69.1345 31.4152 66.7746 31.153 65.1574 32.4467L59.2313 37.1876C58.4279 37.8304 57.411 38.125 56.382 38.125H55.5L34.9999 38.125C34.8619 38.125 34.75 38.0131 34.75 37.8751C34.75 37.7396 34.858 37.6287 34.9935 37.6268C35.0845 37.6256 35.1755 37.625 35.2666 37.625H45C47.0711 37.625 48.75 35.9461 48.75 33.875C48.75 31.8039 47.0711 30.125 45 30.125L35.2666 30.125C30.6804 30.125 26.18 31.2614 22.1615 33.4144C20.7946 34.1468 19.2917 34.625 17.741 34.625H9.5C9.22386 34.625 9 34.8489 9 35.125L9 48.625Z"
            fill="#F2C94C"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M8.8125 49C8.8125 49.2761 9.03636 49.5 9.3125 49.5H46.3938C52.695 49.5 58.8086 47.3555 63.729 43.4191L69.6551 38.6783C71.2723 37.3845 71.5345 35.0246 70.2408 33.4074C68.947 31.7902 66.5871 31.528 64.9699 32.8217L59.0438 37.5626C58.2404 38.2054 57.2235 38.5 56.1945 38.5H34.8124C34.6744 38.5 34.5625 38.3881 34.5625 38.2501C34.5625 38.1146 34.6705 38.0037 34.806 38.0018C34.897 38.0006 34.988 38 35.0791 38H44.8125C46.8836 38 48.5625 36.3211 48.5625 34.25C48.5625 32.1789 46.8836 30.5 44.8125 30.5H35.0791C30.4929 30.5 25.9925 31.6364 21.974 33.7894C20.6071 34.5218 19.1042 35 17.5535 35H9.3125C9.03636 35 8.8125 35.2239 8.8125 35.5V49Z"
            fill="currentColor"
            fill-opacity="0.25"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M21.217 31.6515C25.5251 29.3433 30.3498 28.125 35.2666 28.125H45C48.1756 28.125 50.75 30.6994 50.75 33.875C50.75 34.6735 50.5872 35.4339 50.2931 36.125H56.382C57.0418 36.125 57.5942 35.9361 57.9819 35.6259L63.908 30.885C66.3878 28.9012 70.0062 29.3032 71.99 31.783C73.9738 34.2628 73.5717 37.8812 71.092 39.865L65.1659 44.6058C59.8909 48.8259 53.3366 51.125 46.5813 51.125H9.5C8.11929 51.125 7 50.0057 7 48.625V35.125C7 33.7443 8.11929 32.625 9.5 32.625H17.741C18.8803 32.625 20.0586 32.2721 21.217 31.6515ZM35.2666 32.125C31.0109 32.125 26.8349 33.1795 23.106 35.1773C21.5306 36.0214 19.7032 36.625 17.741 36.625H11V47.125H46.5813C52.4283 47.125 58.1013 45.135 62.6672 41.4824L68.5932 36.7415C69.3479 36.1378 69.4703 35.0365 68.8665 34.2818C68.2628 33.5271 67.1615 33.4047 66.4068 34.0085L60.4807 38.7493C59.2615 39.7247 57.7802 40.125 56.382 40.125H34.9999C33.7573 40.125 32.75 39.1177 32.75 37.8751C32.75 36.6612 33.7215 35.6438 34.9665 35.627C35.0665 35.6257 35.1665 35.625 35.2666 35.625H45C45.9665 35.625 46.75 34.8415 46.75 33.875C46.75 32.9085 45.9665 32.125 45 32.125H35.2666Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreHandHolding = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreHandHolding.displayName = 'CoreHandHolding'

export default CoreHandHolding
