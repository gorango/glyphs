
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M37.6713 42.3288C39.3304 43.9878 39.9825 46.2724 39.6279 48.4233L56.085 64.8804C58.4281 67.2236 62.2271 67.2236 64.5703 64.8804C66.9134 62.5373 66.9134 58.7383 64.5703 56.3952L40.8665 32.6914C41.1587 32.0106 41.4042 31.3043 41.5992 30.5765C43.0406 25.1971 41.5027 19.4573 37.5646 15.5192C33.6266 11.5812 27.8868 10.0432 22.5073 11.4846C21.8572 11.6588 21.2243 11.8734 20.6114 12.1254L27.9558 19.4698L27.9527 19.473L31.1084 22.6287L29.3166 29.316L22.6293 31.1079L19.4735 27.9521L19.4705 27.9551L12.1258 20.6104C11.8736 21.2236 11.6589 21.8569 11.4846 22.5073C10.0432 27.8868 11.5812 33.6266 15.5192 37.5646C18.8474 40.8928 23.4625 42.5067 28.0594 42.0567C30.808 39.5983 35.0316 39.689 37.6713 42.3288ZM37.6713 42.3288L44.0876 35.9125"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M27.7719 42.3286C30.5055 39.5949 34.9377 39.5949 37.6713 42.3286C40.405 45.0622 40.405 49.4944 37.6713 52.2281L21.4079 68.4915C20.6268 69.2726 19.3605 69.2726 18.5795 68.4915L11.5084 61.4205C10.7273 60.6394 10.7273 59.3731 11.5084 58.592L27.7719 42.3286Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M37.6714 42.3284L48.9851 31.0146"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M63.127 11.2158L68.7839 16.8727L57.6546 30.8303L48.9849 31.0148L49.1693 22.3451L63.127 11.2158Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M11.6258 20.1104L13.6679 22.1525L14.0215 22.5061L18.9705 27.4551L18.9735 27.4521L22.1293 30.6079L28.8166 28.816L30.6084 22.1287L27.4527 18.973L27.4558 18.9698L22.5067 14.0208L22.1532 13.6672L20.1114 11.6254C20.7243 11.3734 21.3572 11.1588 22.0073 10.9846C27.3868 9.54322 33.1266 11.0812 37.0646 15.0192C41.0027 18.9573 42.5406 24.6971 41.0992 30.0765C40.9042 30.8043 40.6587 31.5106 40.3665 32.1914L40.4056 32.2305L34.9571 37.679C31.7179 36.7083 28.0628 37.5023 25.5041 40.061L24.0609 41.5041C20.6925 41.0722 17.4987 39.5441 15.0192 37.0646C11.0812 33.1266 9.54322 27.3868 10.9846 22.0073C11.1589 21.3569 11.3736 20.7236 11.6258 20.1104ZM41.1725 49.968L55.585 64.3804C57.9281 66.7236 61.7271 66.7236 64.0703 64.3804C66.4134 62.0373 66.4134 58.2383 64.0703 55.8952L46.7696 38.5945L41.3211 44.0429C41.9007 45.977 41.8512 48.0593 41.1725 49.968Z"
            fill="currentColor"
          />
          <path
            d="M37.1714 41.8284L48.4851 30.5146"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M62.6271 10.716L68.284 16.3728L57.1547 30.3305L48.485 30.515L48.6694 21.8452L62.6271 10.716Z"
            fill="currentColor"
          />
          <path
            d="M27.2719 41.8287C30.0056 39.095 34.4378 39.095 37.1714 41.8287C39.9051 44.5623 39.9051 48.9945 37.1714 51.7282L20.908 67.9916C20.1269 68.7727 18.8606 68.7727 18.0795 67.9916L11.0085 60.9205C10.2274 60.1395 10.2274 58.8732 11.0085 58.0921L27.2719 41.8287Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M11.6258 20.1104L13.6679 22.1525L14.0215 22.5061L18.9705 27.4551L18.9735 27.4521L22.1293 30.6079L28.8166 28.816L30.6085 22.1287L27.4527 18.973L27.4558 18.9698L22.5068 14.0208L22.1532 13.6672L20.1114 11.6254C20.7243 11.3734 21.3572 11.1588 22.0074 10.9846C27.3868 9.54322 33.1266 11.0812 37.0647 15.0192C41.0027 18.9573 42.5407 24.6971 41.0993 30.0765C40.9042 30.8043 40.6587 31.5106 40.3665 32.1914L64.0703 55.8952C66.4134 58.2383 66.4134 62.0373 64.0703 64.3804C61.7271 66.7236 57.9282 66.7236 55.585 64.3804L39.1279 47.9233C39.4826 45.7724 38.8304 43.4878 37.1713 41.8287C34.5316 39.189 30.308 39.0983 27.5595 41.5567C22.9626 42.0067 18.3474 40.3928 15.0193 37.0646C11.0812 33.1266 9.54325 27.3868 10.9847 22.0073C11.159 21.3569 11.3736 20.7236 11.6258 20.1104Z"
            fill="#828282"
          />
          <path
            d="M37.1714 41.8284L48.4851 30.5146"
            stroke="#E0E0E0"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M62.6271 10.716L68.284 16.3728L57.1547 30.3305L48.485 30.515L48.6694 21.8452L62.6271 10.716Z"
            fill="#E0E0E0"
          />
          <path
            d="M27.2719 41.8287C30.0056 39.095 34.4378 39.095 37.1714 41.8287C39.9051 44.5623 39.9051 48.9945 37.1714 51.7282L20.908 67.9916C20.1269 68.7727 18.8606 68.7727 18.0795 67.9916L11.0085 60.9205C10.2274 60.1395 10.2274 58.8732 11.0085 58.0921L27.2719 41.8287Z"
            fill="#F2C94C"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M11.6257 20.1098L13.6679 22.152L14.0214 22.5055L18.9705 27.4546L18.9735 27.4516L22.1292 30.6073L28.8165 28.8155L30.6084 22.1282L27.4526 18.9724L27.4557 18.9693L22.5067 14.0202L22.1531 13.6667L20.1113 11.6249C20.7242 11.3728 21.3572 11.1583 22.0073 10.9841C27.3867 9.54267 33.1266 11.0807 37.0646 15.0187C41.0026 18.9567 42.5406 24.6965 41.0992 30.076C39.6578 35.4554 35.4559 39.6573 30.0765 41.0987C24.697 42.5401 18.9572 41.0021 15.0192 37.0641C11.0811 33.1261 9.54317 27.3863 10.9846 22.0068C11.1589 21.3563 11.3735 20.7231 11.6257 20.1098Z"
            fill="#EB5757"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M12.1258 20.6104L19.4705 27.9551L19.4735 27.9521L22.6293 31.1079L29.3166 29.316L31.1084 22.6287L27.9527 19.473L27.9558 19.4698L20.6114 12.1254C21.2243 11.8734 21.8572 11.6588 22.5074 11.4846C27.8868 10.0432 33.6266 11.5812 37.5646 15.5192C41.5027 19.4573 43.0407 25.1971 41.5992 30.5765C41.4042 31.3043 41.1587 32.0106 40.8665 32.6914L64.5703 56.3952C66.9134 58.7383 66.9134 62.5373 64.5703 64.8804C62.2271 67.2236 58.4281 67.2236 56.085 64.8804L39.6279 48.4233C39.9825 46.2724 39.3304 43.9878 37.6713 42.3288C35.0316 39.689 30.808 39.5983 28.0595 42.0567C23.4626 42.5067 18.8474 40.8928 15.5192 37.5646C11.5812 33.6266 10.0432 27.8868 11.4847 22.5073C11.6589 21.8569 11.8736 21.2236 12.1258 20.6104Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M63.1272 11.216L68.784 16.8729L57.6548 30.8306L48.9851 31.015L49.1695 22.3453L63.1272 11.216Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M27.7719 42.3287C30.5055 39.5951 34.9377 39.5951 37.6713 42.3288C40.405 45.0624 40.405 49.4946 37.6713 52.2282L21.4079 68.4917C20.6268 69.2727 19.3605 69.2727 18.5795 68.4917L11.5084 61.4206C10.7273 60.6396 10.7273 59.3732 11.5084 58.5922L27.7719 42.3287Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M37.6713 42.3288C39.3304 43.9878 39.9825 46.2724 39.6279 48.4233L56.085 64.8804C58.4281 67.2236 62.2271 67.2236 64.5703 64.8804C66.9134 62.5373 66.9134 58.7383 64.5703 56.3952L40.8665 32.6914C41.1587 32.0106 41.4042 31.3043 41.5992 30.5765C43.0407 25.1971 41.5027 19.4573 37.5646 15.5192C33.6266 11.5812 27.8868 10.0432 22.5074 11.4846C21.8572 11.6588 21.2243 11.8734 20.6114 12.1254L27.9558 19.4698L27.9527 19.473L31.1084 22.6287L29.3166 29.316L22.6293 31.1079L19.4735 27.9521L19.4705 27.9551L12.1258 20.6104C11.8736 21.2236 11.6589 21.8569 11.4847 22.5073C10.0432 27.8868 11.5812 33.6266 15.5192 37.5646C18.8474 40.8928 23.4626 42.5067 28.0595 42.0567C30.808 39.5983 35.0316 39.689 37.6713 42.3288ZM37.6713 42.3288L44.0876 35.9125M37.6713 42.3288L48.9851 31.015M37.6713 42.3288C40.405 45.0624 40.405 49.4946 37.6713 52.2282L21.4079 68.4917C20.6268 69.2727 19.3605 69.2727 18.5795 68.4917L11.5084 61.4206C10.7273 60.6396 10.7273 59.3732 11.5084 58.5922L27.7719 42.3287C30.5055 39.5951 34.9377 39.5951 37.6713 42.3288ZM48.9851 31.015L57.6548 30.8306L68.784 16.8729L63.1272 11.216L49.1695 22.3453L48.9851 31.015Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M38.4786 13.6051C34.0353 9.16178 27.5591 7.42648 21.4895 9.05284C20.7563 9.2493 20.0422 9.4913 19.3505 9.77573C18.7319 10.0301 18.2814 10.5769 18.1501 11.2327C18.0187 11.8886 18.224 12.5667 18.6969 13.0397L25.9472 20.2899C25.9763 20.3232 26.0067 20.3557 26.0382 20.3872L28.3775 22.7265L27.1833 27.1831L22.7268 28.3772L20.3875 26.038C20.3563 26.0068 20.3244 25.9768 20.2917 25.9482L13.0398 18.6962C12.5668 18.2233 11.8888 18.0181 11.2329 18.1494C10.5771 18.2807 10.0303 18.7311 9.7759 19.3497C9.49128 20.0417 9.24912 20.7562 9.05256 21.4898C7.4262 27.5594 9.1615 34.0356 13.6048 38.4789C16.1842 41.0583 19.4485 42.725 22.9206 43.3513L9.59394 56.678C8.03184 58.2401 8.03184 60.7728 9.59394 62.3349L16.665 69.406C18.2271 70.9681 20.7598 70.9681 22.3219 69.406L38.5853 53.1425C39.09 52.6378 39.5223 52.088 39.882 51.5062L54.1705 65.7947C57.2947 68.9189 62.3601 68.9189 65.4842 65.7947C68.6084 62.6705 68.6084 57.6052 65.4842 54.481L46.4158 35.4125L49.3308 32.4975L57.1971 32.3302C57.7908 32.3175 58.3481 32.0418 58.7183 31.5775L69.8475 17.6198C70.4821 16.824 70.4178 15.6785 69.698 14.9587L64.0412 9.30188C63.3214 8.58214 62.1759 8.51777 61.3801 9.15234L47.4224 20.2816C46.9581 20.6518 46.6824 21.2091 46.6697 21.8028L46.5024 29.6691L43.5874 32.5841L42.6974 31.6941C42.82 31.3327 42.9313 30.9659 43.0308 30.5942C44.6572 24.5246 42.9219 18.0483 38.4786 13.6051ZM36.0933 43.6143C36.0047 43.5062 35.9109 43.4009 35.8118 43.2988C35.7937 43.2801 35.7754 43.2615 35.7569 43.243C34.8143 42.3005 33.5887 41.8129 32.3535 41.7803C32.2763 41.7782 32.1991 41.778 32.1219 41.7795C30.8756 41.8041 29.6368 42.292 28.6858 43.243L12.4224 59.5065L19.4934 66.5775L35.7569 50.3141C37.5901 48.4809 37.7022 45.5783 36.0933 43.6143ZM41.2125 47.1798L56.999 62.9663C58.5611 64.5284 61.0937 64.5284 62.6558 62.9663C64.2179 61.4042 64.2179 58.8715 62.6558 57.3094L43.5874 38.2409L39.8418 41.9865C40.8354 43.5632 41.2922 45.3812 41.2125 47.1798ZM32.907 37.8045C34.3412 37.9134 35.7542 38.3645 37.0134 39.158L40.7589 35.4125L38.9521 33.6057C38.3735 33.0271 38.2057 32.1546 38.5284 31.4027C38.783 30.8094 38.997 30.1937 39.1671 29.5589C40.4236 24.8697 39.083 19.8663 35.6502 16.4335C32.559 13.3423 28.1943 11.9476 23.9322 12.6181L28.8698 17.5557C28.9013 17.5872 28.9317 17.6196 28.9608 17.653L32.0224 20.7146C32.5277 21.2198 32.725 21.9562 32.54 22.6464L30.7482 29.3337C30.5633 30.0239 30.0242 30.563 29.334 30.7479L22.6467 32.5398C21.9565 32.7247 21.2201 32.5274 20.7148 32.0221L17.6519 28.9592C17.6192 28.9305 17.5872 28.9005 17.5561 28.8694L12.618 23.9313C11.9471 28.1938 13.3418 32.559 16.4332 35.6505C19.1924 38.4096 22.9666 39.8174 26.7767 39.6109C28.4619 38.3275 30.4964 37.7182 32.5131 37.7832C32.6445 37.7875 32.7759 37.7946 32.907 37.8045ZM62.4765 13.394L50.6489 22.8248L50.5288 28.4711L56.1751 28.351L65.6059 16.5234L62.4765 13.394Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreTools = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreTools.displayName = 'CoreTools'

export default CoreTools
