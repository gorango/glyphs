
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M31.001 15.2752C36.8138 13.1596 43.1862 13.1596 48.9991 15.2752C54.8119 17.3909 59.6934 21.487 62.7864 26.8442C65.8793 32.2013 66.9859 38.4769 65.9117 44.5688C64.8375 50.6607 61.6513 56.1794 56.9127 60.1556C52.174 64.1318 46.1859 66.3113 40 66.3113C33.8142 66.3113 27.8261 64.1318 23.0874 60.1556C18.3487 56.1794 15.1625 50.6607 14.0884 44.5688C13.0142 38.4769 14.1208 32.2013 17.2137 26.8442C20.3066 21.487 25.1882 17.3909 31.001 15.2752Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M40.0459 13.6895V40.1102V66.3122"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M17.2954 53.2181L40.0459 40.1094L62.796 53.2179"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M40.0802 40.0503L37.0802 40.0529C37.0812 41.1229 37.6518 42.1113 38.578 42.6471L40.0802 40.0503ZM40.0574 13.6895L43.0574 13.6869C43.056 12.0315 41.714 10.6902 40.0587 10.6895L40.0574 13.6895ZM62.8078 53.1983L65.4034 54.7026C65.8025 54.0138 65.9116 53.1947 65.7065 52.4255C65.5014 51.6563 64.9991 51.0002 64.31 50.6016L62.8078 53.1983ZM62.7958 53.2189L61.2981 55.8183C62.7301 56.6434 64.5596 56.1549 65.3898 54.7259L62.7958 53.2189ZM40.0456 40.1103L41.5433 37.5109C40.6163 36.9768 39.4749 36.9768 38.5478 37.5109L40.0456 40.1103ZM17.2954 53.2189L14.7014 54.7259C15.5316 56.1549 17.3612 56.6433 18.7931 55.8183L17.2954 53.2189ZM17.2834 53.1983L15.7812 50.6015C15.0921 51.0002 14.5897 51.6564 14.3846 52.4257C14.1796 53.195 14.2888 54.0142 14.688 54.7029L17.2834 53.1983ZM40.0109 40.0503L41.5132 42.6471C42.4393 42.1113 43.01 41.1229 43.0109 40.0529L40.0109 40.0503ZM40.0338 13.6895L40.0324 10.6895C38.3771 10.6902 37.0352 12.0315 37.0338 13.6869L40.0338 13.6895ZM43.0457 40.1104C43.0457 38.4535 41.7025 37.1104 40.0457 37.1104C38.3888 37.1104 37.0457 38.4535 37.0457 40.1104H43.0457ZM37.0457 66.3122C37.0457 67.9691 38.3888 69.3122 40.0457 69.3122C41.7025 69.3122 43.0457 67.9691 43.0457 66.3122H37.0457ZM43.0802 40.0477L43.0574 13.6869L37.0574 13.6921L37.0802 40.0529L43.0802 40.0477ZM64.31 50.6016L41.5825 37.4535L38.578 42.6471L61.3055 55.7951L64.31 50.6016ZM60.2122 51.6941C60.2088 51.6998 60.2054 51.7057 60.2018 51.7119L65.3898 54.7259C65.3942 54.7184 65.3988 54.7106 65.4034 54.7026L60.2122 51.6941ZM38.5478 42.7097L61.2981 55.8183L64.2936 50.6195L41.5433 37.5109L38.5478 42.7097ZM18.7931 55.8183L41.5433 42.7097L38.5478 37.5109L15.7976 50.6195L18.7931 55.8183ZM19.8894 51.7119C19.8858 51.7056 19.8822 51.6995 19.8788 51.6937L14.688 54.7029C14.6926 54.7108 14.6971 54.7185 14.7014 54.7259L19.8894 51.7119ZM38.5087 37.4535L15.7812 50.6015L18.7857 55.7951L41.5132 42.6471L38.5087 37.4535ZM37.0338 13.6869L37.0109 40.0477L43.0109 40.0529L43.0338 13.6921L37.0338 13.6869ZM40.0351 16.6895C40.0421 16.6895 40.0491 16.6895 40.056 16.6895L40.0587 10.6895C40.05 10.6895 40.0412 10.6895 40.0324 10.6895L40.0351 16.6895ZM37.0457 40.1104V66.3122H43.0457V40.1104H37.0457Z"
            fill="currentColor"
          />
          <path
            d="M31.001 15.2754C36.8138 13.1597 43.1862 13.1597 48.999 15.2754V15.2754C54.8119 17.3911 59.6934 21.4872 62.7863 26.8443V26.8443C65.8793 32.2014 66.9858 38.477 65.9117 44.5689V44.5689C64.8375 50.6608 61.6513 56.1795 56.9126 60.1557V60.1557C52.174 64.1319 46.1859 66.3114 40 66.3114V66.3114C33.8141 66.3114 27.826 64.1319 23.0874 60.1557V60.1557C18.3487 56.1795 15.1625 50.6608 14.0883 44.5689V44.5689C13.0142 38.477 14.1207 32.2014 17.2137 26.8443V26.8443C20.3066 21.4872 25.1881 17.3911 31.001 15.2754V15.2754Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'poly':
      return (
        <>
          <mask id="mask0" mask-type="alpha" maskUnits="userSpaceOnUse" x="11" y="11" width="58" height="58"><path fill-rule="evenodd" clip-rule="evenodd" d="M30.146 12.926C33.3323 11.7663 36.6723 11.1871 40.012 11.1885C43.3437 11.1899 46.6754 11.769 49.8541 12.926C56.2193 15.2427 61.5646 19.728 64.9514 25.5942C68.3383 31.4603 69.55 38.3322 68.3737 45.0029C67.7839 48.3478 66.6126 51.535 64.9371 54.4304C63.2712 57.3092 61.1067 59.8999 58.5197 62.0707C53.34 66.4169 46.7558 68.7996 40.0044 68.8113L40.0001 68.8113C33.2264 68.8113 26.6693 66.4247 21.4804 62.0707C18.9147 59.9177 16.7645 57.3517 15.1041 54.5012C13.4067 51.587 12.221 48.3751 11.6264 45.0029C10.4501 38.3322 11.6618 31.4603 15.0487 25.5942C18.4355 19.728 23.7808 15.2427 30.146 12.926ZM37.511 16.3189C35.593 16.5205 33.6937 16.9557 31.8561 17.6245C26.5956 19.5392 22.1778 23.2461 19.3788 28.0942C16.5797 32.9423 15.5783 38.6216 16.5504 44.1347C16.895 46.0889 17.4797 47.9779 18.282 49.7626L37.511 38.6101V16.3189ZM42.511 16.3212V38.606L61.7462 49.6999C62.5341 47.9336 63.1091 46.066 63.4497 44.1347C64.4218 38.6216 63.4204 32.9423 60.6213 28.0942C57.8223 23.2461 53.4045 19.5392 48.144 17.6245C46.3134 16.9582 44.4216 16.5238 42.511 16.3212ZM59.2412 54.0271L42.5092 44.377L42.5012 63.6751C47.194 63.172 51.6734 61.2883 55.3057 58.2405C56.7938 56.9918 58.1126 55.5752 59.2412 54.0271ZM37.5011 63.6798L37.5092 44.3913L20.7995 54.0826C21.9191 55.6091 23.2242 57.0068 24.6944 58.2405C28.3408 61.3002 32.8048 63.1843 37.5011 63.6798Z" fill="#333333"/></mask>
          <g mask="url(#mask0)"><path d="M40 72C32.4767 72 25.194 69.3493 19.4308 64.5134L40 40L40 72Z" fill="#EB5757"/><path d="M19.4308 64.5134C13.6676 59.6775 9.79255 52.9657 8.48615 45.5567L40 40L19.4308 64.5134Z" fill="#F2994A"/><path d="M8.48616 45.5567C7.17975 38.1477 8.52555 30.5153 12.2872 24L40 40L8.48616 45.5567Z" fill="#F2C94C"/><path d="M12.2872 24C16.0488 17.4846 21.9858 12.5029 29.0554 9.92983L40 40L12.2872 24Z" fill="#219653"/><path d="M29.0554 9.92983C36.1249 7.35672 43.8751 7.35672 50.9447 9.92984L40 40L29.0554 9.92983Z" fill="#27AE60"/><path d="M50.9446 9.92984C58.0142 12.503 63.9512 17.4847 67.7128 24L40 40L50.9446 9.92984Z" fill="#2F80ED"/><path d="M67.7128 24C71.4745 30.5154 72.8203 38.1478 71.5138 45.5568L40 40L67.7128 24Z" fill="#2D9CDB"/><path d="M71.5138 45.5567C70.2074 52.9657 66.3324 59.6776 60.5692 64.5134L40 40L71.5138 45.5567Z" fill="#9B51E0"/><path d="M60.5692 64.5134C54.806 69.3493 47.5233 72 40 72L40 40L60.5692 64.5134Z" fill="#BB6BD9"/></g>
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M40.0574 13.6893L40.0803 40.0502L62.8078 53.1982C62.8038 53.2051 62.7999 53.2119 62.7959 53.2188L40.0456 40.1102L17.2954 53.2187C17.2914 53.2119 17.2875 53.205 17.2835 53.1982L40.011 40.0502L40.0338 13.6893C40.0417 13.6893 40.0496 13.6893 40.0574 13.6893Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M31.001 15.2752C36.8138 13.1596 43.1862 13.1596 48.9991 15.2752C54.8119 17.3909 59.6934 21.487 62.7864 26.8442C65.8793 32.2013 66.9859 38.4769 65.9117 44.5688C64.8375 50.6607 61.6513 56.1794 56.9127 60.1556C52.174 64.1318 46.1859 66.3113 40 66.3113C33.8142 66.3113 27.8261 64.1318 23.0874 60.1556C18.3487 56.1794 15.1625 50.6607 14.0884 44.5688C13.0142 38.4769 14.1208 32.2013 17.2137 26.8442C20.3066 21.487 25.1882 17.3909 31.001 15.2752Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M40.0456 40.1102L62.7959 53.2188C62.7999 53.2119 62.8038 53.2051 62.8078 53.1982L40.0803 40.0502L40.0574 13.6893C40.0496 13.6893 40.0417 13.6893 40.0338 13.6893L40.011 40.0502L17.2835 53.1982C17.2875 53.205 17.2914 53.2119 17.2954 53.2187L40.0456 40.1102ZM40.0456 40.1102L40.0457 66.3121M17.2137 26.8442C20.3066 21.487 25.1882 17.3909 31.001 15.2752C36.8138 13.1596 43.1862 13.1596 48.9991 15.2752C54.8119 17.3909 59.6934 21.487 62.7864 26.8442C65.8793 32.2013 66.9859 38.4769 65.9117 44.5688C64.8375 50.6607 61.6513 56.1794 56.9127 60.1556C52.174 64.1318 46.1859 66.3113 40 66.3113C33.8142 66.3113 27.8261 64.1318 23.0874 60.1556C18.3487 56.1794 15.1625 50.6607 14.0884 44.5688C13.0142 38.4769 14.1208 32.2013 17.2137 26.8442Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M49.683 13.3968C43.4283 11.1203 36.5715 11.1203 30.3169 13.3968C24.0622 15.6734 18.8096 20.0808 15.4815 25.8451C12.1535 31.6095 10.9628 38.3621 12.1186 44.9171C13.2745 51.472 16.7029 57.4102 21.8017 61.6886C26.898 65.9649 33.3372 68.3098 39.9897 68.3122C40.0084 68.3128 40.0271 68.313 40.0458 68.313C40.067 68.313 40.0881 68.3127 40.1091 68.312C46.7264 68.2865 53.1272 65.9437 58.1981 61.6886C60.6264 59.6511 62.6758 57.2371 64.2813 54.5593C64.3738 54.4565 64.457 54.3426 64.5289 54.2179C64.5988 54.0966 64.6545 53.971 64.6966 53.8431C66.2405 51.0886 67.3245 48.0744 67.8812 44.9171C69.037 38.3621 67.8464 31.6095 64.5183 25.8452C61.1903 20.0808 55.9377 15.6734 49.683 13.3968ZM61.9608 50.43C62.8901 48.4731 63.5603 46.3869 63.942 44.2225C64.9345 38.5936 63.912 32.7951 61.0542 27.8452C58.1964 22.8952 53.6859 19.1105 48.3149 17.1556C46.2807 16.4152 44.1722 15.9552 42.0458 15.7757V38.9551L61.9608 50.43ZM38.0458 15.7681C35.8883 15.942 33.7485 16.4045 31.6849 17.1556C26.314 19.1105 21.8035 22.8952 18.9456 27.8451C16.0878 32.7951 15.0654 38.5936 16.0579 44.2225C16.4422 46.4022 17.1192 48.5026 18.0589 50.4715L38.0458 38.9551V15.7681ZM20.0728 53.9276C21.2854 55.6627 22.7279 57.2442 24.3729 58.6245C28.2501 61.8779 33.0327 63.8295 38.0458 64.2336V43.5716L20.0728 53.9276ZM42.0458 64.226C47.0255 63.8056 51.7734 61.858 55.627 58.6245C57.2839 57.2342 58.7354 55.6398 59.9534 53.8898L42.0458 43.5716V64.226Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CorePeace = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CorePeace.displayName = 'CorePeace'

export default CorePeace
