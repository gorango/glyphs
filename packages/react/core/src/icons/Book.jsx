
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M22 11H63.0204C63.5614 11 64 11.4386 64 11.9796V56.75C64 56.8881 63.8881 57 63.75 57H22C18.7702 57 16.1364 59.552 16.0051 62.7496C16.0049 62.7548 16 62.7552 16 62.75V17C16 13.6863 18.6863 11 22 11Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M63.75 69H22C18.6863 69 16 66.3137 16 63"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M63.75 69C63.8881 69 64 68.8881 64 68.75V68.2983C64 67.7268 63.7412 67.1942 63.3755 66.755C62.5166 65.7236 62 64.3971 62 62.95C62 61.5029 62.5166 60.1764 63.3755 59.145C63.7412 58.7058 64 58.1732 64 57.6017V57.0625C64 57.028 63.972 57 63.9375 57"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M22 11L63.0204 11C63.5614 11 64 11.4386 64 11.9796L64 56.75C64 56.8881 63.8881 57 63.75 57H58L27.75 57H22C18.7702 57 16.1364 59.552 16.0051 62.7496C16.0049 62.7548 16 62.7552 16 62.75L16 17C16 13.6863 18.6863 11 22 11Z"
            fill="currentColor"
          />
          <path
            d="M16.0051 62.7496L19.0026 62.8727L16.0051 62.7496ZM63.0204 8L22 8V14L63.0204 14V8ZM67 11.9796C67 9.78172 65.2183 8 63.0204 8V14C61.9046 14 61 13.0954 61 11.9796L67 11.9796ZM67 56.75V11.9796L61 11.9796L61 56.75H67ZM63.75 60C65.5449 60 67 58.5449 67 56.75H61C61 55.2312 62.2312 54 63.75 54V60ZM58 60H63.75V54H58V60ZM58 54L27.75 54V60L58 60V54ZM27.75 54H22V60H27.75V54ZM22 54C17.1545 54 13.2046 57.828 13.0077 62.6266L19.0026 62.8727C19.0681 61.2761 20.3858 60 22 60V54ZM13 17L13 62.75H19L19 17H13ZM22 8C17.0294 8 13 12.0294 13 17H19C19 15.3431 20.3431 14 22 14V8ZM13.0077 62.6266C13.0358 61.9398 13.5573 59.9225 15.7864 59.7615C16.9011 59.681 17.8434 60.2177 18.3912 60.9401C18.8991 61.6099 19 62.3121 19 62.75H13C13 63.1905 13.1015 63.8945 13.6104 64.5656C14.1591 65.2892 15.1026 65.8265 16.2186 65.7459C18.4502 65.5847 18.9742 63.5646 19.0026 62.8727L13.0077 62.6266Z"
            fill="currentColor"
          />
          <path
            d="M63.3755 59.145L61.0701 57.2253L63.3755 59.145ZM63.3755 66.755L61.0701 68.6747L63.3755 66.755ZM67 68.75V68.2983L61 68.2983V68.75L67 68.75ZM63.75 72C65.5449 72 67 70.5449 67 68.75L61 68.75C61 67.2312 62.2312 66 63.75 66V72ZM63.5 72H63.75V66H63.5V72ZM22 72H63.5V66H22L22 72ZM13 63C13 67.9706 17.0294 72 22 72L22 66C20.3431 66 19 64.6569 19 63H13ZM22 54C17.0294 54 13 58.0294 13 63H19C19 61.3431 20.3431 60 22 60V54ZM63.9375 54L22 54V60L63.9375 60V54ZM67 57.0625C67 55.3712 65.6289 54 63.9375 54V60C62.3151 60 61 58.6848 61 57.0625H67ZM67 57.6017V57.0625H61V57.6017H67ZM65 62.95C65 62.2299 65.2542 61.5771 65.6809 61.0647L61.0701 57.2253C59.7791 58.7757 59 60.7758 59 62.95H65ZM65.6809 64.8353C65.2542 64.3229 65 63.6701 65 62.95H59C59 65.1242 59.7791 67.1242 61.0701 68.6747L65.6809 64.8353ZM61 57.6017C61 57.4284 61.04 57.3058 61.0644 57.2483C61.0868 57.1956 61.0982 57.1916 61.0701 57.2253L65.6809 61.0647C66.334 60.2804 67 59.0911 67 57.6017H61ZM67 68.2983C67 66.8089 66.334 65.6196 65.6809 64.8353L61.0701 68.6747C61.0982 68.7084 61.0868 68.7044 61.0644 68.6517C61.04 68.5942 61 68.4715 61 68.2983L67 68.2983Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M22 11L63.0204 11C63.5614 11 64 11.4386 64 11.9796L64 56.75C64 56.8881 63.8881 57 63.75 57H58L27.75 57H22C18.7702 57 16.1364 59.552 16.0051 62.7496C16.0049 62.7548 16 62.7552 16 62.75L16 17C16 13.6863 18.6863 11 22 11Z"
            fill="#219653"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M63.3755 66.755C63.7412 67.1942 64 67.7268 64 68.2983V68.75C64 68.8881 63.8881 69 63.75 69H63.5H22C18.6863 69 16 66.3137 16 63C16 59.6863 18.6863 57 22 57L63.9375 57C63.972 57 64 57.028 64 57.0625V57.6017C64 58.1732 63.7412 58.7058 63.3755 59.145C62.5166 60.1764 62 61.5029 62 62.95C62 64.3971 62.5166 65.7236 63.3755 66.755Z"
            fill="#6FCF97"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M22 11H63.0204C63.5614 11 64 11.4386 64 11.9796V56.75C64 56.8881 63.8881 57 63.75 57H22C18.7702 57 16.1364 59.552 16.0051 62.7496C16.0049 62.7548 16 62.7552 16 62.75V17C16 13.6863 18.6863 11 22 11Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M63.3755 66.755C63.7412 67.1942 64 67.7268 64 68.2983V68.75C64 68.8881 63.8881 69 63.75 69H22C18.6863 69 16 66.3137 16 63C16 59.6863 18.6863 57 22 57H63.9375C63.972 57 64 57.028 64 57.0625V57.6017C64 58.1732 63.7412 58.7058 63.3755 59.145C62.5166 60.1764 62 61.5029 62 62.95C62 64.3971 62.5166 65.7236 63.3755 66.755Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M22 57C18.7702 57 16.1364 59.552 16.0051 62.7496C16.0049 62.7548 16 62.7552 16 62.75V17C16 13.6863 18.6863 11 22 11H63.0204C63.5614 11 64 11.4386 64 11.9796V56.75C64 56.8881 63.8881 57 63.75 57H22ZM22 57C18.6863 57 16 59.6863 16 63C16 66.3137 18.6863 69 22 69H63.75C63.8881 69 64 68.8881 64 68.75V68.2983C64 67.7268 63.7412 67.1942 63.3755 66.755C62.5166 65.7236 62 64.3971 62 62.95C62 61.5029 62.5166 60.1764 63.3755 59.145C63.7412 58.7058 64 58.1732 64 57.6017V57.0625C64 57.028 63.972 57 63.9375 57H22Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M22 9C17.5817 9 14 12.5817 14 17V62.75C14 62.776 14.0005 62.8034 14.0017 62.832C14.0006 62.8878 14 62.9439 14 63C14 67.4183 17.5817 71 22 71H63.75C64.9927 71 66 69.9926 66 68.75V68.2983C66 67.1148 65.4697 66.1445 64.9124 65.4752C64.3416 64.7898 64 63.9124 64 62.95C64 61.9876 64.3416 61.1102 64.9124 60.4248C65.4697 59.7555 66 58.7852 66 57.6017V57.0625C66 57.0111 65.9981 56.9601 65.9944 56.9097C65.9981 56.8569 66 56.8037 66 56.75V11.9796C66 10.334 64.666 9 63.0204 9H22ZM61.0496 59H22C21.7309 59 21.468 59.0266 21.2138 59.0773C20.4642 59.2267 19.7901 59.5856 19.2551 60.0904C18.4823 60.8197 18 61.8535 18 63C18 65.2091 19.7909 67 22 67H61.1079C60.4045 65.8135 60 64.4275 60 62.95C60 61.5138 60.3822 60.1641 61.0496 59ZM62 55V13H22C19.7909 13 18 14.7909 18 17V56.0702C18.695 55.6681 19.4562 55.3677 20.2631 55.189C20.8223 55.0653 21.4035 55 22 55H62Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreBook = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreBook.displayName = 'CoreBook'

export default CoreBook
