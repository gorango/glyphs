
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M12 66C12 62.6863 14.6863 60 18 60H62C65.3137 60 68 62.6863 68 66C68 67.1046 67.1046 68 66 68H14C12.8954 68 12 67.1046 12 66Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M48 60.0005C56.8366 60.0005 64 52.8371 64 44.0005C64 35.4998 57.3707 28.5474 49 28.0312"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M45.6785 16.0573C47.5645 16.3796 49 18.0221 49 20V44H31V20C31 18.0221 32.4355 16.3796 34.3215 16.0573C35.1288 13.697 37.3662 12 40 12C42.6338 12 44.8712 13.697 45.6785 16.0573Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M34 44V51C34 51.5523 34.4477 52 35 52H45C45.5523 52 46 51.5523 46 51V44"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M36 52V53C36 53.5523 36.4477 54 37 54H43C43.5523 54 44 53.5523 44 53V52"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M12 66C12 62.6863 14.6863 60 18 60H62C65.3137 60 68 62.6863 68 66C68 67.1046 67.1046 68 66 68H14C12.8954 68 12 67.1046 12 66Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M45.6785 16.0573C47.5645 16.3796 49 18.0221 49 20V43C49 43.5523 48.5523 44 48 44H32C31.4477 44 31 43.5523 31 43V20C31 18.0221 32.4355 16.3796 34.3215 16.0573C35.1288 13.697 37.3662 12 40 12C42.6338 12 44.8712 13.697 45.6785 16.0573Z"
            fill="currentColor"
          />
          <path
            d="M34 44H46V51C46 51.5523 45.5523 52 45 52H35C34.4477 52 34 51.5523 34 51V44Z"
            fill="currentColor"
          />
          <path
            d="M36 52H44V53C44 53.5523 43.5523 54 43 54H37C36.4477 54 36 53.5523 36 53V52Z"
            fill="currentColor"
          />
          <path
            d="M40 57.0005C38.3431 57.0005 37 58.3437 37 60.0005C37 61.6574 38.3431 63.0005 40 63.0005V57.0005ZM49.1846 25.0369C47.5309 24.935 46.1077 26.1929 46.0057 27.8466C45.9037 29.5003 47.1616 30.9236 48.8154 31.0256L49.1846 25.0369ZM48 57.0005H40V63.0005H48V57.0005ZM61 44.0005C61 51.1802 55.1797 57.0005 48 57.0005V63.0005C58.4934 63.0005 67 54.4939 67 44.0005H61ZM48.8154 31.0256C55.6138 31.4448 61 37.0948 61 44.0005H67C67 33.9048 59.1277 25.6501 49.1846 25.0369L48.8154 31.0256Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M12 66C12 62.6863 14.6863 60 18 60H62C65.3137 60 68 62.6863 68 66C68 67.1046 67.1046 68 66 68H14C12.8954 68 12 67.1046 12 66Z"
            fill="#828282"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M45.6785 16.0573C47.5645 16.3796 49 18.0221 49 20V43C49 43.5523 48.5523 44 48 44H32C31.4477 44 31 43.5523 31 43V20C31 18.0221 32.4355 16.3796 34.3215 16.0573C35.1288 13.697 37.3662 12 40 12C42.6338 12 44.8712 13.697 45.6785 16.0573Z"
            fill="#F2F2F2"
          />
          <path
            d="M45.6785 16.0573L43.7861 16.7046C44.0231 17.3974 44.6198 17.9054 45.3417 18.0287L45.6785 16.0573ZM34.3215 16.0573L34.6583 18.0287C35.3802 17.9054 35.9769 17.3974 36.2139 16.7046L34.3215 16.0573ZM45.3417 18.0287C46.2832 18.1896 47 19.0131 47 20H51C51 17.0312 48.8458 14.5695 46.0154 14.0859L45.3417 18.0287ZM47 20V43H51V20H47ZM47 43C47 42.4477 47.4477 42 48 42V46C49.6569 46 51 44.6569 51 43H47ZM48 42H32V46H48V42ZM32 42C32.5523 42 33 42.4477 33 43H29C29 44.6569 30.3431 46 32 46V42ZM33 43V20H29V43H33ZM33 20C33 19.0131 33.7168 18.1896 34.6583 18.0287L33.9846 14.0859C31.1542 14.5695 29 17.0312 29 20H33ZM36.2139 16.7046C36.7529 15.1286 38.2472 14 40 14V10C36.4852 10 33.5046 12.2655 32.4291 15.4101L36.2139 16.7046ZM40 14C41.7528 14 43.2471 15.1286 43.7861 16.7046L47.5709 15.4101C46.4954 12.2655 43.5148 10 40 10V14Z"
            fill="#BDBDBD"
          />
          <path
            d="M34 44H46V51C46 51.5523 45.5523 52 45 52H35C34.4477 52 34 51.5523 34 51V44Z"
            fill="#BDBDBD"
          />
          <path
            d="M36 52H44V53C44 53.5523 43.5523 54 43 54H37C36.4477 54 36 53.5523 36 53V52Z"
            fill="#828282"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M49 30.0352C56.2653 30.5479 62 36.6043 62 44C62 51.732 55.732 58 48 58H40C38.8954 58 38 58.8955 38 60C38 61.1046 38.8954 62 40 62H48C57.9411 62 66 53.9412 66 44C66 34.3945 58.476 26.5462 49 26.0273V30.0352Z"
            fill="#828282"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M12 66C12 62.6863 14.6863 60 18 60H62C65.3137 60 68 62.6863 68 66C68 67.1046 67.1046 68 66 68H14C12.8954 68 12 67.1046 12 66Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M45.6785 16.0573C47.5645 16.3796 49 18.0221 49 20V43C49 43.5523 48.5523 44 48 44H32C31.4477 44 31 43.5523 31 43V20C31 18.0221 32.4355 16.3796 34.3215 16.0573C35.1288 13.697 37.3662 12 40 12C42.6338 12 44.8712 13.697 45.6785 16.0573Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M34 44H46V51C46 51.5523 45.5523 52 45 52H35C34.4477 52 34 51.5523 34 51V44Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M36 52H44V53C44 53.5523 43.5523 54 43 54H37C36.4477 54 36 53.5523 36 53V52Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M40 60H48C56.8366 60 64 52.8366 64 44C64 35.4993 57.3707 28.547 49 28.0308M12 66C12 67.1046 12.8954 68 14 68H66C67.1046 68 68 67.1046 68 66C68 62.6863 65.3137 60 62 60H18C14.6863 60 12 62.6863 12 66ZM45.6785 16.0573C47.5645 16.3796 49 18.0221 49 20V43C49 43.5523 48.5523 44 48 44H32C31.4477 44 31 43.5523 31 43V20C31 18.0221 32.4355 16.3796 34.3215 16.0573C35.1288 13.697 37.3662 12 40 12C42.6338 12 44.8712 13.697 45.6785 16.0573ZM34 44H46V51C46 51.5523 45.5523 52 45 52H35C34.4477 52 34 51.5523 34 51V44ZM36 52H44V53C44 53.5523 43.5523 54 43 54H37C36.4477 54 36 53.5523 36 53V52Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M51 26.2491V20C51 17.4402 49.3985 15.2574 47.1428 14.3945C45.8252 11.7892 43.1236 10 40 10C36.8764 10 34.1748 11.7892 32.8572 14.3945C30.6015 15.2574 29 17.4402 29 20V44C29 45.1046 29.8954 46 31 46H32V52C32 53.1046 32.8954 54 34 54C34 55.1046 34.8954 56 36 56H44C45.1046 56 46 55.1046 46 54C47.1046 54 48 53.1046 48 52V46H49C50.1046 46 51 45.1046 51 44V30.3219C57.2897 31.6948 62 37.298 62 44C62 51.7242 55.7446 57.9874 48.0234 58H18C13.5817 58 10 61.5817 10 66C10 68.2091 11.7909 70 14 70H66C68.2091 70 70 68.2091 70 66C70 61.5817 66.4183 58 62 58H59.3147C63.3927 54.7001 66 49.6545 66 44C66 35.0809 59.5139 27.678 51 26.2491ZM40 14C38.2472 14 36.7529 15.1286 36.2139 16.7046C35.9769 17.3974 35.3802 17.9054 34.6583 18.0287C33.7168 18.1896 33 19.0131 33 20V42H47V28.049C46.9999 28.0381 46.9999 28.0272 47 28.0163V20C47 19.0131 46.2832 18.1896 45.3417 18.0287C44.6198 17.9054 44.0231 17.3974 43.7861 16.7046C43.2471 15.1286 41.7528 14 40 14ZM39.9912 62C39.9941 62 39.9971 62 40 62H48C48.0088 62 48.0177 62 48.0265 62H62C64.2091 62 66 63.7909 66 66H14C14 63.7909 15.7909 62 18 62H39.9912ZM44 46V50H36V46H44Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreMicroscope = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreMicroscope.displayName = 'CoreMicroscope'

export default CoreMicroscope
