
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M13 60L24.5848 20.3113C24.6387 20.1268 24.8078 20 25 20V20C25.1922 20 25.3613 20.1268 25.4152 20.3113L37 60"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M17 47H33"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M67 60V43C67 36.9249 62.0751 32 56 32H51"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M67 44H51C46.5817 44 43 47.5817 43 52C43 56.4183 46.5817 60 51 60H56C62.0751 60 67 55.0751 67 49"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M17 44C15.3431 44 14 45.3431 14 47C14 48.6569 15.3431 50 17 50V44ZM33 50C34.6569 50 36 48.6569 36 47C36 45.3431 34.6569 44 33 44V50ZM24.5848 20.3113L27.4646 21.1519L27.4646 21.1519L24.5848 20.3113ZM10.1202 59.1594C9.65593 60.7499 10.5689 62.4156 12.1594 62.8798C13.7499 63.3441 15.4156 62.4311 15.8798 60.8406L10.1202 59.1594ZM25.4152 20.3113L22.5354 21.1519L22.5354 21.1519L25.4152 20.3113ZM34.1202 60.8406C34.5844 62.4311 36.2501 63.3441 37.8406 62.8798C39.4311 62.4156 40.3441 60.7499 39.8798 59.1594L34.1202 60.8406ZM17 50H33V44H17V50ZM21.705 19.4707L10.1202 59.1594L15.8798 60.8406L27.4646 21.1519L21.705 19.4707ZM22.5354 21.1519L34.1202 60.8406L39.8798 59.1594L28.295 19.4707L22.5354 21.1519ZM25 23C23.8591 23 22.8551 22.2471 22.5354 21.1519L28.295 19.4707C27.8676 18.0065 26.5253 17 25 17V23ZM27.4646 21.1519C27.1449 22.2471 26.1409 23 25 23V17C23.4747 17 22.1324 18.0065 21.705 19.4707L27.4646 21.1519Z"
            fill="currentColor"
          />
          <path
            d="M67 44H70C70 42.3431 68.6569 41 67 41V44ZM64 60C64 61.6569 65.3431 63 67 63C68.6569 63 70 61.6569 70 60H64ZM70 49C70 47.3431 68.6569 46 67 46C65.3431 46 64 47.3431 64 49H70ZM64 44C64 45.6569 65.3431 47 67 47C68.6569 47 70 45.6569 70 44H64ZM51 29C49.3431 29 48 30.3431 48 32C48 33.6569 49.3431 35 51 35V29ZM46 52C46 49.2386 48.2386 47 51 47V41C44.9249 41 40 45.9249 40 52H46ZM51 57C48.2386 57 46 54.7614 46 52H40C40 58.0751 44.9249 63 51 63V57ZM56 57H51V63H56L56 57ZM64 49C64 53.4183 60.4183 57 56 57L56 63C63.732 63 70 56.732 70 49H64ZM64 44V49H70V44H64ZM51 47H67V41H51V47ZM70 60V49H64V60H70ZM70 44V43H64V44H70ZM56 29L51.1336 29V35H56V29ZM51.1336 29H51V35H51.1336V29ZM70 43C70 35.268 63.732 29 56 29V35C60.4183 35 64 38.5817 64 43H70Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M17 45C15.8954 45 15 45.8954 15 47C15 48.1046 15.8954 49 17 49V45ZM33 49C34.1046 49 35 48.1046 35 47C35 45.8954 34.1046 45 33 45V49ZM24.5848 20.3113L26.5047 20.8717L26.5047 20.8717L24.5848 20.3113ZM11.0801 59.4396C10.7706 60.4999 11.3793 61.6104 12.4396 61.9199C13.4999 62.2294 14.6104 61.6207 14.9199 60.5604L11.0801 59.4396ZM25.4152 20.3113L23.4953 20.8717L23.4953 20.8717L25.4152 20.3113ZM35.0801 60.5604C35.3896 61.6207 36.5001 62.2294 37.5604 61.9199C38.6207 61.6104 39.2294 60.4999 38.9199 59.4396L35.0801 60.5604ZM17 49H33V45H17V49ZM22.6649 19.7509L11.0801 59.4396L14.9199 60.5604L26.5047 20.8717L22.6649 19.7509ZM23.4953 20.8717L35.0801 60.5604L38.9199 59.4396L27.3351 19.7509L23.4953 20.8717ZM25 22C24.3035 22 23.6905 21.5404 23.4953 20.8717L27.3351 19.7509C27.0322 18.7133 26.0809 18 25 18V22ZM26.5047 20.8717C26.3095 21.5404 25.6965 22 25 22V18C23.9191 18 22.9678 18.7133 22.6649 19.7509L26.5047 20.8717Z"
            fill="#219653"
          />
          <path
            d="M67 44H69C69 42.8954 68.1046 42 67 42V44ZM65 60C65 61.1046 65.8954 62 67 62C68.1046 62 69 61.1046 69 60H65ZM69 49C69 47.8954 68.1046 47 67 47C65.8954 47 65 47.8954 65 49H69ZM65 44C65 45.1046 65.8954 46 67 46C68.1046 46 69 45.1046 69 44H65ZM51 30C49.8954 30 49 30.8954 49 32C49 33.1046 49.8954 34 51 34V30ZM45 52C45 48.6863 47.6863 46 51 46V42C45.4772 42 41 46.4772 41 52H45ZM51 58C47.6863 58 45 55.3137 45 52H41C41 57.5228 45.4772 62 51 62V58ZM56 58H51V62H56L56 58ZM65 49C65 53.9706 60.9706 58 56 58L56 62C63.1797 62 69 56.1797 69 49H65ZM65 44V49H69V44H65ZM51 46H67V42H51V46ZM69 60V49H65V60H69ZM69 44V43H65V44H69ZM56 30L51.1336 30V34H56V30ZM51.1336 30H51V34H51.1336V30ZM69 43C69 35.8203 63.1797 30 56 30V34C60.9706 34 65 38.0294 65 43H69Z"
            fill="#F2994A"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M17 47H33M13 60L24.5848 20.3113C24.6387 20.1268 24.8078 20 25 20C25.1922 20 25.3613 20.1268 25.4152 20.3113L37 60M67 49C67 55.0751 62.0751 60 56 60H51C46.5817 60 43 56.4183 43 52C43 47.5817 46.5817 44 51 44H67M67 49V44M67 49V60M67 44V43C67 36.9249 62.0751 32 56 32H51"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M35.0801 60.5604L31.7058 49H18.2943L14.9199 60.5604C14.6104 61.6207 13.5 62.2294 12.4396 61.9199C11.3793 61.6104 10.7706 60.4999 11.0801 59.4396L22.6649 19.7509C22.9678 18.7133 23.9191 18 25 18C26.081 18 27.0322 18.7133 27.3351 19.7509L38.9199 59.4396C39.2294 60.4999 38.6208 61.6104 37.5604 61.9199C36.5001 62.2294 35.3896 61.6207 35.0801 60.5604ZM19.4619 45L25 26.0267L30.5382 45H19.4619Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M51 30C49.8955 30 49 30.8954 49 32C49 33.1046 49.8955 34 51 34H56C60.6326 34 64.4477 37.5 64.9451 42H51C45.4772 42 41 46.4772 41 52C41 57.5228 45.4772 62 51 62H56C59.493 62 62.6642 60.6224 65 58.3809V60C65 61.1046 65.8955 62 67 62C68.1046 62 69 61.1046 69 60V43C69 35.8203 63.1797 30 56 30H51ZM51 46H65V49C65 53.9706 60.9706 58 56 58H51C47.6863 58 45 55.3137 45 52C45 48.6863 47.6863 46 51 46Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreFont = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreFont.displayName = 'CoreFont'

export default CoreFont
