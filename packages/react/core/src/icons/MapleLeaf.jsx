
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M40.0084 7L48.4849 16.9118L55.9779 15.118L51.2167 34.1575L55.371 27.3074L58.2638 32.0699L67.757 31.2345L66.9216 40.7277L71.6827 43.6196L53.9656 54.3613L56.0083 61L40.0083 56.7064L24.0083 61L26.0483 54.37L8.31689 43.6196L13.078 40.7277L12.2426 31.2345L21.7358 32.0699L24.6286 27.3074L28.8042 34.1927L24.0367 15.1175L31.5318 16.9118L40.0084 7Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M40.0083 41L40.0085 73"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M39.6915 7L48.168 16.9118L55.661 15.118L50.8998 34.1575L55.0541 27.3074L57.9469 32.0699L67.4401 31.2345L66.6047 40.7277L71.3658 43.6196L53.6487 54.3613L55.6914 61L39.6914 56.7064L23.6914 61L25.7314 54.37L8 43.6196L12.7611 40.7277L11.9257 31.2345L21.4189 32.0699L24.3117 27.3074L28.4873 34.1927L23.7198 15.1175L31.2149 16.9118L39.6915 7ZM39.6914 38C41.3482 38 42.6914 39.3431 42.6914 41L42.6916 73C42.6916 74.6568 41.3485 76 39.6916 76C38.0348 76 36.6916 74.6569 36.6916 73L36.6914 41C36.6914 39.3432 38.0345 38 39.6914 38Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M39.6915 7L48.168 16.9118L55.661 15.118L50.8998 34.1575L55.0541 27.3074L57.9469 32.0699L67.4401 31.2345L66.6047 40.7277L71.3658 43.6196L53.6487 54.3613L55.6914 61L39.6914 56.7064L23.6914 61L25.7314 54.37L8 43.6196L12.7611 40.7277L11.9257 31.2345L21.4189 32.0699L24.3117 27.3074L28.4873 34.1927L23.7198 15.1175L31.2149 16.9118L39.6915 7Z"
            fill="#EB5757"
          />
          <path
            d="M39.6914 41L39.6916 73"
            stroke="#F2994A"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M40.0084 7L48.4849 16.9118L55.9779 15.118L51.2167 34.1575L55.371 27.3074L58.2638 32.0699L67.757 31.2345L66.9215 40.7277L71.6827 43.6196L53.9656 54.3613L56.0083 61L40.0083 56.7064L24.0083 61L26.0483 54.37L8.31689 43.6196L13.078 40.7277L12.2426 31.2345L21.7358 32.0699L24.6286 27.3074L28.8042 34.1927L24.0367 15.1175L31.5318 16.9118L40.0084 7Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M40.0083 41L40.0085 73M48.4849 16.9118L40.0084 7L31.5318 16.9118L24.0367 15.1175L28.8042 34.1927L24.6286 27.3074L21.7358 32.0699L12.2426 31.2345L13.078 40.7277L8.31689 43.6196L26.0483 54.37L24.0083 61L40.0083 56.7064L56.0083 61L53.9656 54.3613L71.6827 43.6196L66.9215 40.7277L67.757 31.2345L58.2638 32.0699L55.371 27.3074L51.2167 34.1575L55.9779 15.118L48.4849 16.9118Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M41.2114 5.70012C40.8315 5.25581 40.2761 5 39.6915 5C39.1068 5 38.5515 5.25581 38.1715 5.70012L30.4903 14.6818L24.1855 13.1725C23.5057 13.0098 22.7904 13.2137 22.2986 13.7104C21.8069 14.207 21.6101 14.9244 21.7795 15.6025L24.2058 25.3102C23.548 25.345 22.9466 25.7023 22.6023 26.2691L20.3553 29.9686L12.1011 29.2422C11.5118 29.1903 10.9298 29.402 10.5115 29.8203C10.0932 30.2386 9.88158 30.8205 9.93344 31.4098L10.6598 39.664L6.96171 41.9102C6.36433 42.2731 5.99971 42.9215 6 43.6204C6.00029 44.3194 6.36543 44.9675 6.96311 45.3298L23.3614 55.2719L21.7798 60.4118C21.5658 61.1074 21.7465 61.8644 22.2517 62.3883C22.7569 62.9122 23.5068 63.1203 24.2098 62.9317L37.6915 59.3138L37.6916 73C37.6916 74.1046 38.5871 75 39.6916 75C40.7962 75 41.6916 74.1046 41.6916 73L41.6915 59.3139L55.173 62.9317C55.876 63.1203 56.6259 62.9122 57.1311 62.3883C57.6363 61.8644 57.817 61.1074 57.603 60.4118L56.0188 55.2632L72.4027 45.3298C73.0004 44.9675 73.3655 44.3194 73.3658 43.6204C73.3661 42.9215 73.0015 42.2731 72.4041 41.9102L68.706 39.664L69.4324 31.4098C69.4842 30.8205 69.2726 30.2386 68.8543 29.8203C68.436 29.402 67.854 29.1903 67.2647 29.2422L59.0106 29.9686L56.7635 26.2691C56.4216 25.7062 55.826 25.3499 55.1736 25.311L57.6012 15.6032C57.7708 14.9251 57.574 14.2077 57.0823 13.711C56.5905 13.2142 55.8751 13.0102 55.1953 13.173L48.8926 14.6818L41.2114 5.70012ZM41.6915 55.1724L52.716 58.1308L51.7372 54.9495C51.4676 54.0734 51.8281 53.1263 52.6118 52.6511L67.5107 43.618L65.5664 42.437C64.9155 42.0417 64.5456 41.311 64.6124 40.5523L65.2386 33.4359L58.1222 34.0622C57.3636 34.1289 56.6329 33.7591 56.2375 33.1082L55.0554 31.1621L52.6099 35.1947C52.097 36.0404 51.0429 36.3842 50.13 36.0035C49.2171 35.6228 48.7196 34.6319 48.9595 33.6724L52.9211 17.8304L48.6337 18.8568C47.9032 19.0317 47.1363 18.7825 46.6481 18.2117L39.6915 10.0772L32.7349 18.2117C32.2467 18.7825 31.4798 19.0317 30.7493 18.8568L26.4593 17.8298L30.4276 33.7077C30.6675 34.6673 30.1699 35.658 29.257 36.0386C28.3441 36.4193 27.2901 36.0755 26.7772 35.2298L24.3104 31.1621L23.1283 33.1082C22.7329 33.7591 22.0022 34.1289 21.2436 34.0622L14.1272 33.4359L14.7534 40.5523C14.8202 41.311 14.4503 42.0417 13.7994 42.437L11.8551 43.618L26.7683 52.6597C27.5521 53.1349 27.9125 54.0821 27.643 54.9581L26.6668 58.1308L37.6915 55.1723L37.6914 41C37.6914 39.8954 38.5868 39 39.6914 39C40.796 39 41.6914 39.8954 41.6914 41L41.6915 55.1724Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreMapleLeaf = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreMapleLeaf.displayName = 'CoreMapleLeaf'

export default CoreMapleLeaf
