
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M34 66.9999C31.7909 66.9999 30 65.2091 30 62.9999V37.0019V29.0003C30 26.7909 31.7913 24.9999 34.0007 25.0003L42.1905 25.0018L57.9996 25C60.2089 24.9998 62 26.7907 62 29L62 62.9999C62 65.2091 60.2091 66.9999 58 66.9999H34Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M30 54.9999H22C19.7909 54.9999 18 53.2091 18 50.9999L18 17C18 14.7907 19.7911 12.9998 22.0004 13L45.9993 13.0003C48.2087 12.9999 50 14.7909 50 17.0003V25.0009"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M50 50.9999C50 53.2091 48.2091 54.9999 46 54.9999H33V29.0003C33 28.4479 33.4478 28.0002 34.0002 28.0003L50 28.0009V50.9999Z"
            fill="currentColor"
          />
          <path
            d="M50 22.0009L34.0013 22.0003C30.1348 21.9996 27 25.1338 27 29.0003V54.9999H22C19.7909 54.9999 18 53.2091 18 50.9999L18 17C18 14.7907 19.7911 12.9998 22.0004 13L45.9993 13.0003C48.2087 12.9999 50 14.7909 50 17.0003V22.0009Z"
            fill="currentColor"
          />
          <path
            d="M34 66.9999C31.7909 66.9999 30 65.209 30 62.9999V29.0002C30 26.7908 31.7913 24.9998 34.0007 25.0002L57.9996 24.9999C60.2089 24.9997 62 26.7906 62 28.9999L62 62.9999C62 65.209 60.2091 66.9999 58 66.9999H34Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M30 54.9999L30 37.0019L30 29.0003C30 26.7909 31.7913 24.9999 34.0007 25.0003L42.1905 25.0018L50 25.0009V17.0003C50 14.7909 48.2087 12.9999 45.9993 13.0003L37.8095 13.0018L22.0004 13C19.7911 12.9998 18 14.7907 18 17L18 50.9999C18 53.2091 19.7909 54.9999 22 54.9999H30Z"
            fill="#F2C94C"
          />
          <path
            d="M34 66.9999C31.7909 66.9999 30 65.2091 30 62.9999L30 37.0019L30 29.0003C30 26.7909 31.7913 24.9999 34.0007 25.0003L42.1905 25.0018L57.9996 25C60.2089 24.9998 62 26.7907 62 29L62 62.9999C62 65.2091 60.2091 66.9999 58 66.9999H34Z"
            fill="#F2994A"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M30 55.0008V37.0027V29.0011C30 26.7917 31.7913 25.0007 34.0007 25.0011L42.1905 25.0026L50 25.0017V17.0011C50 14.7917 48.2087 13.0007 45.9993 13.0011L22.0004 13.0009C19.7911 13.0006 18 14.7915 18 17.0009L18 51.0008C18 53.2099 19.7909 55.0008 22 55.0008H30Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M34 67.0007C31.7909 67.0007 30 65.2098 30 63.0007V37.0027V29.0011C30 26.7917 31.7913 25.0007 34.0007 25.0011L42.1905 25.0026L57.9996 25.0008C60.2089 25.0005 62 26.7915 62 29.0008L62 63.0007C62 65.2099 60.2091 67.0007 58 67.0007H34Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M30 37.0027V55.0008H22C19.7909 55.0008 18 53.2099 18 51.0008L18 17.0009C18 14.7915 19.7911 13.0006 22.0004 13.0009L45.9993 13.0011C48.2087 13.0007 50 14.7917 50 17.0011V25.0017L42.1905 25.0026M30 37.0027V29.0011C30 26.7917 31.7913 25.0007 34.0007 25.0011L42.1905 25.0026M30 37.0027V63.0007C30 65.2098 31.7909 67.0007 34 67.0007H58C60.2091 67.0007 62 65.2099 62 63.0007L62 29.0008C62 26.7915 60.2089 25.0005 57.9996 25.0008L42.1905 25.0026"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            d="M28 29.0003C28 29.0003 28 29.0003 28 29.0003ZM28 29.0003C28 28.7673 28.0133 28.5373 28.0391 28.3112C28.3809 25.3216 30.9199 22.9997 34.0011 23.0002L48 23.001V17.0003C48 15.8956 47.1044 15.0001 45.9996 15.0003L22.0002 15C20.8956 14.9999 20 15.8953 20 17L20 50.9999C20 52.1045 20.8954 52.9999 22 52.9999H28V29.0003ZM16 17C16 13.686 18.6867 10.9996 22.0007 11L45.9989 11.0003C49.3131 10.9997 52 13.6861 52 17.0003V23.0006L57.9993 22.9999C61.3133 22.9996 64 25.686 64 28.9999L64 62.9999C64 66.3136 61.3137 68.9999 58 68.9999H34C30.6863 68.9999 28 66.3136 28 62.9999V56.9999H22C18.6863 56.9999 16 54.3136 16 50.9999L16 17ZM34.0004 27.0003C32.9608 27.0001 32.1063 27.7931 32.0092 28.8072L32.0002 28.9744C32.0001 28.983 32 28.9916 32 29.0003V54.9999C32 55.0006 32 55.0012 32 55.0019V62.9999C32 64.1044 32.8954 64.9999 34 64.9999H58C59.1046 64.9999 60 64.1044 60 62.9999L60 28.9999C60 27.8953 59.1044 26.9998 57.9998 26.9999L50.0166 27.0008C50.0111 27.0009 50.0057 27.0009 50.0002 27.0009L34.0004 27.0003Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreCopy1 = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreCopy1.displayName = 'CoreCopy1'

export default CoreCopy1
