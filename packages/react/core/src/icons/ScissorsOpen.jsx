
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M29.4986 61.8651C27.5657 65.2131 23.2845 66.3602 19.9365 64.4272C16.5884 62.4942 15.4413 58.2131 17.3743 54.8651L18.3743 53.133C20.3073 49.785 24.5884 48.6378 27.9365 50.5708C31.2845 52.5038 32.4316 56.785 30.4986 60.133L29.4986 61.8651Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M31.8056 54.632C31.6266 54.7672 31.426 54.8567 31.2186 54.9014C30.9758 53.9508 30.5346 53.0514 29.9128 52.2704L37.9117 42.3028L55.0309 15.332C55.4577 14.6594 56.3359 14.4378 57.0308 14.8274C57.7256 15.2169 57.9948 16.0817 57.6438 16.7968L43.5112 45.5877C43.4077 45.7985 43.2562 45.9821 43.0688 46.1236L31.8056 54.632Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M50.5012 61.8651C52.4342 65.2131 56.7154 66.3602 60.0634 64.4272C63.4115 62.4942 64.5586 58.2131 62.6256 54.8651L61.6256 53.133C59.6926 49.785 55.4115 48.6378 52.0634 50.5708C48.7154 52.5038 47.5683 56.785 49.5012 60.133L50.5012 61.8651Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M39.9998 39.0128L24.9688 15.332C24.5419 14.6594 23.6638 14.4378 22.9689 14.8274C22.274 15.2169 22.0049 16.0817 22.3559 16.7968L36.0281 44.6498M39.9998 48.4419L48.194 54.632C48.3731 54.7672 48.5737 54.8566 48.7811 54.9014C49.0239 53.9508 49.4651 53.0514 50.0868 52.2704L43.9715 44.6498"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M39.5002 42.8108C39.0219 43.0869 38.858 43.6985 39.1341 44.1768C39.4103 44.6551 40.0219 44.819 40.5002 44.5428C40.9785 44.2667 41.1423 43.6551 40.8662 43.1768C40.5901 42.6985 39.9785 42.5346 39.5002 42.8108Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M30.9616 56.2483C31.319 56.1763 31.6653 56.025 31.9733 55.7923L43.2364 47.284C43.5487 47.0481 43.8013 46.7421 43.9737 46.3908L58.1064 17.5999C58.6914 16.408 58.2428 14.9668 57.0847 14.3175C55.9266 13.6683 54.4629 14.0376 53.7515 15.1585L36.662 42.0825L28.792 51.8897C30.0329 53.0521 30.7844 54.6105 30.9616 56.2483ZM40.0645 43.1732C40.5428 43.4493 40.7066 44.0609 40.4305 44.5392C40.1544 45.0175 39.5428 45.1814 39.0645 44.9052C38.5862 44.6291 38.4223 44.0175 38.6984 43.5392C38.9746 43.0609 39.5862 42.897 40.0645 43.1732Z"
            fill="currentColor"
          />
          <path
            d="M29.0636 62.2274C27.1306 65.5754 22.8494 66.7225 19.5014 64.7896V64.7896C16.1533 62.8566 15.0062 58.5754 16.9392 55.2274L17.9392 53.4953C19.8722 50.1473 24.1533 49.0001 27.5014 50.9331V50.9331C30.8494 52.8661 31.9966 57.1473 30.0636 60.4953L29.0636 62.2274Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M48.1659 56.2483C47.8084 56.1763 47.4621 56.025 47.1541 55.7923L35.891 47.284C35.5787 47.0481 35.3262 46.7421 35.1537 46.3908L21.0211 17.5999C20.436 16.408 20.8847 14.9668 22.0428 14.3175C23.2009 13.6683 24.6645 14.0376 25.376 15.1585L42.4655 42.0825L50.3355 51.8897C49.0945 53.0521 48.343 54.6105 48.1659 56.2483ZM39.063 43.1732C38.5847 43.4493 38.4208 44.0609 38.6969 44.5392C38.9731 45.0175 39.5847 45.1814 40.063 44.9052C40.5413 44.6291 40.7051 44.0175 40.429 43.5392C40.1529 43.0609 39.5413 42.897 39.063 43.1732Z"
            fill="currentColor"
          />
          <path
            d="M50.0639 62.2274C51.9969 65.5754 56.278 66.7225 59.6261 64.7896V64.7896C62.9741 62.8566 64.1212 58.5754 62.1882 55.2274L61.1882 53.4953C59.2552 50.1473 54.9741 49.0001 51.6261 50.9331V50.9331C48.278 52.8661 47.1309 57.1473 49.0639 60.4953L50.0639 62.2274Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M30.7836 55.2639C30.991 55.2191 31.1916 55.1297 31.3706 54.9944L42.6338 46.4861C42.8211 46.3446 42.9727 46.161 43.0762 45.9502L57.2088 17.1593C57.5598 16.4442 57.2906 15.5794 56.5958 15.1899C55.9009 14.8003 55.0227 15.0219 54.5958 15.6945L37.4766 42.6652L29.4778 52.6329C30.0995 53.4138 30.5408 54.3133 30.7836 55.2639ZM40.0646 43.1732C40.5429 43.4494 40.7067 44.0609 40.4306 44.5392C40.1544 45.0175 39.5429 45.1814 39.0646 44.9053C38.5863 44.6291 38.4224 44.0175 38.6985 43.5392C38.9747 43.0609 39.5863 42.8971 40.0646 43.1732Z"
            fill="#9B51E0"
          />
          <path
            d="M29.0636 62.2274C27.1306 65.5754 22.8494 66.7225 19.5014 64.7896V64.7896C16.1533 62.8566 15.0062 58.5754 16.9392 55.2274L17.9392 53.4953C19.8722 50.1473 24.1533 49.0001 27.5014 50.9331V50.9331C30.8494 52.8661 31.9966 57.1473 30.0636 60.4953L29.0636 62.2274Z"
            stroke="#9B51E0"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M48.3438 55.2639C48.1365 55.2191 47.9359 55.1297 47.7568 54.9944L36.4937 46.4861C36.3063 46.3446 36.1548 46.161 36.0513 45.9502L21.9187 17.1593C21.5676 16.4442 21.8368 15.5794 22.5317 15.1899C23.2265 14.8003 24.1047 15.0219 24.5316 15.6945L41.6508 42.6652L49.6496 52.6329C49.0279 53.4138 48.5866 54.3133 48.3438 55.2639ZM39.0629 43.1732C38.5846 43.4494 38.4207 44.0609 38.6969 44.5392C38.973 45.0175 39.5846 45.1814 40.0629 44.9053C40.5412 44.6291 40.705 44.0175 40.4289 43.5392C40.1528 43.0609 39.5412 42.8971 39.0629 43.1732Z"
            fill="#2F80ED"
          />
          <path
            d="M50.0639 62.2274C51.9969 65.5754 56.278 66.7225 59.6261 64.7896V64.7896C62.9741 62.8566 64.1212 58.5754 62.1882 55.2274L61.1882 53.4953C59.2552 50.1473 54.9741 49.0001 51.6261 50.9331V50.9331C48.278 52.8661 47.1309 57.1473 49.0639 60.4953L50.0639 62.2274Z"
            stroke="#2F80ED"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M31.2197 54.8994C31.427 54.8546 31.6276 54.7652 31.8067 54.63L43.0698 46.1216C43.2572 45.9801 43.4087 45.7965 43.5122 45.5857L57.6448 16.7948C57.9959 16.0797 57.7267 15.2149 57.0318 14.8254C56.337 14.4358 55.4588 14.6574 55.0319 15.33L37.9127 42.3007L29.9139 52.2684C30.5356 53.0493 30.9769 53.9488 31.2197 54.8994ZM40.5006 42.8087C40.9789 43.0849 41.1428 43.6964 40.8667 44.1747C40.5905 44.653 39.9789 44.8169 39.5006 44.5408C39.0223 44.2646 38.8585 43.653 39.1346 43.1747C39.4107 42.6964 40.0223 42.5326 40.5006 42.8087Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M48.7799 54.8994C48.5725 54.8546 48.3719 54.7652 48.1929 54.63L36.9297 46.1216C36.7424 45.9801 36.5908 45.7965 36.4874 45.5857L22.3547 16.7948C22.0037 16.0797 22.2729 15.2149 22.9677 14.8254C23.6626 14.4358 24.5408 14.6574 24.9677 15.33L42.0869 42.3007L50.0857 52.2684C49.464 53.0493 49.0227 53.9488 48.7799 54.8994ZM39.4989 42.8087C39.0206 43.0849 38.8568 43.6965 39.1329 44.1747C39.4091 44.653 40.0206 44.8169 40.4989 44.5408C40.9772 44.2646 41.1411 43.653 40.865 43.1747C40.5888 42.6965 39.9772 42.5326 39.4989 42.8087Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M31.2197 54.8994C30.9635 53.8962 30.4865 52.95 29.8094 52.14C29.8449 52.1823 29.8796 52.2253 29.9139 52.2684C30.5356 53.0493 30.9769 53.9488 31.2197 54.8994Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M48.7799 54.8994C49.0227 53.9488 49.464 53.0493 50.0857 52.2684C50.12 52.2253 50.1547 52.1823 50.1901 52.14C49.5131 52.95 49.0361 53.8962 48.7799 54.8994Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M31.2197 54.8994C31.427 54.8546 31.6276 54.7652 31.8067 54.63L43.0698 46.1216C43.2572 45.9801 43.4087 45.7965 43.5122 45.5857L57.6448 16.7948C57.9959 16.0797 57.7267 15.2149 57.0318 14.8254C56.337 14.4358 55.4588 14.6574 55.0319 15.33L37.9127 42.3007L29.9139 52.2684M31.2197 54.8994C30.9769 53.9488 30.5356 53.0493 29.9139 52.2684M31.2197 54.8994C30.9635 53.8962 30.4865 52.95 29.8094 52.14M29.9139 52.2684C29.8796 52.2253 29.8449 52.1823 29.8094 52.14M48.7799 54.8994C48.5725 54.8546 48.3719 54.7652 48.1929 54.63L36.9297 46.1216C36.7424 45.9801 36.5908 45.7965 36.4874 45.5857L22.3547 16.7948C22.0037 16.0797 22.2729 15.2149 22.9677 14.8254C23.6626 14.4358 24.5408 14.6574 24.9677 15.33L42.0869 42.3007L50.0857 52.2684M48.7799 54.8994C49.0227 53.9488 49.464 53.0493 50.0857 52.2684M48.7799 54.8994C49.0361 53.8962 49.5131 52.95 50.1901 52.14M50.0857 52.2684C50.12 52.2253 50.1547 52.1823 50.1901 52.14M29.8094 52.14C29.2969 51.5267 28.6698 50.9915 27.9374 50.5687C24.5894 48.6357 20.3083 49.7828 18.3753 53.1309L17.3753 54.8629C15.4423 58.211 16.5894 62.4921 19.9374 64.4251C23.2855 66.3581 27.5666 65.211 29.4996 61.8629L30.4996 60.1309C32.0098 57.5152 31.64 54.33 29.8094 52.14ZM50.1901 52.14C50.7027 51.5267 51.3297 50.9915 52.0621 50.5687C55.4102 48.6357 59.6913 49.7828 61.6243 53.1309L62.6243 54.8629C64.5573 58.211 63.4102 62.4921 60.0621 64.4251C56.7141 66.3581 52.4329 65.211 50.5 61.8629L49.5 60.1309C47.9898 57.5152 48.3596 54.33 50.1901 52.14ZM40.8667 44.1747C41.1428 43.6964 40.9789 43.0849 40.5006 42.8087C40.0223 42.5326 39.4107 42.6964 39.1346 43.1747C38.8585 43.653 39.0223 44.2646 39.5006 44.5408C39.9789 44.8169 40.5905 44.653 40.8667 44.1747ZM39.1329 44.1747C38.8568 43.6965 39.0206 43.0849 39.4989 42.8087C39.9772 42.5326 40.5888 42.6965 40.865 43.1747C41.1411 43.653 40.9772 44.2646 40.4989 44.5408C40.0206 44.8169 39.4091 44.653 39.1329 44.1747Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M32.5284 54.1209L39.5637 48.8063L46.5991 54.1209C45.8027 56.4851 45.9875 59.167 47.3329 61.4973L48.3329 63.2294C50.8182 67.534 56.3225 69.0089 60.6272 66.5236C64.9318 64.0383 66.4067 58.534 63.9214 54.2294L62.9214 52.4973C60.4361 48.1927 54.9318 46.7178 50.6272 49.2031C49.7576 49.7051 49.0035 50.3304 48.3742 51.044L43.5354 45.0142L57.2077 17.1612C57.5587 16.4461 57.2895 15.5813 56.5946 15.1918C55.8998 14.8022 55.0216 15.0238 54.5947 15.6964L39.5637 39.3772L24.5327 15.6964C24.1058 15.0238 23.2277 14.8022 22.5328 15.1918C21.8379 15.5813 21.5688 16.4461 21.9198 17.1612L35.592 45.0142L30.7533 51.044C30.124 50.3304 29.3699 49.7051 28.5003 49.2031C24.1956 46.7178 18.6913 48.1927 16.2061 52.4973L15.2061 54.2294C12.7208 58.534 14.1956 64.0383 18.5003 66.5236C22.8049 69.0089 28.3092 67.534 30.7945 63.2294L31.7945 61.4973C33.1399 59.167 33.3248 56.4851 32.5284 54.1209ZM40.4295 44.5411C40.7056 44.0628 40.5417 43.4513 40.0634 43.1751C40.0055 43.1417 39.9457 43.1147 39.8847 43.0939C39.7816 43.0591 39.6732 43.041 39.5637 43.041C39.4551 43.041 39.3473 43.0588 39.245 43.0932C39.1832 43.114 39.1226 43.1413 39.064 43.1751C38.5857 43.4513 38.4218 44.0628 38.698 44.5411C38.8829 44.8615 39.2184 45.0408 39.5635 45.0413C39.9088 45.0409 40.2444 44.8616 40.4295 44.5411ZM20.5003 63.0595C18.1088 61.6788 17.2894 58.6208 18.6702 56.2294L19.6702 54.4973C21.0509 52.1058 24.1088 51.2865 26.5003 52.6672C28.8917 54.0479 29.7111 57.1058 28.3304 59.4973L27.3304 61.2294C25.9497 63.6208 22.8917 64.4402 20.5003 63.0595ZM58.6272 63.0595C61.0186 61.6788 61.838 58.6208 60.4573 56.2294L59.4573 54.4973C58.0766 52.1058 55.0186 51.2865 52.6272 52.6672C50.2357 54.0479 49.4163 57.1058 50.797 59.4973L51.797 61.2294C53.1777 63.6208 56.2357 64.4402 58.6272 63.0595Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreScissorsOpen = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreScissorsOpen.displayName = 'CoreScissorsOpen'

export default CoreScissorsOpen
