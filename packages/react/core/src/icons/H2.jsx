
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M10 60V20"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M10 40H38"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M38 60V20"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M51.6667 20H60.7295C65.8495 20 70 24.1505 70 29.2705C70 32.7819 68.0161 35.992 64.8754 37.5623L60 40C53.8713 43.0643 50 49.3283 50 56.1803V59.1667C50 59.6269 50.3731 60 50.8333 60H70"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M35 60.1083C35 61.7651 36.3431 63.1083 38 63.1083C39.6569 63.1083 41 61.7651 41 60.1083H35ZM41 20.1083C41 18.4514 39.6569 17.1083 38 17.1083C36.3431 17.1083 35 18.4514 35 20.1083H41ZM7 60.1083C7 61.7651 8.34315 63.1083 10 63.1083C11.6569 63.1083 13 61.7651 13 60.1083H7ZM13 20.1083C13 18.4514 11.6569 17.1083 10 17.1083C8.34315 17.1083 7 18.4514 7 20.1083H13ZM10 37.1083C8.34315 37.1083 7 38.4514 7 40.1083C7 41.7651 8.34315 43.1083 10 43.1083V37.1083ZM38 43.1083C39.6569 43.1083 41 41.7651 41 40.1083C41 38.4514 39.6569 37.1083 38 37.1083V43.1083ZM41 60.1083V20.1083H35V60.1083H41ZM13 60.1083V20.1083H7V60.1083H13ZM10 43.1083H38V37.1083H10V43.1083Z"
            fill="currentColor"
          />
          <path
            d="M51.6667 17C50.0098 17 48.6667 18.3431 48.6667 20C48.6667 21.6569 50.0098 23 51.6667 23V17ZM70 63C71.6569 63 73 61.6569 73 60C73 58.3431 71.6569 57 70 57V63ZM64.8754 37.5623L63.5337 34.879L64.8754 37.5623ZM60 40L61.3416 42.6833L60 40ZM51.6667 23H60.7295V17H51.6667V23ZM50.8333 63H70V57H50.8333V63ZM63.5337 34.879L58.6584 37.3167L61.3416 42.6833L66.217 40.2456L63.5337 34.879ZM47 56.1803V59.1667H53V56.1803H47ZM50.8333 57C52.03 57 53 57.9701 53 59.1667H47C47 61.2838 48.7162 63 50.8333 63V57ZM58.6584 37.3167C51.5134 40.8892 47 48.192 47 56.1803H53C53 50.4646 56.2293 45.2394 61.3416 42.6833L58.6584 37.3167ZM67 29.2705C67 31.6456 65.6581 33.8168 63.5337 34.879L66.217 40.2456C70.3741 38.1671 73 33.9182 73 29.2705H67ZM60.7295 23C64.1926 23 67 25.8074 67 29.2705H73C73 22.4937 67.5063 17 60.7295 17V23Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M36 60.1083C36 61.2128 36.8954 62.1083 38 62.1083C39.1046 62.1083 40 61.2128 40 60.1083H36ZM40 20.1083C40 19.0037 39.1046 18.1083 38 18.1083C36.8954 18.1083 36 19.0037 36 20.1083H40ZM8 60.1083C8 61.2128 8.89543 62.1083 10 62.1083C11.1046 62.1083 12 61.2128 12 60.1083H8ZM12 20.1083C12 19.0037 11.1046 18.1083 10 18.1083C8.89543 18.1083 8 19.0037 8 20.1083H12ZM10 38.1083C8.89543 38.1083 8 39.0037 8 40.1083C8 41.2128 8.89543 42.1083 10 42.1083V38.1083ZM38 42.1083C39.1046 42.1083 40 41.2128 40 40.1083C40 39.0037 39.1046 38.1083 38 38.1083V42.1083ZM40 60.1083V20.1083H36V60.1083H40ZM12 60.1083V20.1083H8V60.1083H12ZM10 42.1083H38V38.1083H10V42.1083Z"
            fill="#56CCF2"
          />
          <path
            d="M51.6667 18C50.5621 18 49.6667 18.8954 49.6667 20C49.6667 21.1046 50.5621 22 51.6667 22V18ZM70 62C71.1046 62 72 61.1046 72 60C72 58.8954 71.1046 58 70 58V62ZM64.8754 37.5623L63.981 35.7735H63.981L64.8754 37.5623ZM60 40L60.8944 41.7889L60 40ZM51.6667 22H60.7295V18H51.6667V22ZM50.8333 62H70V58H50.8333V62ZM63.981 35.7735L59.1056 38.2111L60.8944 41.7889L65.7698 39.3512L63.981 35.7735ZM48 56.1803V59.1667H52V56.1803H48ZM50.8333 58C51.4777 58 52 58.5223 52 59.1667H48C48 60.7315 49.2685 62 50.8333 62V58ZM59.1056 38.2111C52.2993 41.6143 48 48.5707 48 56.1803H52C52 50.0858 55.4433 44.5144 60.8944 41.7889L59.1056 38.2111ZM68 29.2705C68 32.0244 66.4441 34.5419 63.981 35.7735L65.7698 39.3512C69.5881 37.442 72 33.5395 72 29.2705H68ZM60.7295 22C64.7449 22 68 25.2551 68 29.2705H72C72 23.046 66.954 18 60.7295 18V22Z"
            fill="#2F80ED"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M38 60.1082V20.1082M10 60.1082V20.1082M10 40.1082H38M51.6667 20H60.7295C65.8495 20 70 24.1505 70 29.2705C70 32.7819 68.0161 35.992 64.8754 37.5623L60 40C53.8713 43.0643 50 49.3283 50 56.1803V59.1667C50 59.6269 50.3731 60 50.8333 60H70"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M10 18.1083C11.1046 18.1083 12 19.0037 12 20.1083V38.1083H36V20.1083C36 19.0037 36.8954 18.1083 38 18.1083C39.1046 18.1083 40 19.0037 40 20.1083V60.1083C40 61.2128 39.1046 62.1083 38 62.1083C36.8954 62.1083 36 61.2128 36 60.1083V42.1083H12V60.1083C12 61.2128 11.1046 62.1083 10 62.1083C8.89543 62.1083 8 61.2128 8 60.1083V20.1083C8 19.0037 8.89543 18.1083 10 18.1083Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M49.6667 20C49.6667 18.8954 50.5621 18 51.6667 18H60.7295C66.954 18 72 23.046 72 29.2705C72 33.5395 69.5881 37.442 65.7698 39.3512L60.8944 41.7889C55.4433 44.5144 52 50.0858 52 56.1803V58H70C71.1046 58 72 58.8954 72 60C72 61.1046 71.1046 62 70 62H50.8333C49.2685 62 48 60.7315 48 59.1667V56.1803C48 48.5707 52.2993 41.6143 59.1056 38.2111L63.981 35.7735C66.4441 34.5419 68 32.0244 68 29.2705C68 25.2551 64.7449 22 60.7295 22H51.6667C50.5621 22 49.6667 21.1046 49.6667 20Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreH2 = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreH2.displayName = 'CoreH2'

export default CoreH2
