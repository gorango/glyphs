
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M20.6718 37.5574C20.4252 38.3274 20.292 39.1483 20.292 40.0002V49.4418C20.292 53.2552 22.9837 56.5385 26.7231 57.2864L38.7231 59.6864C39.7588 59.8935 40.8252 59.8935 41.8609 59.6864L53.8609 57.2864C57.6003 56.5385 60.292 53.2552 60.292 49.4418V40.0002C60.292 39.0834 60.1378 38.2026 59.8538 37.3823L40.3165 43.8948C40.1112 43.9632 39.8893 43.9632 39.684 43.8948L20.6718 37.5574Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M39.6837 20.1055C39.889 20.0371 40.1109 20.0371 40.3162 20.1055L73.1539 31.0514C74.0656 31.3553 74.0656 32.6449 73.1539 32.9488L40.3161 43.8947C40.1109 43.9631 39.889 43.9631 39.6837 43.8947L6.84597 32.9488C5.93427 32.6449 5.93427 31.3553 6.84597 31.0514L39.6837 20.1055Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M39.0002 31L16.0772 37.5494C13.0721 38.408 11.0002 41.1547 11.0002 44.2801V50.5M11.0002 50.5L10.0002 62M11.0002 50.5L12.0002 62"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M20.2917 43.2281V49.4416C20.2917 53.255 22.9834 56.5383 26.7228 57.2862L38.7228 59.6862C39.7585 59.8934 40.825 59.8934 41.8607 59.6862L53.8607 57.2862C57.6001 56.5383 60.2917 53.255 60.2917 49.4416V43.0336L42.0555 49.1124C40.7212 49.5571 39.2787 49.5571 37.9445 49.1124L20.2917 43.2281ZM24.407 33.0048C25.5573 32.3647 26.8819 32 28.2917 32H52.2917C53.611 32 54.8557 32.3193 55.9527 32.8849L40 38.2025L24.407 33.0048Z"
            fill="currentColor"
          />
          <path
            d="M20.2917 43.2281L20.7661 41.8051C20.3087 41.6526 19.8058 41.7293 19.4147 42.0112C19.0235 42.2932 18.7917 42.7459 18.7917 43.2281H20.2917ZM26.7228 57.2862L26.4286 58.7571L26.7228 57.2862ZM38.7228 59.6862L39.017 58.2153V58.2153L38.7228 59.6862ZM41.8607 59.6862L41.5665 58.2153V58.2153L41.8607 59.6862ZM53.8607 57.2862L53.5665 55.8153L53.8607 57.2862ZM60.2917 43.0336H61.7917C61.7917 42.5514 61.56 42.0987 61.1688 41.8167C60.7777 41.5348 60.2748 41.4581 59.8174 41.6106L60.2917 43.0336ZM42.0555 49.1124L41.5811 47.6893L41.5811 47.6893L42.0555 49.1124ZM37.9445 49.1124L38.4189 47.6893L37.9445 49.1124ZM24.407 33.0048L23.6776 31.6941C23.158 31.9833 22.8583 32.5521 22.9135 33.1442C22.9688 33.7363 23.3686 34.2398 23.9327 34.4279L24.407 33.0048ZM55.9527 32.8849L56.427 34.308C56.9994 34.1172 57.4017 33.602 57.4482 33.0005C57.4947 32.399 57.1763 31.8282 56.6401 31.5517L55.9527 32.8849ZM40 38.2025L39.5257 39.6255C39.8336 39.7282 40.1664 39.7282 40.4743 39.6255L40 38.2025ZM21.7917 49.4416V43.2281H18.7917V49.4416H21.7917ZM27.017 55.8153C23.9787 55.2077 21.7917 52.54 21.7917 49.4416H18.7917C18.7917 53.97 21.9881 57.869 26.4286 58.7571L27.017 55.8153ZM39.017 58.2153L27.017 55.8153L26.4286 58.7571L38.4286 61.1571L39.017 58.2153ZM41.5665 58.2153C40.725 58.3836 39.8585 58.3836 39.017 58.2153L38.4286 61.1571C39.6585 61.4031 40.925 61.4031 42.1549 61.1571L41.5665 58.2153ZM53.5665 55.8153L41.5665 58.2153L42.1549 61.1571L54.1549 58.7571L53.5665 55.8153ZM58.7917 49.4416C58.7917 52.54 56.6048 55.2077 53.5665 55.8153L54.1549 58.7571C58.5954 57.869 61.7917 53.97 61.7917 49.4416H58.7917ZM58.7917 43.0336V49.4416H61.7917V43.0336H58.7917ZM59.8174 41.6106L41.5811 47.6893L42.5298 50.5354L60.7661 44.4566L59.8174 41.6106ZM41.5811 47.6893C40.5548 48.0314 39.4452 48.0314 38.4189 47.6893L37.4702 50.5354C39.1123 51.0828 40.8877 51.0828 42.5298 50.5354L41.5811 47.6893ZM38.4189 47.6893L20.7661 41.8051L19.8174 44.6511L37.4702 50.5354L38.4189 47.6893ZM25.1365 34.3155C26.0694 33.7963 27.1437 33.5 28.2917 33.5V30.5C26.6202 30.5 25.0452 30.933 23.6776 31.6941L25.1365 34.3155ZM28.2917 33.5H52.2917V30.5H28.2917V33.5ZM52.2917 33.5C53.3663 33.5 54.3759 33.7596 55.2653 34.2182L56.6401 31.5517C55.3355 30.8791 53.8557 30.5 52.2917 30.5V33.5ZM40.4743 39.6255L56.427 34.308L55.4784 31.4619L39.5257 36.7795L40.4743 39.6255ZM23.9327 34.4279L39.5257 39.6255L40.4743 36.7795L24.8814 31.5818L23.9327 34.4279Z"
            fill="currentColor"
          />
          <path
            d="M39.6838 20.1054C39.889 20.037 40.111 20.037 40.3162 20.1054L73.154 31.0513C74.0657 31.3552 74.0656 32.6448 73.154 32.9487L40.3162 43.8946C40.111 43.963 39.889 43.963 39.6838 43.8946L6.84604 32.9487C5.93435 32.6448 5.93435 31.3552 6.84605 31.0513L39.6838 20.1054Z"
            fill="currentColor"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M39 31L16.077 37.5494C13.0718 38.408 11 41.1547 11 44.2801V50.5M10 62L11 50.5M11 50.5L12 62"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M20.6716 37.5574C20.4249 38.3274 20.2917 39.1483 20.2917 40.0002V49.4418C20.2917 53.2552 22.9834 56.5385 26.7228 57.2864L38.7228 59.6864C39.7585 59.8935 40.825 59.8935 41.8607 59.6864L53.8607 57.2864C57.6001 56.5385 60.2917 53.2552 60.2917 49.4418V40.0002C60.2917 39.0834 60.1375 38.2026 59.8536 37.3823L40.3162 43.8948C40.111 43.9632 39.889 43.9632 39.6838 43.8948L20.6716 37.5574Z"
            fill="#9B51E0"
          />
          <path
            d="M20.6716 37.5574L21.304 35.66C20.7969 35.491 20.2433 35.532 19.7666 35.7738C19.29 36.0157 18.9299 36.4383 18.7669 36.9473L20.6716 37.5574ZM26.7228 57.2864L26.3306 59.2476H26.3306L26.7228 57.2864ZM38.7228 59.6864L39.1151 57.7252H39.1151L38.7228 59.6864ZM41.8607 59.6864L42.2529 61.6476L42.2529 61.6476L41.8607 59.6864ZM53.8607 57.2864L54.2529 59.2476L53.8607 57.2864ZM59.8536 37.3823L61.7436 36.7281C61.3852 35.6928 60.2605 35.1385 59.2211 35.485L59.8536 37.3823ZM40.3162 43.8948L40.9487 45.7922L40.9487 45.7922L40.3162 43.8948ZM39.6838 43.8948L40.3162 41.9974L40.3162 41.9974L39.6838 43.8948ZM22.2917 40.0002C22.2917 39.3578 22.392 38.7427 22.5762 38.1675L18.7669 36.9473C18.4578 37.9122 18.2917 38.9387 18.2917 40.0002H22.2917ZM22.2917 49.4418V40.0002H18.2917V49.4418H22.2917ZM27.1151 55.3252C24.3105 54.7643 22.2917 52.3018 22.2917 49.4418H18.2917C18.2917 54.2086 21.6564 58.3127 26.3306 59.2476L27.1151 55.3252ZM39.1151 57.7252L27.1151 55.3252L26.3306 59.2476L38.3306 61.6476L39.1151 57.7252ZM41.4685 57.7252C40.6917 57.8806 39.8918 57.8806 39.1151 57.7252L38.3306 61.6476C39.6252 61.9065 40.9583 61.9065 42.2529 61.6476L41.4685 57.7252ZM53.4684 55.3252L41.4684 57.7252L42.2529 61.6476L54.2529 59.2476L53.4684 55.3252ZM58.2917 49.4418C58.2917 52.3018 56.273 54.7643 53.4684 55.3252L54.2529 59.2476C58.9272 58.3127 62.2917 54.2086 62.2917 49.4418H58.2917ZM58.2917 40.0002V49.4418H62.2917V40.0002H58.2917ZM57.9636 38.0365C58.1757 38.6492 58.2917 39.309 58.2917 40.0002H62.2917C62.2917 38.8577 62.0994 37.756 61.7436 36.7281L57.9636 38.0365ZM59.2211 35.485L39.6838 41.9974L40.9487 45.7922L60.4861 39.2797L59.2211 35.485ZM39.6838 41.9974C39.889 41.929 40.111 41.929 40.3162 41.9974L39.0513 45.7921C39.6671 45.9974 40.3329 45.9974 40.9487 45.7922L39.6838 41.9974ZM40.3162 41.9974L21.304 35.66L20.0391 39.4547L39.0513 45.7921L40.3162 41.9974Z"
            fill="#9B51E0"
          />
          <path
            d="M39.6838 20.1054C39.889 20.037 40.111 20.037 40.3162 20.1054L73.154 31.0513C74.0657 31.3552 74.0656 32.6448 73.154 32.9487L40.3162 43.8946C40.111 43.963 39.889 43.963 39.6838 43.8946L6.84604 32.9487C5.93435 32.6448 5.93435 31.3552 6.84605 31.0513L39.6838 20.1054Z"
            fill="#9B51E0"
            stroke="#F2C94C"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M39 31L16.077 37.5494C13.0718 38.408 11 41.1547 11 44.2801V50.5M10 62L11 50.5M11 50.5L12 62"
            stroke="#F2C94C"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M20.6716 37.5574C20.425 38.3275 20.2918 39.1483 20.2918 40.0002V49.4418C20.2918 53.2552 22.9835 56.5386 26.7229 57.2864L38.7229 59.6864C39.7586 59.8936 40.8251 59.8936 41.8608 59.6864L53.8608 57.2864C57.6002 56.5386 60.2918 53.2552 60.2918 49.4418V40.0002C60.2918 39.0834 60.1376 38.2026 59.8537 37.3824L40.3163 43.8948C40.111 43.9632 39.8891 43.9632 39.6839 43.8948L20.6716 37.5574Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M39.6839 20.1055C39.8891 20.0371 40.111 20.0371 40.3163 20.1055L73.154 31.0514C74.0657 31.3553 74.0657 32.6449 73.154 32.9488L40.3163 43.8948C40.111 43.9632 39.8891 43.9632 39.6839 43.8948L6.84612 32.9488C5.93443 32.6449 5.93443 31.3553 6.84613 31.0514L39.6839 20.1055Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M40.3163 43.8948L59.8537 37.3824C60.1376 38.2026 60.2918 39.0834 60.2918 40.0002V49.4418C60.2918 53.2552 57.6002 56.5386 53.8608 57.2864L41.8608 59.6864C40.8251 59.8936 39.7586 59.8936 38.7229 59.6864L26.7229 57.2864C22.9835 56.5386 20.2918 53.2552 20.2918 49.4418V40.0002C20.2918 39.1483 20.425 38.3275 20.6716 37.5574L39.6839 43.8948M40.3163 43.8948C40.111 43.9632 39.8891 43.9632 39.6839 43.8948M40.3163 43.8948L73.154 32.9488C74.0657 32.6449 74.0657 31.3553 73.154 31.0514L40.3163 20.1055C40.111 20.0371 39.8891 20.0371 39.6839 20.1055L6.84613 31.0514C5.93443 31.3553 5.93443 32.6449 6.84612 32.9488L39.6839 43.8948M39.0001 31.0001L16.077 37.5496C13.0719 38.4082 11.0001 41.1549 11.0001 44.2802V50.5001M11.0001 50.5001L10.0001 62.0001M11.0001 50.5001L12.0001 62.0001"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M39.0514 18.2081C39.6672 18.0029 40.333 18.0029 40.9488 18.2081L73.7865 29.1541C76.5216 30.0658 76.5215 33.9345 73.7865 34.8462L62.2086 38.7055C62.2635 39.1298 62.2918 39.562 62.2918 40.0002V49.4418C62.2918 54.2086 58.9272 58.3127 54.253 59.2476L42.253 61.6476C40.9584 61.9065 39.6253 61.9065 38.3307 61.6476L26.3307 59.2476C21.6564 58.3127 18.2918 54.2086 18.2918 49.4418V40.0002C18.2918 39.6569 18.3092 39.3172 18.3432 38.9821L16.6265 39.4726C14.48 40.0859 13.0001 42.0478 13.0001 44.2802V50.4133L13.9926 61.8269C14.0882 62.9273 13.2738 63.8969 12.1733 63.9926C11.7485 64.0295 11.3432 63.9308 11.0001 63.7324C10.657 63.9308 10.2517 64.0295 9.82682 63.9926C8.7264 63.8969 7.91191 62.9273 8.0076 61.8269L9.00008 50.4133V44.2802C9.00008 41.3433 10.423 38.6665 12.6974 37.0074L6.21367 34.8462C3.47855 33.9345 3.47861 30.0657 6.21367 29.1541L39.0514 18.2081ZM25.3041 36.9933L39.5495 32.9232C40.6116 32.6197 41.2266 31.5127 40.9231 30.4507C40.6197 29.3886 39.5127 28.7736 38.4506 29.0771L18.584 34.7532L10.3246 32.0001L40.0001 22.1083L69.6755 32.0001L40.0001 41.8919L25.3041 36.9933ZM40.9488 45.7922L58.2918 40.0112V49.4418C58.2918 52.3019 56.2731 54.7644 53.4685 55.3253L41.4685 57.7253C40.6918 57.8806 39.8919 57.8806 39.1151 57.7253L27.1151 55.3253C24.3106 54.7644 22.2918 52.3019 22.2918 49.4418V40.2057L39.0514 45.7922C39.6672 45.9974 40.333 45.9974 40.9488 45.7922Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreGraduationCap = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreGraduationCap.displayName = 'CoreGraduationCap'

export default CoreGraduationCap
