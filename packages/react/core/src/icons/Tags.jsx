
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M39.2426 10.2427L55.2426 26.2427C56.3679 27.3679 57 28.8941 57 30.4853L57 60.0001C57 63.3138 54.3137 66.0001 51 66.0001H19C15.6863 66.0001 13 63.3138 13 60.0001V30.4854C13 28.8941 13.6321 27.3679 14.7574 26.2427L30.7574 10.2427C33.1005 7.89956 36.8995 7.89957 39.2426 10.2427Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M31.5 24.5C33.433 22.567 36.567 22.567 38.5 24.5C40.433 26.433 40.433 29.567 38.5 31.5C36.567 33.433 33.433 33.433 31.5 31.5C29.567 29.567 29.567 26.433 31.5 24.5Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M21.7307 70.8721C22.7487 72.7359 24.7267 74.0001 27 74.0001H59C62.3137 74.0001 65 71.3138 65 68.0001L65 38.4854C65 36.8941 64.3678 35.368 63.2426 34.2427L61.4381 32.4382"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M27 74C24.027 74 21.559 71.8377 21.0829 69H51C55.9706 69 60 64.9705 60 60V31L63.2426 34.2427C64.3679 35.3679 65 36.894 65 38.4853V68C65 71.3137 62.3137 74 59 74H27Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M30.7574 10.2427C33.1005 7.89956 36.8995 7.89957 39.2426 10.2427L55.2426 26.2427C56.0866 27.0866 56.6531 28.156 56.8837 29.3093C56.9605 29.6937 57 30.0874 57 30.4852L57 59.9999C57 60.4592 56.9484 60.9066 56.8507 61.3363C56.2432 64.0068 53.8544 65.9999 51 65.9999L19 66.0001C15.6863 66.0001 13 63.3138 13 60.0001V30.4854C13 28.8941 13.6321 27.3679 14.7574 26.2427L30.7574 10.2427ZM31.5 24.5001C33.433 22.5671 36.567 22.5671 38.5 24.5001C40.433 26.4331 40.433 29.5671 38.5 31.5001C36.567 33.4331 33.433 33.4331 31.5 31.5001C29.567 29.5671 29.567 26.4331 31.5 24.5001Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M30.7574 10.2427C33.1005 7.89956 36.8995 7.89957 39.2426 10.2427L55.2426 26.2427C56.3679 27.3679 57 28.8941 57 30.4853L57 60.0001C57 63.3138 54.3137 66.0001 51 66.0001H19C15.6863 66.0001 13 63.3138 13 60.0001V30.4854C13 28.8941 13.6321 27.3679 14.7574 26.2427L30.7574 10.2427Z"
            fill="#F2C94C"
          />
          <path
            d="M31.5 24.5C33.433 22.567 36.567 22.567 38.5 24.5V24.5C40.433 26.433 40.433 29.567 38.5 31.5V31.5C36.567 33.433 33.433 33.433 31.5 31.5V31.5C29.567 29.567 29.567 26.433 31.5 24.5V24.5Z"
            stroke="#EB5757"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M21 66V68C21 71.3138 23.6863 74 27 74H59C62.3137 74 65 71.3138 65 68L65 38.4853C65 36.894 64.3679 35.3679 63.2426 34.2427L55.2585 26.2585C56.3738 27.3822 57 28.9015 57 30.4853L57 60C57 63.3137 54.3137 66 51 66H21Z"
            fill="#F2994A"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M30.7574 10.2427C33.1005 7.89956 36.8995 7.89957 39.2426 10.2427L55.2426 26.2427C56.3679 27.3679 57 28.8941 57 30.4853L57 60.0001C57 63.3138 54.3137 66.0001 51 66.0001H19C15.6863 66.0001 13 63.3138 13 60.0001V30.4854C13 28.8941 13.6321 27.3679 14.7574 26.2427L30.7574 10.2427Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M31.5 24.5001C33.433 22.5671 36.567 22.5671 38.5 24.5001C40.433 26.4331 40.433 29.5671 38.5 31.5001C36.567 33.4331 33.433 33.4331 31.5 31.5001C29.567 29.5671 29.567 26.4331 31.5 24.5001Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M21 65.9999V68C21 71.3137 23.6863 74 27 74H59C62.3137 74 65 71.3137 65 68L65 38.4853C65 36.894 64.3679 35.3679 63.2426 34.2426L55.2585 26.2585C56.3738 27.3822 57 28.9015 57 30.4853L57 60.0001C57 63.3138 54.3137 66.0001 51 66.0001L21 65.9999Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M51 66.0001H19C15.6863 66.0001 13 63.3138 13 60.0001V30.4854C13 28.8941 13.6321 27.3679 14.7574 26.2427L30.7574 10.2427C33.1005 7.89956 36.8995 7.89957 39.2426 10.2427L55.2426 26.2427C56.3679 27.3679 57 28.8941 57 30.4853M51 66.0001C54.3137 66.0001 57 63.3138 57 60.0001L57 30.4853M51 66.0001L21 65.9999V68C21 71.3137 23.6863 74 27 74H59C62.3137 74 65 71.3137 65 68L65 38.4853C65 36.894 64.3679 35.3679 63.2426 34.2426L55.2585 26.2585C56.3738 27.3822 57 28.9015 57 30.4853M31.5 31.5001C29.567 29.5671 29.567 26.4331 31.5 24.5001C33.433 22.5671 36.567 22.5671 38.5 24.5001C40.433 26.4331 40.433 29.5671 38.5 31.5001C36.567 33.4331 33.433 33.4331 31.5 31.5001Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            d="M54.9187 60.8062C54.5457 62.6289 52.933 63.9999 51 63.9999H21C20.9924 63.9999 20.9849 64 20.9773 64.0001H19C16.7909 64.0001 15 62.2092 15 60.0001V30.4854C15 29.4245 15.4214 28.4071 16.1716 27.6569L32.1716 11.6569C33.7337 10.0948 36.2663 10.0948 37.8284 11.6569L53.8284 27.6569C54.3651 28.1935 54.7335 28.8669 54.8997 29.5952C54.9513 29.8213 54.9835 30.0527 54.9951 30.287C54.9984 30.3529 55 30.419 55 30.4853L55 59.9999M54.9187 60.8062L55 59.9999M54.9187 60.8062C54.972 60.5458 55 60.2761 55 59.9999M59 59.9999L59 32.8284L61.8284 35.6569C62.5786 36.407 63 37.4244 63 38.4853L63 68C63 70.2091 61.2091 72 59 72H27C24.7909 72 23 70.2092 23 68.0001H51C54.7614 68.0001 57.9164 65.4042 58.7715 61.9063C58.9208 61.2954 59 60.6569 59 59.9999ZM59 59.9999C59 60 59 59.9999 59 59.9999ZM40.6569 8.8285C37.5327 5.70431 32.4673 5.7043 29.3431 8.82849L13.3431 24.8285C11.8429 26.3288 11 28.3636 11 30.4854V60.0001C11 64.4183 14.5817 68.0001 19 68.0001C19 72.4183 22.5817 76 27 76H59C63.4183 76 67 72.4183 67 68L67 38.4853C67 36.3635 66.1572 34.3287 64.6569 32.8284L56.678 24.8496L56.6727 24.8443C56.6692 24.8408 56.6657 24.8373 56.6622 24.8339C56.6604 24.8321 56.6586 24.8303 56.6569 24.8285L40.6569 8.8285ZM39.9142 23.0859C37.2002 20.3718 32.7998 20.3718 30.0858 23.0859C27.3717 25.7999 27.3717 30.2002 30.0858 32.9143C32.7998 35.6283 37.2002 35.6283 39.9142 32.9143C42.6283 30.2002 42.6283 25.7999 39.9142 23.0859ZM32.9142 25.9143C34.0662 24.7623 35.9338 24.7623 37.0858 25.9143C38.2377 27.0662 38.2377 28.9339 37.0858 30.0859C35.9338 31.2378 34.0662 31.2378 32.9142 30.0859C31.7623 28.9339 31.7623 27.0662 32.9142 25.9143Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreTags = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreTags.displayName = 'CoreTags'

export default CoreTags
