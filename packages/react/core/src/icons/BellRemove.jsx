
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M27.6274 17C23.384 17 19.3143 18.6857 16.3137 21.6863L15.6863 22.3137C12.6857 25.3143 11 29.384 11 33.6274V36.5656C11 41.9665 8.85449 47.1461 5.03546 50.9651C4.37247 51.6281 4 52.5273 4 53.4649C4 55.4173 5.58276 57.0001 7.53519 57.0001H48.4648C50.4172 57.0001 52 55.4173 52 53.4649C52 52.5273 51.6275 51.6281 50.9645 50.9651C47.1455 47.1461 45 41.9665 45 36.5656V33.6274C45 29.384 43.3143 25.3143 40.3137 22.3137L39.6863 21.6863C36.6857 18.6857 32.616 17 28.3726 17H27.6274Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M21.7549 57C21.3124 57.9211 21.0718 58.9434 21.0718 60C21.0718 62.4752 22.3923 64.7624 24.5359 66C26.6795 67.2376 29.3205 67.2376 31.4641 66C33.6077 64.7624 34.9282 62.4752 34.9282 60C34.9282 58.9434 34.6876 57.9211 34.245 57"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M30 17.0829V14C30 12.8954 29.1046 12 28 12C26.8954 12 26 12.8954 26 14V17.0829"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M76 22H56"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M21.0718 60C21.0718 62.4752 22.3923 64.7624 24.5359 66C26.6795 67.2376 29.3205 67.2376 31.4641 66C33.6077 64.7624 34.9282 62.4752 34.9282 60H21.0718Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M27.6274 17C23.384 17 19.3143 18.6857 16.3137 21.6863L15.6863 22.3137C12.6857 25.3143 11 29.384 11 33.6274V36.5656C11 41.9665 8.85449 47.1461 5.03546 50.9651C4.37247 51.6281 4 52.5273 4 53.4649C4 55.4173 5.58276 57.0001 7.53519 57.0001L48.4648 57.0001C50.4172 57.0001 52 55.4173 52 53.4649C52 52.5273 51.6275 51.6281 50.9645 50.9651C47.1455 47.1461 45 41.9665 45 36.5656V33.6274C45 29.384 43.3143 25.3143 40.3137 22.3137L39.6863 21.6863C36.6857 18.6857 32.616 17 28.3726 17H27.6274Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M30 17.0829V14C30 12.8954 29.1046 12 28 12C26.8954 12 26 12.8954 26 14V17.0829C26.5383 17.0279 27.0814 17 27.6274 17H28.3726C28.9186 17 29.4617 17.0279 30 17.0829Z"
            fill="currentColor"
          />
          <path
            d="M56 22L65.0909 22L66.9091 22L76 22"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M21.7549 57C21.3124 57.9211 21.0718 58.9434 21.0718 60C21.0718 62.4752 22.3923 64.7624 24.5359 66C26.6795 67.2376 29.3205 67.2376 31.4641 66C33.6077 64.7624 34.9282 62.4752 34.9282 60C34.9282 58.9434 34.6876 57.9211 34.245 57H21.7549Z"
            fill="#EB5757"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M27.6274 17C23.384 17 19.3143 18.6857 16.3137 21.6863L15.6863 22.3137C12.6857 25.3143 11 29.384 11 33.6274V36.5656C11 41.9665 8.85449 47.1461 5.03546 50.9651C4.37247 51.6281 4 52.5273 4 53.4649C4 55.4173 5.58276 57.0001 7.53519 57.0001L48.4648 57.0001C50.4172 57.0001 52 55.4173 52 53.4649C52 52.5273 51.6275 51.6281 50.9645 50.9651C47.1455 47.1461 45 41.9665 45 36.5656V33.6274C45 29.384 43.3143 25.3143 40.3137 22.3137L39.6863 21.6863C36.6857 18.6857 32.616 17 28.3726 17H27.6274Z"
            fill="#F2C94C"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M30 17.0829V14C30 12.8954 29.1046 12 28 12C26.8954 12 26 12.8954 26 14V17.0829C26.5383 17.0279 27.0814 17 27.6274 17H28.3726C28.9186 17 29.4617 17.0279 30 17.0829Z"
            fill="#F2994A"
          />
          <path
            d="M56 22L65.0909 22L66.9091 22L76 22"
            stroke="#EB5757"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M21.755 57C21.3124 57.9211 21.0718 58.9434 21.0718 60C21.0718 62.4752 22.3923 64.7624 24.5359 66C26.6795 67.2376 29.3205 67.2376 31.4641 66C33.6077 64.7624 34.9282 62.4752 34.9282 60C34.9282 58.9434 34.6876 57.9211 34.245 57H21.755Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M27.6274 17C23.384 17 19.3143 18.6857 16.3137 21.6863L15.6863 22.3137C12.6857 25.3143 11 29.384 11 33.6274V36.5656C11 41.9665 8.85449 47.1461 5.03546 50.9651C4.37247 51.6281 4 52.5273 4 53.4649C4 55.4173 5.58276 57.0001 7.53519 57.0001H48.4648C50.4172 57.0001 52 55.4173 52 53.4649C52 52.5273 51.6275 51.6281 50.9645 50.9651C47.1455 47.1461 45 41.9665 45 36.5656V33.6274C45 29.384 43.3143 25.3143 40.3137 22.3137L39.6863 21.6863C36.6857 18.6857 32.616 17 28.3726 17H27.6274Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M30 17.0829V14C30 12.8954 29.1046 12 28 12C26.8954 12 26 12.8954 26 14V17.0829C26.5383 17.0279 27.0814 17 27.6274 17H28.3726C28.9186 17 29.4617 17.0279 30 17.0829Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M27.6274 17C23.384 17 19.3143 18.6857 16.3137 21.6863L15.6863 22.3137C12.6857 25.3143 11 29.384 11 33.6274V36.5656C11 41.9665 8.85449 47.1461 5.03546 50.9651C4.37247 51.6281 4 52.5273 4 53.4649C4 55.4173 5.58276 57.0001 7.53519 57.0001H48.4648C50.4172 57.0001 52 55.4173 52 53.4649C52 52.5273 51.6275 51.6281 50.9645 50.9651C47.1455 47.1461 45 41.9665 45 36.5656V33.6274C45 29.384 43.3143 25.3143 40.3137 22.3137L39.6863 21.6863C36.6857 18.6857 32.616 17 28.3726 17M27.6274 17H28.3726M27.6274 17C27.0814 17 26.5383 17.0279 26 17.0829V14C26 12.8954 26.8954 12 28 12C29.1046 12 30 12.8954 30 14V17.0829C29.4617 17.0279 28.9186 17 28.3726 17M76 22H56M21.0718 60C21.0718 58.9434 21.3124 57.9211 21.755 57H34.245C34.6876 57.9211 34.9282 58.9434 34.9282 60C34.9282 62.4752 33.6077 64.7624 31.4641 66C29.3205 67.2376 26.6795 67.2376 24.5359 66C22.3923 64.7624 21.0718 62.4752 21.0718 60Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M24 14C24 11.7909 25.7909 10 28 10C30.2091 10 32 11.7909 32 14V15.3692C35.4219 16.0733 38.593 17.7646 41.1005 20.2721L41.7279 20.8995C45.1036 24.2752 47 28.8535 47 33.6274V36.5656C47 41.436 48.9348 46.107 52.3787 49.5508C53.4168 50.5889 54 51.9968 54 53.4649C54 56.5219 51.5218 59.0001 48.4648 59.0001H36.8721C36.9093 59.3298 36.9282 59.6636 36.9282 60C36.9282 63.1897 35.2265 66.1372 32.4641 67.7321C29.7017 69.3269 26.2983 69.3269 23.5359 67.7321C20.7735 66.1372 19.0718 63.1897 19.0718 60C19.0718 59.6636 19.0907 59.3298 19.1279 59.0001H7.53519C4.47819 59.0001 2 56.5219 2 53.4649C2 51.9968 2.58319 50.5889 3.62126 49.5508C7.06521 46.107 9 41.436 9 36.5656V33.6274C9 28.8535 10.8964 24.2752 14.2721 20.8995L14.8995 20.2721C17.407 17.7646 20.5781 16.0733 24 15.3692V14ZM28.3726 19C28.8504 19 29.3256 19.0244 29.7966 19.0726C32.9865 19.3986 35.9844 20.8128 38.2721 23.1005L38.8995 23.7279C41.525 26.3534 43 29.9144 43 33.6274V36.5656C43 42.4969 45.3562 48.1853 49.5503 52.3793C49.8383 52.6672 50 53.0577 50 53.4649C50 54.3127 49.3127 55.0001 48.4648 55.0001H7.53519C6.68733 55.0001 6 54.3127 6 53.4649C6 53.0577 6.16175 52.6672 6.44966 52.3793C10.6438 48.1853 13 42.4969 13 36.5656V33.6274C13 29.9144 14.475 26.3534 17.1005 23.7279L17.7279 23.1005C20.0156 20.8128 23.0135 19.3986 26.2034 19.0726C26.6744 19.0244 27.1496 19 27.6274 19H28.3726ZM23.1741 59.0001C23.1068 59.3254 23.0718 59.6601 23.0718 60C23.0718 61.7607 24.0111 63.3876 25.5359 64.2679C27.0607 65.1483 28.9393 65.1483 30.4641 64.2679C31.9889 63.3876 32.9282 61.7607 32.9282 60C32.9282 59.6601 32.8932 59.3254 32.8259 59.0001H23.1741Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M56 20C54.8954 20 54 20.8954 54 22C54 23.1046 54.8954 24 56 24H76C77.1046 24 78 23.1046 78 22C78 20.8954 77.1046 20 76 20H56Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreBellRemove = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreBellRemove.displayName = 'CoreBellRemove'

export default CoreBellRemove
