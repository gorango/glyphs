
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M16 13.5C16 12.6716 16.6716 12 17.5 12H63.1716C63.702 12 64.2107 12.2107 64.5858 12.5858L70.5858 18.5858C71.3668 19.3668 71.3668 20.6332 70.5858 21.4142L64.5858 27.4142C64.2107 27.7893 63.702 28 63.1716 28H17.5C16.6716 28 16 27.3284 16 26.5V13.5Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M63.9999 35.5615C63.9999 34.7331 63.3284 34.0615 62.4999 34.0615H16.8284C16.2979 34.0615 15.7892 34.2722 15.4142 34.6473L9.41415 40.6473C8.63311 41.4284 8.63311 42.6947 9.41416 43.4757L15.4142 49.4757C15.7892 49.8508 16.2979 50.0615 16.8284 50.0615H62.4999C63.3284 50.0615 63.9999 49.39 63.9999 48.5615V35.5615Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M40 8V12M40 28V34.0615M40 50.0615V72"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M43 8C43 6.34315 41.6569 5 40 5C38.3431 5 37 6.34315 37 8H43ZM37 12C37 13.6569 38.3431 15 40 15C41.6569 15 43 13.6569 43 12H37ZM43 28C43 26.3431 41.6569 25 40 25C38.3431 25 37 26.3431 37 28H43ZM37 34.0615C37 35.7184 38.3431 37.0615 40 37.0615C41.6569 37.0615 43 35.7184 43 34.0615H37ZM43 50.0615C43 48.4047 41.6569 47.0615 40 47.0615C38.3431 47.0615 37 48.4047 37 50.0615H43ZM37 72C37 73.6569 38.3431 75 40 75C41.6569 75 43 73.6569 43 72H37ZM37 8V12H43V8H37ZM37 28V34.0615H43V28H37ZM37 50.0615V72H43V50.0615H37Z"
            fill="currentColor"
          />
          <path
            d="M16 13.5C16 12.6716 16.6716 12 17.5 12H63.1716C63.702 12 64.2107 12.2107 64.5858 12.5858L70.5858 18.5858C71.3668 19.3668 71.3668 20.6332 70.5858 21.4142L64.5858 27.4142C64.2107 27.7893 63.702 28 63.1716 28H17.5C16.6716 28 16 27.3284 16 26.5V13.5Z"
            fill="currentColor"
          />
          <path
            d="M64 35.5615C64 34.7331 63.3284 34.0615 62.5 34.0615H16.8284C16.298 34.0615 15.7893 34.2722 15.4142 34.6473L9.41421 40.6473C8.63316 41.4284 8.63316 42.6947 9.41422 43.4757L15.4142 49.4757C15.7893 49.8508 16.298 50.0615 16.8284 50.0615H62.5C63.3284 50.0615 64 49.39 64 48.5615V35.5615Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M42 8C42 6.89543 41.1046 6 40 6C38.8954 6 38 6.89543 38 8H42ZM38 12C38 13.1046 38.8954 14 40 14C41.1046 14 42 13.1046 42 12H38ZM42 28C42 26.8954 41.1046 26 40 26C38.8954 26 38 26.8954 38 28H42ZM38 34.0615C38 35.1661 38.8954 36.0615 40 36.0615C41.1046 36.0615 42 35.1661 42 34.0615H38ZM42 50.0615C42 48.957 41.1046 48.0615 40 48.0615C38.8954 48.0615 38 48.957 38 50.0615H42ZM38 72C38 73.1046 38.8954 74 40 74C41.1046 74 42 73.1046 42 72H38ZM38 8V12H42V8H38ZM38 28V34.0615H42V28H38ZM38 50.0615V72H42V50.0615H38Z"
            fill="#4F4F4F"
          />
          <path
            d="M16 13.5C16 12.6716 16.6716 12 17.5 12H63.1716C63.702 12 64.2107 12.2107 64.5858 12.5858L70.5858 18.5858C71.3668 19.3668 71.3668 20.6332 70.5858 21.4142L64.5858 27.4142C64.2107 27.7893 63.702 28 63.1716 28H17.5C16.6716 28 16 27.3284 16 26.5V13.5Z"
            fill="#219653"
          />
          <path
            d="M64 35.5615C64 34.7331 63.3284 34.0615 62.5 34.0615H16.8284C16.298 34.0615 15.7893 34.2722 15.4142 34.6473L9.41421 40.6473C8.63316 41.4284 8.63316 42.6947 9.41422 43.4757L15.4142 49.4757C15.7893 49.8508 16.298 50.0615 16.8284 50.0615H62.5C63.3284 50.0615 64 49.39 64 48.5615V35.5615Z"
            fill="#219653"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M15.9999 13.5C15.9999 12.6716 16.6715 12 17.4999 12H63.1715C63.702 12 64.2107 12.2107 64.5857 12.5858L70.5857 18.5858C71.3668 19.3668 71.3668 20.6332 70.5857 21.4142L64.5857 27.4142C64.2107 27.7893 63.702 28 63.1715 28H17.4999C16.6715 28 15.9999 27.3284 15.9999 26.5V13.5Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M63.9999 35.5615C63.9999 34.7331 63.3284 34.0615 62.4999 34.0615H16.8284C16.2979 34.0615 15.7892 34.2722 15.4142 34.6473L9.41415 40.6473C8.63311 41.4284 8.63311 42.6947 9.41416 43.4757L15.4142 49.4757C15.7892 49.8508 16.2979 50.0615 16.8284 50.0615H62.4999C63.3284 50.0615 63.9999 49.3899 63.9999 48.5615V35.5615Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M39.9999 8V12M39.9999 28V34.0615M39.9999 50.0615V72M17.4999 12H63.1715C63.7019 12 64.2107 12.2107 64.5857 12.5858L70.5857 18.5858C71.3668 19.3668 71.3668 20.6332 70.5857 21.4142L64.5857 27.4142C64.2107 27.7893 63.7019 28 63.1715 28H17.4999C16.6715 28 15.9999 27.3284 15.9999 26.5V13.5C15.9999 12.6716 16.6715 12 17.4999 12ZM62.4999 34.0615H16.8284C16.2979 34.0615 15.7892 34.2722 15.4142 34.6473L9.41415 40.6473C8.63311 41.4284 8.63311 42.6947 9.41416 43.4757L15.4142 49.4757C15.7892 49.8508 16.2979 50.0615 16.8284 50.0615H62.4999C63.3284 50.0615 63.9999 49.39 63.9999 48.5615V35.5615C63.9999 34.7331 63.3284 34.0615 62.4999 34.0615Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M39.9999 6C41.1045 6 41.9999 6.89543 41.9999 8V10H63.1715C64.2324 10 65.2498 10.4214 65.9999 11.1716L71.9999 17.1716C73.562 18.7337 73.562 21.2663 71.9999 22.8284L65.9999 28.8284C65.2498 29.5786 64.2324 30 63.1715 30H41.9999V32.0615H62.4999C64.4329 32.0615 65.9999 33.6285 65.9999 35.5615V48.5615C65.9999 50.4945 64.4329 52.0615 62.4999 52.0615H41.9999V72C41.9999 73.1046 41.1045 74 39.9999 74C38.8954 74 37.9999 73.1046 37.9999 72V52.0615H16.8284C15.7675 52.0615 14.7501 51.6401 13.9999 50.89L7.99994 44.8899C6.43785 43.3279 6.43784 40.7952 7.99994 39.2331L13.9999 33.2331C14.7501 32.483 15.7675 32.0615 16.8284 32.0615H37.9999V30H17.4999C15.5669 30 13.9999 28.433 13.9999 26.5V13.5C13.9999 11.567 15.5669 10 17.4999 10H37.9999V8C37.9999 6.89543 38.8954 6 39.9999 6ZM61.9999 48.0615V36.0615H16.8284L10.8284 42.0615L16.8284 48.0615H61.9999ZM63.1715 26H17.9999V14H63.1715L69.1715 20L63.1715 26Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreMapSigns = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreMapSigns.displayName = 'CoreMapSigns'

export default CoreMapSigns
