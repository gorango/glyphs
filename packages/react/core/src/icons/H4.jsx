
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M10 60V20"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M10 40H38"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M38 60V20"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M70 47V60M70 47H50.8334C50.4886 47 50.2908 46.6074 50.4961 46.3303L69.504 20.6696C69.6618 20.4565 70 20.5682 70 20.8333V47ZM70 47L73 46.9999"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M35 60.1083C35 61.7651 36.3431 63.1083 38 63.1083C39.6569 63.1083 41 61.7651 41 60.1083H35ZM41 20.1083C41 18.4514 39.6569 17.1083 38 17.1083C36.3431 17.1083 35 18.4514 35 20.1083H41ZM7 60.1083C7 61.7651 8.34315 63.1083 10 63.1083C11.6569 63.1083 13 61.7651 13 60.1083H7ZM13 20.1083C13 18.4514 11.6569 17.1083 10 17.1083C8.34315 17.1083 7 18.4514 7 20.1083H13ZM10 37.1083C8.34315 37.1083 7 38.4514 7 40.1083C7 41.7651 8.34315 43.1083 10 43.1083V37.1083ZM38 43.1083C39.6569 43.1083 41 41.7651 41 40.1083C41 38.4514 39.6569 37.1083 38 37.1083V43.1083ZM41 60.1083V20.1083H35V60.1083H41ZM13 60.1083V20.1083H7V60.1083H13ZM10 43.1083H38V37.1083H10V43.1083Z"
            fill="currentColor"
          />
          <path
            d="M50.4961 46.3303L52.9067 48.116L52.9067 48.116L50.4961 46.3303ZM69.504 20.6696L71.9147 22.4553V22.4553L69.504 20.6696ZM70 47V50C71.6569 50 73 48.6568 73 47H70ZM73 47C73 45.3431 71.6569 44 70 44C68.3432 44 67 45.3431 67 47H73ZM67 60C67 61.6568 68.3432 63 70 63C71.6569 63 73 61.6568 73 60H67ZM73 50.0001C74.6569 50.0001 76 48.6569 76 47.0001C76 45.3432 74.6569 44.0001 73 44.0001V50.0001ZM70 44.0001C68.3432 44.0001 67 45.3432 67 47.0001C67 48.6569 68.3432 50.0001 70 50.0001V44.0001ZM52.9067 48.116L71.9147 22.4553L67.0933 18.8839L48.0854 44.5446L52.9067 48.116ZM50.8334 44C52.9525 44 54.1681 46.4131 52.9067 48.116L48.0854 44.5446C46.4136 46.8016 48.0247 50 50.8334 50V44ZM70 44H50.8334V50H70V44ZM67 20.8333V47H73V20.8333H67ZM71.9147 22.4553C70.351 24.5662 67 23.4603 67 20.8333H73C73 17.6761 68.9726 16.3469 67.0933 18.8839L71.9147 22.4553ZM67 47V60H73V47H67ZM73 44.0001H70V50.0001H73V44.0001Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M36 60.1083C36 61.2128 36.8954 62.1083 38 62.1083C39.1046 62.1083 40 61.2128 40 60.1083H36ZM40 20.1083C40 19.0037 39.1046 18.1083 38 18.1083C36.8954 18.1083 36 19.0037 36 20.1083H40ZM8 60.1083C8 61.2128 8.89543 62.1083 10 62.1083C11.1046 62.1083 12 61.2128 12 60.1083H8ZM12 20.1083C12 19.0037 11.1046 18.1083 10 18.1083C8.89543 18.1083 8 19.0037 8 20.1083H12ZM10 38.1083C8.89543 38.1083 8 39.0037 8 40.1083C8 41.2128 8.89543 42.1083 10 42.1083V38.1083ZM38 42.1083C39.1046 42.1083 40 41.2128 40 40.1083C40 39.0037 39.1046 38.1083 38 38.1083V42.1083ZM40 60.1083V20.1083H36V60.1083H40ZM12 60.1083V20.1083H8V60.1083H12ZM10 42.1083H38V38.1083H10V42.1083Z"
            fill="#56CCF2"
          />
          <path
            d="M50.4961 46.3303L52.1032 47.5208L52.1032 47.5208L50.4961 46.3303ZM69.504 20.6696L71.1111 21.86V21.86L69.504 20.6696ZM70 47V49C71.1046 49 72 48.1045 72 47H70ZM72 47C72 45.8954 71.1046 45 70 45C68.8955 45 68 45.8954 68 47H72ZM68 60C68 61.1045 68.8955 62 70 62C71.1046 62 72 61.1045 72 60H68ZM73 49.0001C74.1046 49.0001 75 48.1046 75 47.0001C75 45.8955 74.1046 45.0001 73 45.0001V49.0001ZM70 45.0001C68.8955 45.0001 68 45.8955 68 47.0001C68 48.1046 68.8955 49.0001 70 49.0001V45.0001ZM52.1032 47.5208L71.1111 21.86L67.8969 19.4791L48.8889 45.1399L52.1032 47.5208ZM50.8334 45C52.1312 45 52.8757 46.4779 52.1032 47.5208L48.8889 45.1399C47.706 46.7368 48.846 49 50.8334 49V45ZM70 45H50.8334V49H70V45ZM68 20.8333V47H72V20.8333H68ZM71.1111 21.86C70.1213 23.1963 68 22.4962 68 20.8333H72C72 18.6401 69.2023 17.7168 67.8969 19.4791L71.1111 21.86ZM68 47V60H72V47H68ZM73 45.0001H70V49.0001H73V45.0001Z"
            fill="#2F80ED"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M38 60.1083V20.1083M10 60.1083V20.1083M10 40.1083H38M70 47H50.8333C50.4886 47 50.2908 46.6074 50.496 46.3304L69.504 20.6697C69.6618 20.4566 70 20.5682 70 20.8334V47ZM70 47V60M70 47L73 47.0001"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M10 18.1083C11.1046 18.1083 12 19.0037 12 20.1083V38.1083H36V20.1083C36 19.0037 36.8954 18.1083 38 18.1083C39.1046 18.1083 40 19.0037 40 20.1083V60.1083C40 61.2128 39.1046 62.1083 38 62.1083C36.8954 62.1083 36 61.2128 36 60.1083V42.1083H12V60.1083C12 61.2128 11.1046 62.1083 10 62.1083C8.89543 62.1083 8 61.2128 8 60.1083V20.1083C8 19.0037 8.89543 18.1083 10 18.1083Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M48.8889 45.14C47.7059 46.7369 48.8459 49 50.8333 49H68V60C68 61.1046 68.8954 62 70 62C71.1046 62 72 61.1046 72 60V49L73 49C74.1046 48.9999 75 48.1045 75 46.9999C74.9999 45.8954 74.1045 44.9999 72.9999 45L72 45V20.8334C72 18.6402 69.2023 17.7169 67.8968 19.4792L48.8889 45.14ZM48.8889 45.14L50.496 46.3304L48.8889 45.14ZM53.9704 45L68 26.0601V45H53.9704ZM52.1031 47.5209L52.104 47.5197C52.1037 47.5201 52.1034 47.5205 52.1031 47.5209L50.8333 46.5803L52.1031 47.5209Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreH4 = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreH4.displayName = 'CoreH4'

export default CoreH4
