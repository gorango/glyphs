
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M21.5627 43.5348C20.7816 44.3158 19.5153 44.3158 18.7343 43.5348L15.8999 40.7004C10.4324 35.233 10.4324 26.3684 15.8999 20.9009C21.3674 15.4334 30.232 15.4334 35.6995 20.9009L37.7224 22.9239C37.7479 22.9479 37.7731 22.9723 37.798 22.9973L45.9859 31.1851C47.3357 32.5349 47.3357 34.7232 45.9859 36.073C44.6362 37.4227 42.4478 37.4227 41.098 36.073L36.4755 31.4504C35.6944 30.6694 34.4281 30.6694 33.647 31.4504"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M33.6473 31.4502L22.4134 42.6842C21.239 44.042 21.2965 46.0969 22.586 47.3864C23.9358 48.7362 26.1242 48.7362 27.4739 47.3864L36.6537 38.2067"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M36.6943 38.2476L36.7351 38.2883L27.5553 47.4681C26.2055 48.8179 26.2055 51.0062 27.5553 52.356C28.905 53.7057 31.0934 53.7057 32.4432 52.356L41.6229 43.1762L41.6635 43.2168"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M41.7043 43.2573L32.5245 52.4371C31.1748 53.7868 31.1748 55.9752 32.5245 57.325C33.8743 58.6747 36.0626 58.6747 37.4124 57.325L46.5922 48.1452L46.6328 48.1858"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M39.9426 25.1418L44.1873 20.8971C49.6536 15.4308 58.5162 15.4308 63.9825 20.8971C69.4488 26.3634 69.4488 35.226 63.9825 40.6923L61.787 42.8878C61.7751 42.9 61.7632 42.9122 61.7511 42.9243L42.3811 62.2942C41.0314 63.644 38.843 63.644 37.4933 62.2942C36.1435 60.9445 36.1435 58.7561 37.4933 57.4063L46.673 48.2266"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M63.0986 21.781C58.1204 16.8028 50.0493 16.8028 45.0711 21.781L41.7103 25.1418L46.8696 30.3012C48.7075 32.1391 48.7075 35.1189 46.8696 36.9568C46.1517 37.6748 45.2595 38.1122 44.3292 38.2693C44.0688 38.3133 43.8053 38.3353 43.5418 38.3353C42.3373 38.3353 41.1327 37.8759 40.2137 36.9569L35.5911 32.3343C35.4292 32.1724 35.2118 32.1 35.0002 32.117C34.8291 32.1309 34.6617 32.2033 34.5308 32.3343L23.3323 43.5327C22.6105 44.3986 22.6564 45.6896 23.4695 46.5027C24.3311 47.3643 25.728 47.3643 26.5896 46.5027L35.7694 37.323C36.2575 36.8348 37.049 36.8348 37.5371 37.323L37.6187 37.4045C37.8531 37.6389 37.9848 37.9569 37.9848 38.2884C37.9848 38.6199 37.8531 38.9379 37.6187 39.1723L28.4389 48.352C27.5773 49.2136 27.5773 50.6106 28.4389 51.4722C29.3005 52.3338 30.6974 52.3338 31.559 51.4722L40.7388 42.2924C40.9732 42.058 41.2911 41.9263 41.6227 41.9263C41.9542 41.9263 42.2721 42.058 42.5065 42.2924L42.5877 42.3736C42.8222 42.608 42.9539 42.926 42.9539 43.2575C42.9539 43.589 42.8222 43.9069 42.5877 44.1414L33.408 53.3211C32.5464 54.1827 32.5464 55.5796 33.408 56.4412C34.2696 57.3028 35.6665 57.3028 36.5281 56.4412L45.7079 47.2615C46.196 46.7733 46.9875 46.7733 47.4756 47.2615L47.5568 47.3427C47.7912 47.5771 47.9229 47.895 47.923 48.2266C47.923 48.5581 47.7913 48.876 47.5568 49.1104L38.3771 58.2902C37.5155 59.1518 37.5155 60.5487 38.3771 61.4103C39.2387 62.2719 40.6356 62.2719 41.4972 61.4103L60.8671 42.0404L60.8847 42.0226L60.89 42.0172L60.903 42.0039L63.0986 39.8084C68.0767 34.8303 68.0767 26.7591 63.0986 21.781Z"
            fill="currentColor"
          />
          <path
            d="M45.1015 35.1891C44.7171 35.5736 44.226 35.7865 43.7234 35.8278C43.0999 35.879 42.4588 35.6661 41.9818 35.1891L37.3592 30.5665C36.6589 29.8662 35.7184 29.5523 34.8029 29.6248C34.059 29.6837 33.3316 29.9976 32.7627 30.5665L20.6783 42.6509C20.3854 42.9438 19.9106 42.9438 19.6177 42.6509L16.7833 39.8165C11.804 34.8372 11.804 26.7641 16.7833 21.7848C21.7627 16.8054 29.8358 16.8054 34.8151 21.7848L36.8381 23.8077C36.8469 23.8165 36.8558 23.8252 36.8649 23.8338C36.8813 23.8492 36.8976 23.865 36.9137 23.8811L45.1015 32.069C45.9631 32.9306 45.9631 34.3275 45.1015 35.1891Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M63.9824 20.8966C58.5161 15.4303 49.6535 15.4303 44.1872 20.8966L41.9555 23.1284L39.9424 25.1415L45.9857 31.1849C47.3355 32.5346 47.3355 34.723 45.9857 36.0727C44.636 37.4225 42.4476 37.4225 41.0979 36.0727L36.4753 31.4502C35.6943 30.6691 34.4279 30.6691 33.6469 31.4502L22.5923 42.5048L22.4111 42.6859C21.2386 44.0438 21.2967 46.0973 22.5856 47.3862C23.9353 48.7359 26.1237 48.7359 27.4734 47.3862L36.6125 38.2471C36.635 38.2246 36.6715 38.2246 36.694 38.2471C36.7165 38.2697 36.7165 38.3062 36.694 38.3287L27.555 47.4677C26.2052 48.8175 26.2052 51.0058 27.555 52.3556C28.9047 53.7053 31.0931 53.7053 32.4429 52.3556L41.5821 43.2164C41.6045 43.194 41.6408 43.194 41.6633 43.2164C41.6857 43.2388 41.6857 43.2752 41.6633 43.2976L32.5241 52.4368C31.1743 53.7865 31.1743 55.9749 32.5241 57.3247C33.8738 58.6744 36.0622 58.6744 37.4119 57.3247L46.5511 48.1855C46.5736 48.163 46.6099 48.163 46.6323 48.1855C46.6548 48.2079 46.6548 48.2443 46.6323 48.2667L37.4931 57.4059C36.1434 58.7556 36.1434 60.944 37.4931 62.2937C38.8429 63.6435 41.0313 63.6435 42.381 62.2937L61.7509 42.9238C61.763 42.9117 61.775 42.8996 61.7869 42.8873L63.9824 40.6918C69.4487 35.2255 69.4487 26.3629 63.9824 20.8966Z"
            fill="#EB5757"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M15.8993 40.7005C10.4318 35.2331 10.4318 26.3685 15.8993 20.901C21.3668 15.4335 30.2313 15.4335 35.6988 20.901L37.5034 22.7056L37.7217 22.9239C37.7472 22.9479 37.7724 22.9724 37.7974 22.9974L45.9853 31.1852C47.335 32.535 47.335 34.7234 45.9853 36.0731C44.6355 37.4229 42.4471 37.4229 41.0974 36.0731L36.4748 31.4505C35.6938 30.6695 34.4274 30.6695 33.6464 31.4505L22.5918 42.5052L21.562 43.5349C20.781 44.3159 19.5147 44.3159 18.7336 43.5349L17.7039 42.5052L15.8993 40.7005Z"
            fill="#F2C94C"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M63.9829 20.8966C58.5166 15.4303 49.654 15.4303 44.1877 20.8966L39.9429 25.1415L45.9862 31.1849C47.336 32.5346 47.336 34.723 45.9862 36.0727C44.6365 37.4225 42.4481 37.4225 41.0984 36.0727L36.4758 31.4502C35.6947 30.6691 34.4284 30.6691 33.6474 31.4502L22.5928 42.5048L22.4116 42.6859C21.239 44.0438 21.2972 46.0973 22.586 47.3862C23.9358 48.7359 26.1242 48.7359 27.4739 47.3862L36.6129 38.2471C36.6355 38.2246 36.672 38.2246 36.6945 38.2471C36.717 38.2697 36.717 38.3062 36.6945 38.3287L27.5555 47.4677C26.2057 48.8175 26.2057 51.0058 27.5555 52.3556C28.9052 53.7053 31.0936 53.7053 32.4434 52.3556L41.5825 43.2164C41.605 43.194 41.6413 43.194 41.6638 43.2164C41.6862 43.2388 41.6862 43.2752 41.6638 43.2976L32.5246 52.4368C31.1748 53.7865 31.1748 55.9749 32.5246 57.3247C33.8743 58.6744 36.0627 58.6744 37.4124 57.3247L46.5516 48.1855C46.5741 48.163 46.6104 48.163 46.6328 48.1855C46.6553 48.2079 46.6553 48.2443 46.6328 48.2667L37.4936 57.4059C36.1439 58.7556 36.1439 60.944 37.4936 62.2937C38.8434 63.6435 41.0318 63.6435 42.3815 62.2937L61.7514 42.9238C61.7635 42.9117 61.7755 42.8996 61.7874 42.8873L63.9829 40.6918C69.4492 35.2255 69.4492 26.3629 63.9829 20.8966Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M15.8999 40.7002C10.4324 35.2327 10.4324 26.3682 15.8999 20.9007C21.3674 15.4332 30.232 15.4332 35.6995 20.9007L37.7224 22.9236C37.7479 22.9476 37.7731 22.9721 37.798 22.997L45.9862 31.1849C47.336 32.5346 47.336 34.723 45.9862 36.0727C44.6365 37.4225 42.4481 37.4225 41.0984 36.0727L36.4758 31.4502C35.6947 30.6691 34.4284 30.6691 33.6474 31.4502L22.5928 42.5048L21.5627 43.5345C20.7816 44.3156 19.5153 44.3156 18.7343 43.5345L15.8999 40.7002Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M45.9862 31.1849L39.9429 25.1415L44.1877 20.8966C49.654 15.4303 58.5166 15.4303 63.9829 20.8966C69.4492 26.3629 69.4492 35.2255 63.9829 40.6918L61.7874 42.8873C61.7755 42.8996 61.7635 42.9117 61.7514 42.9238L42.3815 62.2937C41.0318 63.6435 38.8434 63.6435 37.4936 62.2937C36.1439 60.944 36.1439 58.7556 37.4936 57.4059L46.6328 48.2667C46.6553 48.2443 46.6553 48.2079 46.6328 48.1855C46.6104 48.163 46.5741 48.163 46.5516 48.1855L37.4124 57.3247C36.0627 58.6744 33.8743 58.6744 32.5246 57.3247C31.1748 55.9749 31.1748 53.7865 32.5246 52.4368L41.6638 43.2976C41.6862 43.2752 41.6862 43.2388 41.6638 43.2164C41.6413 43.194 41.605 43.194 41.5825 43.2164L32.4434 52.3556C31.0936 53.7053 28.9052 53.7053 27.5555 52.3556C26.2057 51.0058 26.2057 48.8175 27.5555 47.4677L36.6945 38.3287C36.717 38.3062 36.717 38.2697 36.6945 38.2471C36.672 38.2246 36.6355 38.2246 36.6129 38.2471L27.4739 47.3862C26.1242 48.7359 23.9358 48.7359 22.586 47.3862C21.2972 46.0973 21.239 44.0438 22.4116 42.6859L22.5928 42.5048M45.9862 31.1849C47.336 32.5346 47.336 34.723 45.9862 36.0727C44.6365 37.4225 42.4481 37.4225 41.0984 36.0727L36.4758 31.4502C35.6947 30.6691 34.4284 30.6691 33.6474 31.4502L22.5928 42.5048M45.9862 31.1849L37.798 22.997C37.7731 22.9721 37.7479 22.9476 37.7224 22.9236L35.6995 20.9007C30.232 15.4332 21.3674 15.4332 15.8999 20.9007C10.4324 26.3682 10.4324 35.2327 15.8999 40.7002L18.7343 43.5345C19.5153 44.3156 20.7816 44.3156 21.5627 43.5345L22.5928 42.5048"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M39.9428 22.3136L42.7735 19.4829C49.0209 13.2355 59.1498 13.2355 65.3971 19.4829C71.6445 25.7302 71.6445 35.8592 65.3971 42.1065L63.2104 44.2933L63.2087 44.295C63.2017 44.3021 63.1946 44.3093 63.1876 44.3165C63.1803 44.3238 63.173 44.3312 63.1657 44.3385L43.7958 63.7084C41.665 65.8392 38.2103 65.8392 36.0795 63.7084C35.133 62.762 34.6069 61.5543 34.5013 60.3175C33.2645 60.2118 32.0568 59.6858 31.1104 58.7393C30.1639 57.7929 29.6379 56.5852 29.5322 55.3484C28.2954 55.2428 27.0877 54.7167 26.1413 53.7703C25.1948 52.8237 24.6687 51.616 24.5631 50.379C23.3262 50.2734 22.1184 49.7474 21.1719 48.8008C20.4012 48.0301 19.9093 47.0865 19.6961 46.095C18.828 45.9968 17.9858 45.6148 17.3201 44.949L14.4857 42.1146C8.23718 35.8661 8.23718 25.7352 14.4857 19.4867C20.7343 13.2381 30.8651 13.2381 37.1137 19.4867L39.1178 21.4908C39.1496 21.5211 39.1811 21.5518 39.2123 21.583L39.9428 22.3136ZM45.6019 22.3113C50.2872 17.626 57.8835 17.6261 62.5687 22.3113C67.254 26.9965 67.254 34.5928 62.5687 39.2781L60.3732 41.4736L60.3523 41.4948L60.349 41.4982L60.3372 41.5101L40.9673 60.88C40.3986 61.4487 39.4766 61.4487 38.9079 60.88C38.3392 60.3113 38.3392 59.3892 38.9079 58.8205L48.0877 49.6408C48.4627 49.2657 48.6734 48.757 48.6734 48.2265C48.6734 47.6961 48.4627 47.1874 48.0876 46.8123L48.0064 46.7311C47.2254 45.9501 45.9591 45.9501 45.178 46.7311L35.9982 55.9109C35.4295 56.4796 34.5075 56.4796 33.9388 55.9109C33.3701 55.3422 33.3701 54.4202 33.9388 53.8515L43.1186 44.6717C43.4936 44.2966 43.7044 43.7879 43.7044 43.2575C43.7044 42.727 43.4936 42.2183 43.1186 41.8433L43.0374 41.7621C42.6623 41.387 42.1536 41.1763 41.6231 41.1763C41.0927 41.1763 40.584 41.387 40.2089 41.7621L31.0292 50.9418C30.4605 51.5105 29.5384 51.5105 28.9697 50.9418C28.401 50.3731 28.401 49.4511 28.9697 48.8824L38.1495 39.7026C38.5246 39.3275 38.7353 38.8188 38.7353 38.2884C38.7353 37.758 38.5246 37.2492 38.1495 36.8742L38.0679 36.7926C37.2869 36.0116 36.0206 36.0116 35.2395 36.7926L26.0597 45.9724C25.491 46.5411 24.569 46.5411 24.0003 45.9724C23.4713 45.4434 23.4342 44.6068 23.8897 44.0365L35.0614 32.8648L39.6838 37.4872C40.8159 38.6193 42.3217 39.1499 43.804 39.079C43.8912 39.0749 43.9783 39.0686 44.0653 39.0603C45.2826 38.9438 46.4682 38.4194 47.4005 37.4872C49.5313 35.3564 49.5313 31.9017 47.4005 29.7709L42.7714 25.1418L45.6019 22.3113ZM43.66 35.0805C43.9924 35.0537 44.3174 34.9131 44.5717 34.6588C45.1404 34.0901 45.1404 33.168 44.5717 32.5993L36.3838 24.4114C36.373 24.4007 36.3621 24.3901 36.3511 24.3797C36.3366 24.366 36.3223 24.3522 36.3082 24.3381L34.2852 22.3151C29.5988 17.6287 22.0006 17.6287 17.3141 22.3151C12.6277 27.0015 12.6277 34.5998 17.3141 39.2862L20.1485 42.1205L32.2328 30.0362C32.93 29.339 33.8205 28.953 34.7318 28.8781C35.8624 28.7852 37.025 29.1712 37.89 30.0362L42.5126 34.6587C42.8269 34.973 43.2491 35.1136 43.66 35.0805Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreHeartHands = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreHeartHands.displayName = 'CoreHeartHands'

export default CoreHeartHands
