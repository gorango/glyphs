
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M40 12L46.9648 23.1854L59.799 20.201L56.8146 33.0352L68 40L56.8146 46.9648L59.799 59.799L46.9648 56.8146L40 68L33.0352 56.8146L20.201 59.799L23.1854 46.9648L12 40L23.1854 33.0352L20.201 20.201L33.0352 23.1854L40 12Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M35.7574 29.7572C38.4739 28.632 41.5261 28.632 44.2426 29.7572C46.9592 30.8825 49.1174 33.0407 50.2426 35.7572C51.3679 38.4738 51.3679 41.526 50.2426 44.2425C49.1174 46.959 46.9592 49.1173 44.2426 50.2425C41.5261 51.3677 38.4739 51.3677 35.7574 50.2425C33.0408 49.1173 30.8826 46.959 29.7574 44.2425C28.6321 41.526 28.6321 38.4738 29.7574 35.7572C30.8826 33.0407 33.0408 30.8825 35.7574 29.7572Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M44.2426 29.7574C41.5261 28.6321 38.4739 28.6321 35.7574 29.7574C33.0408 30.8826 30.8826 33.0408 29.7574 35.7574C28.6321 38.4739 28.6321 41.5261 29.7574 44.2426C30.8826 46.9592 33.0408 49.1174 35.7574 50.2426C38.4739 51.3679 41.5261 51.3679 44.2426 50.2426C46.9592 49.1174 49.1174 46.9592 50.2426 44.2426C51.3679 41.5261 51.3679 38.4739 50.2426 35.7574C49.1174 33.0408 46.9592 30.8826 44.2426 29.7574Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M40 12L46.9648 23.1854L59.799 20.201L56.8146 33.0352L68 40L56.8146 46.9648L59.799 59.799L46.9648 56.8146L40 68L33.0352 56.8146L20.201 59.799L23.1854 46.9648L12 40L23.1854 33.0352L20.201 20.201L33.0352 23.1854L40 12ZM45.3907 26.9857C48.8423 28.4154 51.5846 31.1577 53.0143 34.6093C54.444 38.0609 54.444 41.9391 53.0143 45.3907C51.5846 48.8423 48.8423 51.5846 45.3907 53.0143C41.9391 54.444 38.0609 54.444 34.6093 53.0143C31.1577 51.5846 28.4154 48.8423 26.9857 45.3907C25.556 41.9391 25.556 38.0609 26.9857 34.6093C28.4154 31.1577 31.1577 28.4154 34.6093 26.9857C38.0609 25.556 41.9391 25.556 45.3907 26.9857Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M40 12L46.9648 23.1854L59.799 20.201L56.8146 33.0352L68 40L56.8146 46.9648L59.799 59.799L46.9648 56.8146L40 68L33.0352 56.8146L20.201 59.799L23.1854 46.9648L12 40L23.1854 33.0352L20.201 20.201L33.0352 23.1854L40 12Z"
            fill="#F2C94C"
          />
          <path
            d="M35.7574 29.7574C38.4739 28.6321 41.5261 28.6321 44.2426 29.7574C46.9592 30.8826 49.1174 33.0408 50.2426 35.7574C51.3679 38.4739 51.3679 41.5261 50.2426 44.2426C49.1174 46.9592 46.9592 49.1174 44.2426 50.2426C41.5261 51.3679 38.4739 51.3679 35.7574 50.2426C33.0408 49.1174 30.8826 46.9592 29.7574 44.2426C28.6321 41.5261 28.6321 38.4739 29.7574 35.7574C30.8826 33.0408 33.0408 30.8826 35.7574 29.7574Z"
            fill="#EB5757"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M40 12L46.9648 23.1854L59.799 20.201L56.8146 33.0352L68 40L56.8146 46.9648L59.799 59.799L46.9648 56.8146L40 68L33.0352 56.8146L20.201 59.799L23.1854 46.9648L12 40L23.1854 33.0352L20.201 20.201L33.0352 23.1854L40 12Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M35.7574 29.7574C38.4739 28.6321 41.5261 28.6321 44.2426 29.7574C46.9592 30.8826 49.1174 33.0408 50.2426 35.7574C51.3679 38.4739 51.3679 41.5261 50.2426 44.2426C49.1174 46.9592 46.9592 49.1174 44.2426 50.2426C41.5261 51.3679 38.4739 51.3679 35.7574 50.2426C33.0408 49.1174 30.8826 46.9592 29.7574 44.2426C28.6321 41.5261 28.6321 38.4739 29.7574 35.7574C30.8826 33.0408 33.0408 30.8826 35.7574 29.7574Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M40 12L46.9648 23.1854L59.799 20.201L56.8146 33.0352L68 40L56.8146 46.9648L59.799 59.799L46.9648 56.8146L40 68L33.0352 56.8146L20.201 59.799L23.1854 46.9648L12 40L23.1854 33.0352L20.201 20.201L33.0352 23.1854L40 12Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M35.7574 29.7574C38.4739 28.6321 41.5261 28.6321 44.2426 29.7574C46.9592 30.8826 49.1174 33.0408 50.2426 35.7574C51.3679 38.4739 51.3679 41.5261 50.2426 44.2426C49.1174 46.9592 46.9592 49.1174 44.2426 50.2426C41.5261 51.3679 38.4739 51.3679 35.7574 50.2426C33.0408 49.1174 30.8826 46.9592 29.7574 44.2426C28.6321 41.5261 28.6321 38.4739 29.7574 35.7574C30.8826 33.0408 33.0408 30.8826 35.7574 29.7574Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M52.0904 34.992C50.7622 31.7854 48.2146 29.2378 45.008 27.9096C41.8014 26.5814 38.1986 26.5814 34.992 27.9096C31.7854 29.2378 29.2378 31.7854 27.9096 34.992C26.5814 38.1986 26.5814 41.8014 27.9096 45.008C29.2378 48.2146 31.7854 50.7622 34.992 52.0904C38.1986 53.4186 41.8014 53.4186 45.008 52.0904C48.2146 50.7622 50.7622 48.2146 52.0904 45.008C53.4186 41.8014 53.4186 38.1986 52.0904 34.992ZM31.6051 36.5227C32.5273 34.2963 34.2963 32.5273 36.5227 31.6051C38.7492 30.6829 41.2508 30.6829 43.4773 31.6051C45.7037 32.5273 47.4726 34.2963 48.3949 36.5227C49.3171 38.7492 49.3171 41.2508 48.3949 43.4773C47.4726 45.7037 45.7037 47.4726 43.4773 48.3949C41.2508 49.3171 38.7492 49.3171 36.5227 48.3949C34.2963 47.4726 32.5273 45.7037 31.6051 43.4773C30.6829 41.2508 30.6829 38.7492 31.6051 36.5227Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M41.6978 10.9428C41.3326 10.3565 40.6908 10 40 10C39.3092 10 38.6674 10.3565 38.3022 10.9428L32.094 20.9132L20.654 18.253C19.9812 18.0965 19.2752 18.2983 18.7868 18.7868C18.2983 19.2752 18.0965 19.9812 18.253 20.654L20.9132 32.094L10.9428 38.3022C10.3565 38.6674 10 39.3092 10 40C10 40.6908 10.3565 41.3326 10.9428 41.6978L20.9132 47.906L18.253 59.346C18.0965 60.0188 18.2983 60.7248 18.7868 61.2132C19.2752 61.7017 19.9812 61.9035 20.654 61.747L32.094 59.0868L38.3022 69.0572C38.6674 69.6435 39.3092 70 40 70C40.6908 70 41.3326 69.6435 41.6978 69.0572L47.906 59.0868L59.346 61.747C60.0188 61.9035 60.7248 61.7017 61.2132 61.2132C61.7017 60.7248 61.9035 60.0188 61.747 59.346L59.0868 47.906L69.0572 41.6978C69.6435 41.3326 70 40.6908 70 40C70 39.3092 69.6435 38.6674 69.0572 38.3022L59.0868 32.094L61.747 20.654C61.9035 19.9812 61.7017 19.2752 61.2132 18.7868C60.7248 18.2983 60.0188 18.0965 59.346 18.253L47.906 20.9132L41.6978 10.9428ZM34.7329 24.2425L40 15.7837L45.2671 24.2425C45.7195 24.9691 46.5841 25.3273 47.4178 25.1334L57.1235 22.8765L54.8666 32.5822C54.6727 33.4159 55.0309 34.2805 55.7575 34.7329L64.2163 40L55.7575 45.2671C55.0309 45.7195 54.6727 46.5841 54.8666 47.4178L57.1235 57.1235L47.4178 54.8666C46.5841 54.6727 45.7195 55.0309 45.2671 55.7575L40 64.2163L34.7329 55.7575C34.2805 55.0309 33.4159 54.6727 32.5822 54.8666L22.8765 57.1235L25.1334 47.4178C25.3273 46.5841 24.9691 45.7195 24.2425 45.2671L15.7837 40L24.2425 34.7329C24.9691 34.2805 25.3273 33.4159 25.1334 32.5822L22.8765 22.8765L32.5822 25.1334C33.4159 25.3273 34.2805 24.9691 34.7329 24.2425Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreSun = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreSun.displayName = 'CoreSun'

export default CoreSun
