
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M60 33.625V61.625H42.7416C42.7415 61.5424 42.7309 61.458 42.7089 61.3734L40.7041 53.6612C40.6616 53.4976 40.7851 53.3379 40.9542 53.3379H46.6897C47.4376 53.3379 47.9208 52.547 47.5795 51.8815L38.8119 34.786C38.646 34.4627 38.1551 34.6375 38.2308 34.9929L40.6746 46.4538C40.8073 47.0761 40.3328 47.6624 39.6966 47.6624H33.0749C32.4659 47.6624 31.9983 48.2022 32.0851 48.805L33.9319 61.625H20V33.625"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M67.5 39.625L40 17.625L12.5 39.625"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M55 29.625V19.625C55 19.0727 54.5523 18.625 54 18.625H50C49.4477 18.625 49 19.0727 49 19.625V24.825"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M38.7506 18.6243C39.481 18.0399 40.5189 18.0399 41.2494 18.6243L59.2494 33.0243C59.7238 33.4038 60 33.9785 60 34.586V59.6248C60 60.7294 59.1046 61.6248 58 61.6248H42.996C42.8554 61.6248 42.7443 61.5092 42.709 61.3732L40.7041 53.661C40.6616 53.4974 40.7851 53.3376 40.9542 53.3376H46.6897C47.4375 53.3376 47.9208 52.5467 47.5795 51.8813L38.8119 34.7858C38.646 34.4625 38.1551 34.6373 38.2308 34.9927L40.6746 46.4536C40.8073 47.0759 40.3328 47.6622 39.6966 47.6622H33.0749C32.4659 47.6622 31.9983 48.2019 32.0852 48.8047L33.6027 59.3396C33.7764 60.5452 32.8412 61.6248 31.6232 61.6248H22C20.8954 61.6248 20 60.7294 20 59.6248V34.586C20 33.9785 20.2762 33.4038 20.7506 33.0243L38.7506 18.6243Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M38.1259 15.6574C39.2216 14.7809 40.7784 14.7809 41.8741 15.6574L69.3741 37.6574C70.6679 38.6924 70.8776 40.5803 69.8426 41.8741C68.8076 43.1679 66.9197 43.3776 65.6259 42.3426L40 21.8419L14.3741 42.3426C13.0803 43.3776 11.1924 43.1679 10.1574 41.8741C9.12235 40.5803 9.33212 38.6924 10.6259 37.6574L38.1259 15.6574Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M55 30V19H49V25.2L55 30Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M47.5 19C47.5 18.1716 48.1716 17.5 49 17.5H55C55.8284 17.5 56.5 18.1716 56.5 19V30C56.5 30.5766 56.1695 31.1022 55.6498 31.352C55.1301 31.6017 54.5132 31.5315 54.0629 31.1713L48.0629 26.3713C47.7071 26.0866 47.5 25.6557 47.5 25.2V19ZM50.5 20.5V24.4791L53.5 26.8791V20.5H50.5Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M60 33.625L40 17.625L20 33.625L20 61.625L60 61.625L60 33.625Z"
            fill="#F2C94C"
          />
          <path
            d="M60 33.625H62C62 33.0174 61.7238 32.4428 61.2494 32.0633L60 33.625ZM40 17.625L41.2494 16.0633C40.519 15.4789 39.481 15.4789 38.7506 16.0633L40 17.625ZM20 33.625L18.7506 32.0633C18.2762 32.4428 18 33.0174 18 33.625H20ZM20 61.625H18C18 62.7296 18.8954 63.625 20 63.625V61.625ZM60 61.625V63.625C60.5304 63.625 61.0391 63.4143 61.4142 63.0392C61.7893 62.6641 62 62.1554 62 61.625H60ZM61.2494 32.0633L41.2494 16.0633L38.7506 19.1867L58.7506 35.1867L61.2494 32.0633ZM38.7506 16.0633L18.7506 32.0633L21.2494 35.1867L41.2494 19.1867L38.7506 16.0633ZM18 33.625L18 61.625H22L22 33.625H18ZM20 63.625L60 63.625V59.625L20 59.625V63.625ZM62 61.625L62 33.625H58L58 61.625H62Z"
            fill="#F2C94C"
          />
          <path
            d="M67.5 39.625L64.5 37.225L40 17.625L15.5 37.225L12.5 39.625"
            stroke="#EB5757"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M55 29.625V18.625H49V24.825L55 29.625Z"
            fill="#EB5757"
          />
          <path
            d="M55 18.625H57C57 17.5204 56.1046 16.625 55 16.625V18.625ZM55 29.625L53.7506 31.1867C54.3509 31.667 55.1734 31.7606 55.8664 31.4276C56.5593 31.0946 57 30.3938 57 29.625H55ZM49 18.625V16.625C47.8954 16.625 47 17.5204 47 18.625H49ZM49 24.825H47C47 25.4326 47.2762 26.0072 47.7506 26.3867L49 24.825ZM53 18.625V29.625H57V18.625H53ZM49 20.625H55V16.625H49V20.625ZM51 24.825V18.625H47V24.825H51ZM47.7506 26.3867L53.7506 31.1867L56.2494 28.0633L50.2494 23.2633L47.7506 26.3867Z"
            fill="#EB5757"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M34.076 61.625H43.0343L40.6201 52.3379H40.9542H42.1425H43.6003H48.3264L37.7419 31.6998L38.2308 33.9929L40.9323 46.6624L39.1447 46.6624L37.7788 46.6624L31.9206 46.6624L34.076 61.625Z"
            fill="#F2F2F2"
          />
          <path
            d="M43.0343 61.625L44.97 61.1218C45.1258 61.7211 44.9952 62.3586 44.6165 62.8484C44.2377 63.3382 43.6535 63.625 43.0343 63.625V61.625ZM34.076 61.625V63.625C33.0816 63.625 32.2382 62.8944 32.0964 61.9102L34.076 61.625ZM40.6201 52.3379L38.6844 52.841C38.5286 52.2418 38.6592 51.6042 39.0379 51.1144C39.4167 50.6246 40.0009 50.3379 40.6201 50.3379V52.3379ZM48.3264 52.3379L50.106 51.4252C50.424 52.0452 50.3964 52.786 50.0331 53.3806C49.6698 53.9752 49.0232 54.3379 48.3264 54.3379V52.3379ZM37.7419 31.6998L35.7859 32.1168C35.5767 31.136 36.1264 30.1519 37.0712 29.8156C38.016 29.4792 39.0638 29.8947 39.5215 30.7871L37.7419 31.6998ZM38.2308 33.9929L40.1869 33.5758L38.2308 33.9929ZM40.9323 46.6624L42.8883 46.2453C43.0142 46.8357 42.8667 47.4513 42.487 47.9205C42.1073 48.3898 41.5359 48.6624 40.9323 48.6624L40.9323 46.6624ZM39.1447 46.6624L39.1447 44.6624H39.1447L39.1447 46.6624ZM37.7788 46.6624L37.7788 48.6624H37.7788L37.7788 46.6624ZM31.9206 46.6624L29.941 46.9475C29.8583 46.3733 30.029 45.7914 30.4089 45.3529C30.7888 44.9143 31.3404 44.6624 31.9206 44.6624L31.9206 46.6624ZM43.0343 63.625H34.076V59.625H43.0343V63.625ZM42.5557 51.8347L44.97 61.1218L41.0987 62.1282L38.6844 52.841L42.5557 51.8347ZM40.6201 50.3379H40.9542V54.3379H40.6201V50.3379ZM40.9542 50.3379H42.1425V54.3379H40.9542V50.3379ZM42.1425 50.3379H43.6003V54.3379H42.1425V50.3379ZM48.3264 54.3379H43.6003V50.3379H48.3264V54.3379ZM39.5215 30.7871L50.106 51.4252L46.5468 53.2505L35.9623 32.6124L39.5215 30.7871ZM36.2748 34.41L35.7859 32.1168L39.6979 31.2827L40.1869 33.5758L36.2748 34.41ZM38.9763 47.0795L36.2748 34.41L40.1869 33.5758L42.8883 46.2453L38.9763 47.0795ZM40.9323 48.6624L39.1447 48.6624L39.1447 44.6624L40.9323 44.6624L40.9323 48.6624ZM39.1447 48.6624L37.7788 48.6624L37.7788 44.6624L39.1447 44.6624L39.1447 48.6624ZM31.9206 44.6624L37.7788 44.6624L37.7788 48.6624L31.9206 48.6624L31.9206 44.6624ZM32.0964 61.9102L29.941 46.9475L33.9002 46.3772L36.0556 61.3398L32.0964 61.9102Z"
            fill="#F2F2F2"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M60 33.625L40 17.625L20 33.625V61.625H60V33.625Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M55 29.625V18.625H49V24.825L55 29.625Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M34.076 61.625H43.0343L40.6201 52.3379H48.3264L37.7419 31.6998L40.9323 46.6624H31.9206L34.076 61.625Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M40 17.625L60 33.625V61.625H20V33.625L40 17.625ZM40 17.625L12.5 39.625M40 17.625L67.5 39.625M55 18.625V29.625L49 24.825V18.625H55ZM43.0343 61.625H34.076L31.9206 46.6624H40.9323L37.7419 31.6998L48.3264 52.3379H40.6201L43.0343 61.625Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            d="M47.7506 26.3867L53.7506 31.1867C53.7511 31.1871 53.7515 31.1874 53.7519 31.1878L58 34.5862V59.625H44.5809L43.2064 54.3379H48.3264C49.0232 54.3379 49.6698 53.9752 50.0331 53.3806C50.3964 52.786 50.424 52.0452 50.106 51.4252L39.5215 30.7871C39.0638 29.8947 38.016 29.4792 37.0712 29.8156C36.1264 30.1519 35.5767 31.136 35.7859 32.1168L38.4609 44.6624H31.9206C31.3404 44.6624 30.7888 44.9143 30.4089 45.3529C30.029 45.7914 29.8583 46.3733 29.941 46.9475L31.7672 59.625H22V34.5862L40 20.1863L47.7506 26.3867ZM47.7506 26.3867C47.7505 26.3866 47.7508 26.3869 47.7506 26.3867ZM40.9623 15.8715C40.2643 15.488 39.3898 15.552 38.7506 16.0633L11.2506 38.0633C10.3881 38.7533 10.2483 40.0119 10.9383 40.8744C11.6283 41.7369 12.8869 41.8768 13.7494 41.1867L18 37.7863V61.625C18 62.7296 18.8954 63.625 20 63.625H34.076C34.6562 63.625 35.2078 63.3731 35.5876 62.9345C35.9675 62.496 36.1383 61.9141 36.0555 61.3398L34.2293 48.6624H40.9323C41.5359 48.6624 42.1073 48.3897 42.487 47.9205C42.8667 47.4513 43.0142 46.8357 42.8883 46.2453L42.8416 46.0259L45.053 50.3379H40.6201C40.0009 50.3379 39.4167 50.6246 39.0379 51.1144C38.6592 51.6042 38.5286 52.2418 38.6844 52.841L41.0986 62.1282C41.3278 63.0097 42.1235 63.625 43.0343 63.625H60C61.1046 63.625 62 62.7296 62 61.625V37.7863L66.2506 41.1867C67.1131 41.8768 68.3717 41.7369 69.0618 40.8744C69.7518 40.0119 69.6119 38.7533 68.7494 38.0633L57 28.6637V19.625C57 17.9681 55.6569 16.625 54 16.625H50C48.3432 16.625 47 17.9681 47 19.625V20.6637L41.2494 16.0633C41.1581 15.9902 41.062 15.9263 40.9623 15.8715ZM53 25.4637V20.625H51V23.8638L53 25.4637Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreHouseDamage = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreHouseDamage.displayName = 'CoreHouseDamage'

export default CoreHouseDamage
