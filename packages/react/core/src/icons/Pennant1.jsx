
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M13 18.8845C13 18.2065 13.6605 17.725 14.306 17.9325L35.306 24.6825C35.7196 24.8154 36 25.2001 36 25.6345V27.1773C36 27.6117 36.2804 27.9964 36.694 28.1293L66.0381 37.5614C66.9635 37.8588 66.9635 39.168 66.0381 39.4654L37.306 48.7008C36.6605 48.9082 36 48.4268 36 47.7487V47.4917C36 46.8136 35.3395 46.3321 34.694 46.5396L14.306 53.0929C13.6605 53.3004 13 52.8189 13 52.1409"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M13 16V64"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M36 27.5127V35.5127"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M35.306 24.6825C35.7196 24.8154 36 25.2001 36 25.6345V27.1773C36 27.6117 36.2804 27.9964 36.694 28.1293L66.0381 37.5614C66.9635 37.8588 66.9635 39.168 66.0381 39.4654L37.306 48.7008C36.6605 48.9082 36 48.4268 36 47.7487V47.4917C36 46.8136 35.3395 46.3321 34.694 46.5396L14.306 53.0929C13.6605 53.3004 13 52.8189 13 52.1409V18.8845C13 18.2065 13.6605 17.725 14.306 17.9325L35.306 24.6825Z"
            fill="currentColor"
          />
          <path
            d="M14.306 53.0929L13.694 51.1889L14.306 53.0929ZM34.694 46.5396L35.306 48.4437L34.694 46.5396ZM37.306 48.7008L36.694 46.7967L37.306 48.7008ZM66.0381 37.5614L65.4261 39.4654L66.0381 37.5614ZM66.0381 39.4654L66.6502 41.3695L66.0381 39.4654ZM35.306 24.6825L34.694 26.5865L35.306 24.6825ZM36.694 28.1293L36.082 30.0334L36.694 28.1293ZM38 27.1773V25.6345H34V27.1773H38ZM66.6502 35.6573L37.306 26.2253L36.082 30.0334L65.4261 39.4654L66.6502 35.6573ZM37.918 50.6048L66.6502 41.3695L65.4261 37.5614L36.694 46.7967L37.918 50.6048ZM34 47.4917V47.7487H38V47.4917H34ZM14.918 54.997L35.306 48.4437L34.082 44.6356L13.694 51.1889L14.918 54.997ZM11 18.8845V52.1409H15V18.8845H11ZM35.918 22.7784L14.918 16.0284L13.694 19.8365L34.694 26.5865L35.918 22.7784ZM15 18.8845C15 19.5626 14.3395 20.044 13.694 19.8365L14.918 16.0284C12.9815 15.406 11 16.8504 11 18.8845H15ZM13.694 51.1889C14.3395 50.9814 15 51.4628 15 52.1409H11C11 54.175 12.9815 55.6194 14.918 54.997L13.694 51.1889ZM38 47.4917C38 45.4575 36.0185 44.0131 34.082 44.6356L35.306 48.4437C34.6605 48.6512 34 48.1697 34 47.4917H38ZM36.694 46.7967C37.3395 46.5892 38 47.0707 38 47.7487H34C34 49.7828 35.9815 51.2273 37.918 50.6048L36.694 46.7967ZM65.4261 39.4654C64.5008 39.168 64.5008 37.8588 65.4261 37.5614L66.6502 41.3695C69.4261 40.4772 69.4261 36.5496 66.6502 35.6573L65.4261 39.4654ZM38 25.6345C38 24.3313 37.1587 23.1772 35.918 22.7784L34.694 26.5865C34.2804 26.4536 34 26.0689 34 25.6345H38ZM34 27.1773C34 28.4805 34.8413 29.6346 36.082 30.0334L37.306 26.2253C37.7196 26.3582 38 26.7429 38 27.1773H34Z"
            fill="currentColor"
          />
          <path
            d="M13 16V64"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M35.306 24.6825C35.7196 24.8154 36 25.2001 36 25.6345V27.1773C36 27.6117 36.2804 27.9964 36.694 28.1293L66.0381 37.5614C66.9635 37.8588 66.9635 39.168 66.0381 39.4654L37.306 48.7008C36.6605 48.9082 36 48.4268 36 47.7487V47.4917C36 46.8136 35.3395 46.3321 34.694 46.5396L14.306 53.0929C13.6605 53.3004 13 52.8189 13 52.1409V18.8845C13 18.2065 13.6605 17.725 14.306 17.9325L35.306 24.6825Z"
            fill="#EB5757"
          />
          <path
            d="M14.306 53.0929L13.694 51.1889L14.306 53.0929ZM34.694 46.5396L35.306 48.4437L34.694 46.5396ZM37.306 48.7008L36.694 46.7967L37.306 48.7008ZM66.0381 37.5614L65.4261 39.4654L66.0381 37.5614ZM66.0381 39.4654L66.6502 41.3695L66.0381 39.4654ZM35.306 24.6825L34.694 26.5865L35.306 24.6825ZM36.694 28.1293L36.082 30.0334L36.694 28.1293ZM38 27.1773V25.6345H34V27.1773H38ZM66.6502 35.6573L37.306 26.2253L36.082 30.0334L65.4261 39.4654L66.6502 35.6573ZM37.918 50.6048L66.6502 41.3695L65.4261 37.5614L36.694 46.7967L37.918 50.6048ZM34 47.4917V47.7487H38V47.4917H34ZM14.918 54.997L35.306 48.4437L34.082 44.6356L13.694 51.1889L14.918 54.997ZM11 18.8845V52.1409H15V18.8845H11ZM35.918 22.7784L14.918 16.0284L13.694 19.8365L34.694 26.5865L35.918 22.7784ZM15 18.8845C15 19.5626 14.3395 20.044 13.694 19.8365L14.918 16.0284C12.9815 15.406 11 16.8504 11 18.8845H15ZM13.694 51.1889C14.3395 50.9814 15 51.4628 15 52.1409H11C11 54.175 12.9815 55.6194 14.918 54.997L13.694 51.1889ZM38 47.4917C38 45.4575 36.0185 44.0131 34.082 44.6356L35.306 48.4437C34.6605 48.6512 34 48.1697 34 47.4917H38ZM36.694 46.7967C37.3395 46.5892 38 47.0707 38 47.7487H34C34 49.7828 35.9815 51.2273 37.918 50.6048L36.694 46.7967ZM65.4261 39.4654C64.5008 39.168 64.5008 37.8588 65.4261 37.5614L66.6502 41.3695C69.4261 40.4772 69.4261 36.5496 66.6502 35.6573L65.4261 39.4654ZM38 25.6345C38 24.3313 37.1587 23.1772 35.918 22.7784L34.694 26.5865C34.2804 26.4536 34 26.0689 34 25.6345H38ZM34 27.1773C34 28.4805 34.8413 29.6346 36.082 30.0334L37.306 26.2253C37.7196 26.3582 38 26.7429 38 27.1773H34Z"
            fill="#EB5757"
          />
          <path
            d="M13 16V64"
            stroke="#F2C94C"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M35.306 24.6825C35.7196 24.8154 36 25.2001 36 25.6345V27.1773C36 27.6117 36.2804 27.9964 36.694 28.1293L66.0381 37.5614C66.9635 37.8588 66.9635 39.168 66.0381 39.4654L37.306 48.7007C36.6605 48.9082 36 48.4268 36 47.7487V47.4917C36 46.8136 35.3395 46.3321 34.694 46.5396L14.306 53.0929C13.6605 53.3004 13 52.8189 13 52.1409V18.8845C13 18.2065 13.6605 17.725 14.306 17.9325L35.306 24.6825Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M13 16V64M36 27.5127V35.5127M13 18.8845V52.1409C13 52.8189 13.6605 53.3004 14.306 53.0929L34.694 46.5396C35.3395 46.3321 36 46.8136 36 47.4917V47.7487C36 48.4268 36.6605 48.9082 37.306 48.7007L66.0381 39.4654C66.9635 39.168 66.9635 37.8588 66.0381 37.5614L36.694 28.1293C36.2804 27.9964 36 27.6117 36 27.1773V25.6345C36 25.2001 35.7196 24.8154 35.306 24.6825L14.306 17.9325C13.6605 17.725 13 18.2065 13 18.8845Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M13 14C14.1046 14 15 14.8954 15 16V16.0548L35.918 22.7784C37.1587 23.1772 38 24.3313 38 25.6345V26.4483L66.6502 35.6573C69.4261 36.5496 69.4261 40.4772 66.6502 41.3695L37.918 50.6048C36.3379 51.1127 34.7279 50.2446 34.1888 48.8028L15 54.9706V64C15 65.1046 14.1046 66 13 66C11.8954 66 11 65.1046 11 64V16C11 14.8954 11.8954 14 13 14ZM15 50.7691V20.2563L34 26.3635V27.1773C34 27.2391 34.0019 27.3005 34.0056 27.3616C34.0019 27.4114 34 27.4619 34 27.5127V35.5127C34 36.6173 34.8954 37.5127 36 37.5127C37.1046 37.5127 38 36.6173 38 35.5127V30.6499L62.4643 38.5134L37.8112 46.4376C37.2721 44.9958 35.6621 44.1277 34.082 44.6356L15 50.7691Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CorePennant1 = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CorePennant1.displayName = 'CorePennant1'

export default CorePennant1
