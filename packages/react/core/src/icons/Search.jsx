
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M47.4451 47.4983L50.7244 50.7776M50.7249 55.0168L63.4534 67.7487C64.6243 68.9199 66.523 68.9201 67.6941 67.749C68.8649 66.5782 68.865 64.6799 67.6944 63.5089L54.9659 50.777C53.795 49.6058 51.8963 49.6057 50.7252 50.7767C49.5544 51.9476 49.5542 53.8458 50.7249 55.0168Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M15.5967 29.0688C17.3584 22.494 22.494 17.3584 29.0688 15.5967C35.6437 13.8349 42.6591 15.7147 47.4722 20.5278C52.2854 25.341 54.1651 32.3563 52.4034 38.9312C50.6416 45.5061 45.5061 50.6416 38.9312 52.4034C32.3563 54.1651 25.341 52.2854 20.5278 47.4722C15.7147 42.6591 13.8349 35.6437 15.5967 29.0688Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M63.4534 67.7487L50.7249 55.0169C49.5542 53.8459 49.5544 51.9476 50.7252 50.7768C51.8963 49.6057 53.795 49.6058 54.9659 50.7771L67.6944 63.5089C68.865 64.6799 68.8649 66.5782 67.6941 67.749C66.523 68.9201 64.6243 68.92 63.4534 67.7487Z"
            fill="currentColor"
          />
          <path
            d="M50.7249 55.0169L52.1393 53.6028H52.1393L50.7249 55.0169ZM63.4534 67.7487L64.8678 66.3347L63.4534 67.7487ZM54.9659 50.7771L53.5515 52.1911V52.1911L54.9659 50.7771ZM67.6944 63.5089L69.1088 62.0949V62.0949L67.6944 63.5089ZM67.6941 67.749L69.1083 69.1632H69.1083L67.6941 67.749ZM48.8593 46.0841C48.0782 45.3031 46.8119 45.3031 46.0309 46.0841C45.2498 46.8652 45.2498 48.1315 46.0309 48.9125L48.8593 46.0841ZM49.3101 52.1918C50.0912 52.9729 51.3575 52.9729 52.1386 52.1918C52.9196 51.4108 52.9196 50.1445 52.1386 49.3634L49.3101 52.1918ZM49.3104 52.1915C50.0915 52.9726 51.3578 52.9726 52.1389 52.1915C52.9199 51.4105 52.9199 50.1442 52.1389 49.3631L49.3104 52.1915ZM48.8596 46.0838C48.0785 45.3028 46.8122 45.3028 46.0311 46.0838C45.2501 46.8649 45.2501 48.1312 46.0311 48.9123L48.8596 46.0838ZM49.3105 56.4309L62.039 69.1628L64.8678 66.3347L52.1393 53.6028L49.3105 56.4309ZM49.311 49.3626C47.3592 51.3144 47.359 54.4788 49.3105 56.4309L52.1393 53.6028C51.7495 53.2129 51.7496 52.5808 52.1394 52.191L49.311 49.3626ZM56.3803 49.363C54.4283 47.4106 51.2632 47.4104 49.311 49.3626L52.1394 52.191C52.5294 51.801 53.1616 51.8011 53.5515 52.1911L56.3803 49.363ZM69.1088 62.0949L56.3803 49.363L53.5515 52.1911L66.28 64.923L69.1088 62.0949ZM69.1083 69.1632C71.0601 67.2114 71.0603 64.047 69.1088 62.0949L66.28 64.923C66.6698 65.3129 66.6697 65.945 66.2799 66.3348L69.1083 69.1632ZM62.039 69.1628C63.9909 71.1152 67.1561 71.1154 69.1083 69.1632L66.2799 66.3348C65.8899 66.7248 65.2577 66.7247 64.8678 66.3347L62.039 69.1628ZM46.0309 48.9125L49.3101 52.1918L52.1386 49.3634L48.8593 46.0841L46.0309 48.9125ZM52.1389 49.3631L48.8596 46.0838L46.0311 48.9123L49.3104 52.1915L52.1389 49.3631Z"
            fill="currentColor"
          />
          <path
            d="M15.5965 29.0688C17.3583 22.4939 22.4939 17.3584 29.0687 15.5966C35.6436 13.8349 42.6589 15.7147 47.4721 20.5278C52.2852 25.341 54.165 32.3563 52.4033 38.9312C50.6415 45.5061 45.506 50.6416 38.9311 52.4034C32.3562 54.1651 25.3409 52.2853 20.5277 47.4722C15.7146 42.659 13.8348 35.6437 15.5965 29.0688Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M63.4534 67.7487L50.7249 55.0169C49.5542 53.8459 49.5544 51.9476 50.7252 50.7768C51.8963 49.6057 53.795 49.6058 54.9659 50.7771L67.6944 63.5089C68.865 64.6799 68.8649 66.5782 67.6941 67.749C66.523 68.9201 64.6243 68.92 63.4534 67.7487Z"
            fill="#F2C94C"
          />
          <path
            d="M50.7249 55.0169L52.1393 53.6028H52.1393L50.7249 55.0169ZM63.4534 67.7487L64.8678 66.3347L63.4534 67.7487ZM50.7252 50.7768L52.1394 52.191H52.1394L50.7252 50.7768ZM54.9659 50.7771L53.5515 52.1911V52.1911L54.9659 50.7771ZM67.6944 63.5089L69.1088 62.0949L67.6944 63.5089ZM67.6941 67.749L66.2799 66.3348H66.2799L67.6941 67.749ZM49.3105 56.4309L62.039 69.1628L64.8678 66.3347L52.1393 53.6028L49.3105 56.4309ZM49.311 49.3626C47.3592 51.3144 47.359 54.4788 49.3105 56.4309L52.1393 53.6028C51.7495 53.2129 51.7496 52.5808 52.1394 52.191L49.311 49.3626ZM56.3803 49.363C54.4283 47.4106 51.2632 47.4104 49.311 49.3626L52.1394 52.191C52.5294 51.801 53.1616 51.8011 53.5515 52.1911L56.3803 49.363ZM69.1088 62.0949L56.3803 49.363L53.5515 52.1911L66.28 64.923L69.1088 62.0949ZM69.1083 69.1632C71.0601 67.2114 71.0603 64.047 69.1088 62.0949L66.28 64.923C66.6698 65.3129 66.6697 65.945 66.2799 66.3348L69.1083 69.1632ZM62.039 69.1628C63.9909 71.1152 67.1561 71.1154 69.1083 69.1632L66.2799 66.3348C65.8899 66.7248 65.2577 66.7247 64.8678 66.3347L62.039 69.1628Z"
            fill="#F2C94C"
          />
          <path
            d="M15.5965 29.0688C17.3583 22.4939 22.4939 17.3584 29.0687 15.5966C35.6436 13.8349 42.6589 15.7147 47.4721 20.5278C52.2852 25.341 54.165 32.3563 52.4033 38.9312C50.6415 45.5061 45.506 50.6416 38.9311 52.4034C32.3562 54.1651 25.3409 52.2853 20.5277 47.4722C15.7146 42.659 13.8348 35.6437 15.5965 29.0688Z"
            fill="#2F80ED"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M63.4534 67.7488L50.7249 55.0169C49.5542 53.8459 49.5543 51.9476 50.7252 50.7768C51.8962 49.6057 53.7949 49.6059 54.9658 50.7771L67.6943 63.509C68.865 64.68 68.8649 66.5782 67.694 67.7491C66.523 68.9201 64.6243 68.92 63.4534 67.7488Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M15.5967 29.0688C17.3584 22.494 22.494 17.3584 29.0688 15.5967C35.6437 13.8349 42.6591 15.7147 47.4722 20.5278C52.2854 25.341 54.1651 32.3563 52.4034 38.9312C50.6416 45.5061 45.5061 50.6416 38.9312 52.4034C32.3563 54.1651 25.341 52.2854 20.5278 47.4722C15.7147 42.6591 13.8349 35.6437 15.5967 29.0688Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M47.445 47.4984L50.7243 50.7777M50.7249 55.0169L63.4534 67.7488C64.6243 68.92 66.523 68.9201 67.694 67.7491C68.8649 66.5782 68.865 64.68 67.6943 63.509L54.9658 50.7771C53.7949 49.6059 51.8962 49.6057 50.7252 50.7768C49.5543 51.9476 49.5542 53.8459 50.7249 55.0169ZM20.5278 47.4722C15.7147 42.6591 13.8349 35.6437 15.5967 29.0688C17.3584 22.494 22.494 17.3584 29.0688 15.5967C35.6437 13.8349 42.6591 15.7147 47.4722 20.5278C52.2854 25.341 54.1651 32.3563 52.4034 38.9312C50.6416 45.5061 45.5061 50.6416 38.9312 52.4034C32.3563 54.1651 25.341 52.2854 20.5278 47.4722Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            d="M48.1906 51.0724L47.3758 50.2575C45.0919 52.137 42.4017 53.544 39.4489 54.3353C32.1838 56.2819 24.4321 54.2049 19.1137 48.8865C13.7953 43.5681 11.7182 35.8163 13.6648 28.5513C15.6115 21.2862 21.2862 15.6115 28.5513 13.6648C35.8163 11.7182 43.5681 13.7953 48.8865 19.1137C54.2049 24.4321 56.2819 32.1838 54.3353 39.4489C53.5373 42.4268 52.113 45.1376 50.2095 47.4339L51.0187 48.243C52.8126 47.54 54.9309 47.9134 56.3803 49.3631L69.1088 62.095C71.0603 64.0471 71.0601 67.2115 69.1083 69.1633C67.1561 71.1155 63.9909 71.1153 62.039 69.1629L49.3105 56.431C47.8621 54.9821 47.4888 52.8654 48.1906 51.0724ZM48.1906 51.0724L49.3104 52.1916C50.0915 52.9727 51.3578 52.9727 52.1389 52.1916M48.1906 51.0724L52.1389 52.1916M52.1389 52.1916C51.7496 52.5815 51.7497 53.2132 52.1393 53.6029L64.8678 66.3348C65.2577 66.7248 65.8899 66.7248 66.2799 66.3349C66.6697 65.945 66.6698 65.313 66.28 64.923L53.5515 52.1912C53.1616 51.8012 52.5288 51.8017 52.1389 52.1916ZM46.0697 46.0463C48.1456 43.9664 49.6846 41.3504 50.4716 38.4136C52.0484 32.5289 50.3659 26.25 46.058 21.9421C41.7501 17.6342 35.4712 15.9518 29.5865 17.5286C23.7018 19.1054 19.1054 23.7018 17.5286 29.5865C15.9518 35.4712 17.6342 41.7501 21.9421 46.058C26.25 50.3659 32.5289 52.0484 38.4136 50.4716C41.3281 49.6906 43.9266 48.169 45.9988 46.117C46.0093 46.106 46.02 46.095 46.0309 46.0842L46.0333 46.0818C46.0453 46.0698 46.0575 46.058 46.0697 46.0463Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreSearch = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreSearch.displayName = 'CoreSearch'

export default CoreSearch
