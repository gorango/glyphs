
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M28 48.1314L28 60C28 66.6274 33.3726 72 40 72C46.6274 72 52 66.6274 52 60V48C52 41.6066 47.0002 36.381 40.6973 36.0199"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M52 31.8684V19.9999C52 13.3725 46.6274 7.99988 40 7.99988C33.3726 7.99988 28 13.3725 28 19.9999L28 31.9999C28 38.3932 32.9998 43.6188 39.3027 43.98"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M30.5186 49.7528C30.5186 48.0959 29.1754 46.7528 27.5186 46.7528C25.8617 46.7528 24.5186 48.0959 24.5186 49.7528L30.5186 49.7528ZM43.5688 33.054C41.9733 32.6074 40.3178 33.5388 39.8712 35.1343C39.4246 36.7298 40.356 38.3853 41.9515 38.8319L43.5688 33.054ZM48.5186 47.5L48.5186 59.5L54.5186 59.5L54.5186 47.5L48.5186 47.5ZM30.5186 59.5L30.5186 49.7528L24.5186 49.7528L24.5186 59.5L30.5186 59.5ZM48.5186 59.5C48.5186 64.4706 44.4891 68.5 39.5186 68.5L39.5186 74.5C47.8028 74.5 54.5186 67.7843 54.5186 59.5L48.5186 59.5ZM54.5186 47.5C54.5186 40.6155 49.8831 34.8214 43.5688 33.054L41.9515 38.8319C45.7425 39.893 48.5186 43.3762 48.5186 47.5L54.5186 47.5ZM24.5186 59.5C24.5186 67.7843 31.2343 74.5 39.5186 74.5L39.5186 68.5C34.548 68.5 30.5186 64.4706 30.5186 59.5L24.5186 59.5Z"
            fill="currentColor"
          />
          <path
            d="M27.5186 31.5L30.5186 31.5L27.5186 31.5ZM27.5186 19.5L24.5186 19.5L27.5186 19.5ZM48.5186 29.2472C48.5186 30.9041 49.8617 32.2472 51.5186 32.2472C53.1754 32.2472 54.5186 30.9041 54.5186 29.2472L48.5186 29.2472ZM35.4683 45.946C37.0638 46.3926 38.7193 45.4612 39.1659 43.8657C39.6125 42.2702 38.6811 40.6147 37.0856 40.1681L35.4683 45.946ZM30.5186 31.5L30.5186 19.5L24.5186 19.5L24.5186 31.5L30.5186 31.5ZM48.5186 19.5L48.5186 29.2472L54.5186 29.2472L54.5186 19.5L48.5186 19.5ZM30.5186 19.5C30.5186 14.5294 34.548 10.5 39.5186 10.5L39.5186 4.5C31.2343 4.5 24.5186 11.2157 24.5186 19.5L30.5186 19.5ZM24.5186 31.5C24.5186 38.3845 29.154 44.1786 35.4683 45.946L37.0856 40.1681C33.2946 39.107 30.5186 35.6238 30.5186 31.5L24.5186 31.5ZM54.5186 19.5C54.5186 11.2157 47.8028 4.5 39.5186 4.5L39.5186 10.5C44.4891 10.5 48.5186 14.5294 48.5186 19.5L54.5186 19.5Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M51.5186 47.5L49.5186 47.5L51.5186 47.5ZM51.5186 59.5L53.5186 59.5L51.5186 59.5ZM27.5186 59.5L25.5186 59.5L27.5186 59.5ZM29.5186 47.6315C29.5186 46.5269 28.6231 45.6315 27.5186 45.6315C26.414 45.6315 25.5186 46.5269 25.5186 47.6315L29.5186 47.6315ZM40.3302 33.5232C39.2275 33.46 38.2823 34.3028 38.2191 35.4055C38.1559 36.5083 38.9987 37.4535 40.1014 37.5166L40.3302 33.5232ZM49.5186 47.5L49.5186 59.5L53.5186 59.5L53.5186 47.5L49.5186 47.5ZM29.5186 59.5L29.5186 47.6315L25.5186 47.6315L25.5186 59.5L29.5186 59.5ZM49.5186 59.5C49.5186 65.0228 45.0414 69.5 39.5186 69.5L39.5186 73.5C47.2505 73.5 53.5186 67.232 53.5186 59.5L49.5186 59.5ZM53.5186 47.5C53.5186 40.0404 47.6854 33.9446 40.3302 33.5232L40.1014 37.5166C45.3521 37.8175 49.5186 42.1729 49.5186 47.5L53.5186 47.5ZM25.5186 59.5C25.5186 67.232 31.7866 73.5 39.5186 73.5L39.5186 69.5C33.9957 69.5 29.5186 65.0228 29.5186 59.5L25.5186 59.5Z"
            fill="#2F80ED"
          />
          <path
            d="M49.5186 31.3685C49.5186 32.4731 50.414 33.3685 51.5186 33.3685C52.6231 33.3685 53.5186 32.4731 53.5186 31.3685L49.5186 31.3685ZM38.7069 45.4768C39.8096 45.54 40.7548 44.6972 40.818 43.5945C40.8812 42.4917 40.0384 41.5465 38.9357 41.4834L38.7069 45.4768ZM29.5186 31.5L29.5186 19.5L25.5186 19.5L25.5186 31.5L29.5186 31.5ZM49.5186 19.5L49.5186 31.3685L53.5186 31.3685L53.5186 19.5L49.5186 19.5ZM29.5186 19.5C29.5186 13.9772 33.9957 9.5 39.5186 9.5L39.5186 5.5C31.7866 5.5 25.5186 11.768 25.5186 19.5L29.5186 19.5ZM25.5186 31.5C25.5186 38.9596 31.3517 45.0554 38.7069 45.4768L38.9357 41.4834C33.685 41.1825 29.5186 36.8271 29.5186 31.5L25.5186 31.5ZM53.5186 19.5C53.5186 11.768 47.2505 5.5 39.5186 5.5L39.5186 9.5C45.0414 9.5 49.5186 13.9772 49.5186 19.5L53.5186 19.5Z"
            fill="#56CCF2"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M27.5186 47.6315L27.5186 59.5C27.5186 66.1274 32.8911 71.5 39.5186 71.5C46.146 71.5 51.5186 66.1274 51.5186 59.5L51.5186 47.5C51.5186 41.1066 46.5187 35.881 40.2158 35.5199M51.5186 31.3685V19.5C51.5186 12.8726 46.146 7.5 39.5186 7.5C32.8911 7.5 27.5186 12.8726 27.5186 19.5L27.5186 31.5C27.5186 37.8934 32.5184 43.119 38.8213 43.4801"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            d="M53.5 19.5C53.5 11.768 47.232 5.5 39.5 5.5C31.768 5.5 25.5 11.768 25.5 19.5L25.5 31.5C25.5 38.9596 31.3331 45.0554 38.6883 45.4768C39.7911 45.54 40.7363 44.6972 40.7995 43.5945C40.8626 42.4917 40.0199 41.5465 38.9171 41.4834C33.6665 41.1825 29.5 36.8271 29.5 31.5L29.5 19.5C29.5 13.9772 33.9772 9.5 39.5 9.5C45.0228 9.5 49.5 13.9772 49.5 19.5V31.3685C49.5 32.4731 50.3954 33.3685 51.5 33.3685C52.6046 33.3685 53.5 32.4731 53.5 31.3685V19.5Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M25.5 59.5C25.5 67.232 31.768 73.5 39.5 73.5C47.232 73.5 53.5 67.232 53.5 59.5V47.5C53.5 40.0404 47.6669 33.9446 40.3117 33.5232C39.2089 33.46 38.2637 34.3028 38.2005 35.4055C38.1374 36.5083 38.9801 37.4535 40.0829 37.5166C45.3335 37.8175 49.5 42.1729 49.5 47.5V59.5C49.5 65.0228 45.0228 69.5 39.5 69.5C33.9772 69.5 29.5 65.0228 29.5 59.5V47.6315C29.5 46.5269 28.6046 45.6315 27.5 45.6315C26.3954 45.6315 25.5 46.5269 25.5 47.6315L25.5 59.5Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreLink1 = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreLink1.displayName = 'CoreLink1'

export default CoreLink1
