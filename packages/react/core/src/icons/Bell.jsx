
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M39.6274 17C35.384 17 31.3143 18.6857 28.3137 21.6863L27.6863 22.3137C24.6857 25.3143 23 29.384 23 33.6274V36.5655C23 41.9664 20.8545 47.1461 17.0355 50.965C16.3725 51.628 16 52.5272 16 53.4648C16 55.4172 17.5828 57 19.5352 57H60.4648C62.4172 57 64 55.4172 64 53.4648C64 52.5272 63.6275 51.628 62.9645 50.965C59.1455 47.1461 57 41.9664 57 36.5655V33.6274C57 29.384 55.3143 25.3143 52.3137 22.3137L51.6863 21.6863C48.6857 18.6857 44.616 17 40.3726 17H39.6274Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M46.245 57C46.6876 57.9211 46.9282 58.9434 46.9282 60C46.9282 62.4752 45.6077 64.7624 43.4641 66C41.3205 67.2376 38.6795 67.2376 36.5359 66C34.3923 64.7624 33.0718 62.4752 33.0718 60C33.0718 58.9434 33.3124 57.9211 33.755 57"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M41.5 17C41.7761 17 42 16.7761 42 16.5V14C42 12.8954 41.1046 12 40 12C38.8954 12 38 12.8954 38 14V16.5C38 16.7761 38.2239 17 38.5 17"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M42 14V17.0829C45.6456 17.4556 49.0718 19.0718 51.6863 21.6863L52.3137 22.3137C55.3143 25.3143 57 29.384 57 33.6274V36.5656C57 41.9665 59.1455 47.1461 62.9645 50.9651C63.6275 51.6281 64 52.5273 64 53.4649C64 55.4173 62.4172 57.0001 60.4648 57.0001H19.5352C17.5828 57.0001 16 55.4173 16 53.4649C16 52.5273 16.3725 51.6281 17.0355 50.9651C20.8545 47.1461 23 41.9665 23 36.5656V33.6274C23 29.384 24.6857 25.3143 27.6863 22.3137L28.3137 21.6863C30.9282 19.0718 34.3544 17.4555 38 17.0829V14C38 12.8954 38.8954 12 40 12C41.1046 12 42 12.8954 42 14Z"
            fill="currentColor"
          />
          <path
            d="M33.0718 60C33.0718 62.4752 34.3923 64.7624 36.5359 66C38.6795 67.2376 41.3205 67.2376 43.4641 66C45.6077 64.7624 46.9282 62.4752 46.9282 60H33.0718Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M33.7549 57C33.3124 57.9211 33.0718 58.9434 33.0718 60C33.0718 62.4752 34.3923 64.7624 36.5359 66C38.6795 67.2376 41.3205 67.2376 43.4641 66C45.6077 64.7624 46.9282 62.4752 46.9282 60C46.9282 58.9434 46.6876 57.9211 46.245 57H33.7549Z"
            fill="#EB5757"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M39.6274 17C35.384 17 31.3143 18.6857 28.3137 21.6863L27.6863 22.3137C24.6857 25.3143 23 29.384 23 33.6274V36.5656C23 41.9665 20.8545 47.1461 17.0355 50.9651C16.3725 51.6281 16 52.5273 16 53.4649C16 55.4173 17.5828 57.0001 19.5352 57.0001L60.4648 57.0001C62.4172 57.0001 64 55.4173 64 53.4649C64 52.5273 63.6275 51.6281 62.9645 50.9651C59.1455 47.1461 57 41.9665 57 36.5656V33.6274C57 29.384 55.3143 25.3143 52.3137 22.3137L51.6863 21.6863C48.6857 18.6857 44.616 17 40.3726 17H39.6274Z"
            fill="#F2C94C"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M42 17.0829V14C42 12.8954 41.1046 12 40 12C38.8954 12 38 12.8954 38 14V17.0829C38.5383 17.0279 39.0814 17 39.6274 17H40.3726C40.9186 17 41.4617 17.0279 42 17.0829Z"
            fill="#F2994A"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M33.755 57C33.3124 57.9211 33.0718 58.9434 33.0718 60C33.0718 62.4752 34.3923 64.7624 36.5359 66C38.6795 67.2376 41.3205 67.2376 43.4641 66C45.6077 64.7624 46.9282 62.4752 46.9282 60C46.9282 58.9434 46.6876 57.9211 46.245 57H33.755Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M39.6274 17C35.384 17 31.3143 18.6857 28.3137 21.6863L27.6863 22.3137C24.6857 25.3143 23 29.384 23 33.6274V36.5656C23 41.9665 20.8545 47.1461 17.0355 50.9651C16.3725 51.6281 16 52.5273 16 53.4649C16 55.4173 17.5828 57.0001 19.5352 57.0001H60.4648C62.4172 57.0001 64 55.4173 64 53.4649C64 52.5273 63.6275 51.6281 62.9645 50.9651C59.1455 47.1461 57 41.9665 57 36.5656V33.6274C57 29.384 55.3143 25.3143 52.3137 22.3137L51.6863 21.6863C48.6857 18.6857 44.616 17 40.3726 17H39.6274Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M42 17.0829V14C42 12.8954 41.1046 12 40 12C38.8954 12 38 12.8954 38 14V17.0829C38.5383 17.0279 39.0814 17 39.6274 17H40.3726C40.9186 17 41.4617 17.0279 42 17.0829Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M39.6274 17C35.384 17 31.3143 18.6857 28.3137 21.6863L27.6863 22.3137C24.6857 25.3143 23 29.384 23 33.6274V36.5656C23 41.9665 20.8545 47.1461 17.0355 50.9651C16.3725 51.6281 16 52.5273 16 53.4649C16 55.4173 17.5828 57.0001 19.5352 57.0001H60.4648C62.4172 57.0001 64 55.4173 64 53.4649C64 52.5273 63.6275 51.6281 62.9645 50.9651C59.1455 47.1461 57 41.9665 57 36.5656V33.6274C57 29.384 55.3143 25.3143 52.3137 22.3137L51.6863 21.6863C48.6857 18.6857 44.616 17 40.3726 17M39.6274 17H40.3726M39.6274 17C39.0814 17 38.5383 17.0279 38 17.0829V14C38 12.8954 38.8954 12 40 12C41.1046 12 42 12.8954 42 14V17.0829C41.4617 17.0279 40.9186 17 40.3726 17M33.0718 60C33.0718 58.9434 33.3124 57.9211 33.755 57H46.245C46.6876 57.9211 46.9282 58.9434 46.9282 60C46.9282 62.4752 45.6077 64.7624 43.4641 66C41.3205 67.2376 38.6795 67.2376 36.5359 66C34.3923 64.7624 33.0718 62.4752 33.0718 60Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M40 10C37.7909 10 36 11.7909 36 14V15.3692C32.5781 16.0733 29.407 17.7646 26.8995 20.2721L26.2721 20.8995C22.8964 24.2752 21 28.8535 21 33.6274V36.5655C21 41.436 19.0652 46.1069 15.6213 49.5508C14.5832 50.5888 14 51.9968 14 53.4648C14 56.5218 16.4782 59 19.5352 59H31.1279C31.0907 59.3298 31.0718 59.6636 31.0718 60C31.0718 63.1897 32.7735 66.1372 35.5359 67.7321C38.2983 69.3269 41.7017 69.3269 44.4641 67.7321C47.2265 66.1372 48.9282 63.1897 48.9282 60C48.9282 59.6636 48.9093 59.3298 48.8721 59H60.4648C63.5218 59 66 56.5218 66 53.4648C66 51.9968 65.4168 50.5888 64.3787 49.5508C60.9348 46.1069 59 41.436 59 36.5655V33.6274C59 28.8535 57.1036 24.2752 53.7279 20.8995L53.1005 20.2721C50.593 17.7646 47.4219 16.0733 44 15.3692V14C44 11.7909 42.2091 10 40 10ZM40.3726 19H39.6274C35.9144 19 32.3534 20.475 29.7279 23.1005L29.1005 23.7279C26.475 26.3534 25 29.9144 25 33.6274V36.5655C25 42.4968 22.6438 48.1852 18.4497 52.3792C18.1617 52.6672 18 53.0576 18 53.4648C18 54.3127 18.6873 55 19.5352 55H60.4648C61.3127 55 62 54.3127 62 53.4648C62 53.0576 61.8383 52.6672 61.5503 52.3792C57.3562 48.1852 55 42.4968 55 36.5655V33.6274C55 29.9144 53.525 26.3534 50.8995 23.7279L50.2721 23.1005C47.6466 20.475 44.0856 19 40.3726 19ZM35.0718 60C35.0718 59.6601 35.1068 59.3253 35.1742 59H44.8258C44.8932 59.3253 44.9282 59.6601 44.9282 60C44.9282 61.7607 43.9889 63.3876 42.4641 64.2679C40.9393 65.1483 39.0607 65.1483 37.5359 64.2679C36.0111 63.3876 35.0718 61.7607 35.0718 60Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreBell = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreBell.displayName = 'CoreBell'

export default CoreBell
