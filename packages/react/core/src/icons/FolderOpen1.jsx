
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M16.1039 40.3093C17.241 37.1254 20.257 35 23.6379 35H68.3241C71.0902 35 73.0214 37.7404 72.0911 40.3453L64.9482 60.3453C64.3796 61.9373 62.8717 63 61.1812 63H10.8381C9.45505 63 8.48946 61.6298 8.95463 60.3273L16.1039 40.3093Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M8.91167 61.5423C8.34209 60.8511 8 59.9655 8 59V21C8 18.7909 9.79086 17 12 17H23.0318C24.322 17 25.533 17.6223 26.2841 18.6713L30.4757 24.5254C30.689 24.8233 31.0329 25 31.3992 25H60C62.2091 25 64 26.7909 64 29V35"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M13 49V34C13 31.7909 14.7909 30 17 30H55C57.2091 30 59 31.7909 59 34V35"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M16.1038 40.3093C17.2409 37.1254 20.2568 35 23.6378 35L68.324 35C71.0901 35 73.0213 37.7404 72.091 40.3453L64.9481 60.3453C64.3795 61.9373 62.8716 63 61.1811 63L10.838 63C9.45495 63 8.48935 61.6298 8.95453 60.3273L16.1038 40.3093Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M12 17C9.79086 17 8 18.7909 8 21V29V45V59C8 59.9655 8.34209 60.8511 8.91167 61.5423C8.80338 61.1611 8.80685 60.7408 8.95453 60.3273L13 49V34C13 31.7909 14.7909 30 17 30H55C57.2091 30 59 31.7909 59 34V35H64V29C64 26.7909 62.2091 25 60 25H31.3992C31.0329 25 30.689 24.8233 30.4757 24.5254L30.1359 24.0508L29.7597 23.5254L29.3835 23L26.2841 18.6713C25.533 17.6223 24.322 17 23.0318 17H12Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M16.1038 40.3093C17.2409 37.1254 20.2568 35 23.6378 35L68.324 35C71.0901 35 73.0213 37.7404 72.091 40.3453L64.9481 60.3453C64.3795 61.9373 62.8716 63 61.1811 63L10.838 63C9.45495 63 8.48935 61.6298 8.95453 60.3273L16.1038 40.3093Z"
            fill="#F2C94C"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M12 17C9.79086 17 8 18.7909 8 21V29V45V59C8 59.9655 8.34209 60.8511 8.91167 61.5423C8.80338 61.1611 8.80685 60.7408 8.95453 60.3273L13 49V34C13 31.7909 14.7909 30 17 30H55C57.2091 30 59 31.7909 59 34V35H64V29C64 26.7909 62.2091 25 60 25H31.3992C31.0329 25 30.689 24.8233 30.4757 24.5254L30.1359 24.0508L29.7597 23.5254L29.3835 23L26.2841 18.6713C25.533 17.6223 24.322 17 23.0318 17H12Z"
            fill="#F2994A"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M17 30C14.7909 30 13 31.7909 13 34V49L16.1038 40.3093C17.2409 37.1254 20.2568 35 23.6378 35H59V34C59 31.7909 57.2091 30 55 30H17Z"
            fill="#F2F2F2"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M16.1038 40.3093C17.2409 37.1254 20.2568 35 23.6378 35H68.324C71.0901 35 73.0213 37.7404 72.091 40.3453L64.9481 60.3453C64.3795 61.9373 62.8716 63 61.1811 63H10.838C9.45495 63 8.48935 61.6298 8.95453 60.3273L16.1038 40.3093Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M12 17C9.79086 17 8 18.7909 8 21V59C8 59.9655 8.34209 60.8511 8.91167 61.5423C8.80338 61.1611 8.80685 60.7408 8.95453 60.3273L13 49V34C13 31.7909 14.7909 30 17 30H55C57.2091 30 59 31.7909 59 34V35H64V29C64 26.7909 62.2091 25 60 25H31.3992C31.0329 25 30.689 24.8233 30.4757 24.5254L26.2841 18.6713C25.533 17.6223 24.322 17 23.0318 17H12Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M17 30C14.7909 30 13 31.7909 13 34V49L16.1038 40.3093C17.2409 37.1254 20.2568 35 23.6378 35H59V34C59 31.7909 57.2091 30 55 30H17Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M8.95453 60.3273L16.1038 40.3093M8.95453 60.3273C8.48935 61.6298 9.45495 63 10.838 63H61.1811C62.8716 63 64.3795 61.9373 64.9481 60.3453L72.091 40.3453C73.0213 37.7404 71.0901 35 68.324 35H23.6378M8.95453 60.3273C8.80685 60.7408 8.80338 61.1611 8.91167 61.5423C8.34209 60.8511 8 59.9655 8 59V21C8 18.7909 9.79086 17 12 17H23.0318C24.322 17 25.533 17.6223 26.2841 18.6713L30.4757 24.5254C30.689 24.8233 31.0329 25 31.3992 25H60C62.2091 25 64 26.7909 64 29V35H59M8.95453 60.3273L13 49M23.6378 35C20.2568 35 17.2409 37.1254 16.1038 40.3093M23.6378 35H59M16.1038 40.3093L13 49M13 49V34C13 31.7909 14.7909 30 17 30H55C57.2091 30 59 31.7909 59 34V35"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M6 59C6 60.3074 6.42021 61.5209 7.13146 62.5072C7.71724 63.9377 9.11579 65 10.838 65H61.1811C63.7168 65 65.9787 63.406 66.8316 61.018L73.9744 41.018C75.37 37.1106 72.4732 33 68.324 33H66V29C66 25.6863 63.3137 23 60 23H31.8433L27.9102 17.507C26.7835 15.9335 24.9671 15 23.0318 15H12C8.68629 15 6 17.6863 6 21V59ZM12 19C10.8954 19 10 19.8954 10 21V51.4536L11 48.6536V34C11 30.6863 13.6863 28 17 28H55C57.973 28 60.441 30.1623 60.917 33H62V29C62 27.8954 61.1046 27 60 27H31.3992C30.3878 27 29.4384 26.5121 28.8496 25.6898L24.6579 19.8357C24.2824 19.3112 23.6769 19 23.0318 19H12ZM23.6378 37C21.1219 37 18.8755 38.5692 18.0075 40.9262C18.0007 40.9447 17.994 40.9633 17.9873 40.982L10.838 61H61.1811C62.0263 61 62.7803 60.4687 63.0646 59.6727L70.2075 39.6727C70.6726 38.3702 69.707 37 68.324 37H23.6378ZM15 37.9602C16.7681 34.9282 20.0373 33 23.6378 33H56.7324C56.3866 32.4022 55.7403 32 55 32H17C15.8954 32 15 32.8954 15 34V37.9602Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreFolderOpen1 = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreFolderOpen1.displayName = 'CoreFolderOpen1'

export default CoreFolderOpen1
