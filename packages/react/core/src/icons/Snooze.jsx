
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M18.6667 40H37.3333V40.5833L18 67.4167V68H38"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M48.4667 30H61.5333V30.4167L48 49.5833V50H62"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M29.4 12H40.6V12.375L29 29.625V30H41"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M18.6667 37C17.0098 37 15.6667 38.3431 15.6667 40C15.6667 41.6569 17.0098 43 18.6667 43V37ZM37.3333 40L40.3333 40C40.3333 38.3431 38.9902 37 37.3333 37V40ZM38 71C39.6569 71 41 69.6569 41 68C41 66.3431 39.6569 65 38 65V71ZM18 68H15C15 69.6569 16.3431 71 18 71V68ZM37.3333 40.5833L39.7674 42.337C40.1353 41.8263 40.3333 41.2128 40.3333 40.5833H37.3333ZM18 67.4167L15.566 65.663C15.198 66.1737 15 66.7872 15 67.4167H18ZM18.6667 43H37.3333V37H18.6667V43ZM38 65H18V71H38V65ZM34.3333 40V40.5833H40.3333V40L34.3333 40ZM34.8993 38.8296L15.566 65.663L20.434 69.1704L39.7674 42.337L34.8993 38.8296ZM15 67.4167V68H21V67.4167H15Z"
            fill="currentColor"
          />
          <path
            d="M48.4667 27C46.8098 27 45.4667 28.3431 45.4667 30C45.4667 31.6569 46.8098 33 48.4667 33V27ZM61.5333 30H64.5333C64.5333 28.3431 63.1902 27 61.5333 27V30ZM62 53C63.6569 53 65 51.6569 65 50C65 48.3431 63.6569 47 62 47V53ZM48 50H45C45 51.6569 46.3431 53 48 53V50ZM61.5333 30.4167L63.984 32.1471C64.3414 31.6408 64.5333 31.0364 64.5333 30.4167H61.5333ZM48 49.5833L45.5493 47.8529C45.1919 48.3592 45 48.9636 45 49.5833H48ZM48.4667 33H61.5333V27L48.4667 27V33ZM62 47H48L48 53H62V47ZM58.5333 30V30.4167L64.5333 30.4167V30L58.5333 30ZM59.0827 28.6863L45.5493 47.8529L50.4507 51.3137L63.984 32.1471L59.0827 28.6863ZM45 49.5833V50H51V49.5833H45Z"
            fill="currentColor"
          />
          <path
            d="M29.4 9C27.7431 9 26.4 10.3431 26.4 12C26.4 13.6569 27.7431 15 29.4 15V9ZM40.6 12H43.6C43.6 10.3431 42.2569 9 40.6 9V12ZM41 33C42.6569 33 44 31.6569 44 30C44 28.3431 42.6569 27 41 27V33ZM29 30H26C26 31.6569 27.3431 33 29 33V30ZM40.6 12.375L43.0895 14.0491C43.4223 13.5542 43.6 12.9714 43.6 12.375H40.6ZM29 29.625L26.5105 27.9509C26.1777 28.4458 26 29.0286 26 29.625H29ZM29.4 15L40.6 15V9L29.4 9V15ZM41 27H29V33H41V27ZM37.6 12V12.375H43.6V12H37.6ZM38.1105 10.7009L26.5105 27.9509L31.4895 31.2991L43.0895 14.0491L38.1105 10.7009ZM26 29.625V30H32V29.625H26Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M18.6667 38C17.5621 38 16.6667 38.8954 16.6667 40C16.6667 41.1046 17.5621 42 18.6667 42V38ZM37.3333 40H39.3333C39.3333 38.8954 38.4379 38 37.3333 38V40ZM38 70C39.1046 70 40 69.1046 40 68C40 66.8954 39.1046 66 38 66V70ZM18 68H16C16 69.1046 16.8954 70 18 70V68ZM37.3333 40.5833L38.956 41.7525C39.2013 41.412 39.3333 41.003 39.3333 40.5833H37.3333ZM18 67.4167L16.3773 66.2475C16.132 66.588 16 66.997 16 67.4167H18ZM18.6667 42H37.3333V38H18.6667V42ZM38 66H18V70H38V66ZM35.3333 40V40.5833H39.3333V40H35.3333ZM35.7106 39.4142L16.3773 66.2475L19.6227 68.5858L38.956 41.7525L35.7106 39.4142ZM16 67.4167V68H20V67.4167H16Z"
            fill="#9B51E0"
          />
          <path
            d="M48.4667 28C47.3621 28 46.4667 28.8954 46.4667 30C46.4667 31.1046 47.3621 32 48.4667 32V28ZM61.5333 30H63.5333C63.5333 28.8954 62.6379 28 61.5333 28V30ZM62 52C63.1046 52 64 51.1046 64 50C64 48.8954 63.1046 48 62 48V52ZM48 50H46C46 51.1046 46.8954 52 48 52V50ZM61.5333 30.4167L63.1671 31.5703C63.4054 31.2328 63.5333 30.8298 63.5333 30.4167H61.5333ZM48 49.5833L46.3662 48.4297C46.1279 48.7672 46 49.1702 46 49.5833H48ZM48.4667 32H61.5333V28L48.4667 28V32ZM62 48H48V52H62V48ZM59.5333 30V30.4167H63.5333V30H59.5333ZM59.8996 29.2631L46.3662 48.4297L49.6338 50.7369L63.1671 31.5703L59.8996 29.2631ZM46 49.5833V50H50V49.5833H46Z"
            fill="#2F80ED"
          />
          <path
            d="M29.4 10C28.2954 10 27.4 10.8954 27.4 12C27.4 13.1046 28.2954 14 29.4 14V10ZM40.6 12H42.6C42.6 10.8954 41.7046 10 40.6 10V12ZM41 32C42.1046 32 43 31.1046 43 30C43 28.8954 42.1046 28 41 28V32ZM29 30H27C27 31.1046 27.8954 32 29 32V30ZM40.6 12.375L42.2596 13.4911C42.4815 13.1611 42.6 12.7726 42.6 12.375H40.6ZM29 29.625L27.3404 28.5089C27.1185 28.8389 27 29.2274 27 29.625H29ZM29.4 14L40.6 14V10L29.4 10V14ZM41 28L29 28V32H41V28ZM38.6 12V12.375H42.6V12H38.6ZM38.9404 11.2589L27.3404 28.5089L30.6596 30.7411L42.2596 13.4911L38.9404 11.2589ZM27 29.625V30H31V29.625H27Z"
            fill="#56CCF2"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M18.6667 40H37.3333V40.5833L18 67.4167V68H38M48.4667 30H61.5333V30.4167L48 49.5833V50H62M29.4 12H40.6V12.375L29 29.625V30H41"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            d="M37.512 14.279L38.0359 13.5H37.0971H29.4C28.5716 13.5 27.9 12.8284 27.9 12C27.9 11.1716 28.5716 10.5 29.4 10.5H40.6C41.4284 10.5 42.1 11.1716 42.1 12V12.375C42.1 12.6732 42.0111 12.9646 41.8447 13.212L32.088 27.721L31.5641 28.5H32.5029H41C41.8284 28.5 42.5 29.1716 42.5 30C42.5 30.8284 41.8284 31.5 41 31.5H29C28.1716 31.5 27.5 30.8284 27.5 30V29.625C27.5 29.3268 27.5889 29.0354 27.7553 28.788L37.512 14.279ZM51.1578 47.7116L50.6012 48.5H51.5663H62C62.8284 48.5 63.5 49.1716 63.5 50C63.5 50.8284 62.8284 51.5 62 51.5H48C47.1716 51.5 46.5 50.8284 46.5 50V49.5833C46.5 49.2735 46.5959 48.9712 46.7747 48.7181L58.3755 32.2884L58.9322 31.5H57.967H48.4667C47.6382 31.5 46.9667 30.8284 46.9667 30C46.9667 29.1716 47.6382 28.5 48.4667 28.5H61.5333C62.3618 28.5 63.0333 29.1716 63.0333 30V30.4167C63.0333 30.7265 62.9374 31.0287 62.7587 31.2819L51.1578 47.7116ZM21.0801 65.7077L20.5092 66.5H21.4858H38C38.8284 66.5 39.5 67.1716 39.5 68C39.5 68.8284 38.8284 69.5 38 69.5H18C17.1716 69.5 16.5 68.8284 16.5 68V67.4167C16.5 67.1019 16.599 66.7952 16.783 66.5398L34.2533 42.2923L34.8241 41.5H33.8476H18.6667C17.8382 41.5 17.1667 40.8284 17.1667 40C17.1667 39.1716 17.8382 38.5 18.6667 38.5H37.3333C38.1618 38.5 38.8333 39.1716 38.8333 40V40.5833C38.8333 40.8981 38.7343 41.2048 38.5503 41.4602L21.0801 65.7077Z"
            stroke="currentColor"
          />
        </>
      )
  }
}

const CoreSnooze = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreSnooze.displayName = 'CoreSnooze'

export default CoreSnooze
