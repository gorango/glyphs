
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M16 30L16 16C16 13.7909 17.7909 12 20 12L60 12C62.2091 12 64 13.7909 64 16V30"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M48 43.9997L56.4013 43.9997C59.5401 43.9997 61.0824 40.1785 58.8229 37.9997L43.8005 23.5138C41.7668 21.5527 38.5458 21.5527 36.5121 23.5138L21.4896 37.9997C19.2302 40.1784 20.7725 43.9997 23.9112 43.9997H32L32 61.9997C32 63.1043 32.8955 63.9997 34 63.9997L46 63.9997C47.1046 63.9997 48 63.1043 48 61.9997L48 43.9997Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M16 30L16 29.5L16 16C16 13.7909 17.7909 12 20 12L60 12C62.2091 12 64 13.7909 64 16L64 29.5L64 30"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M48 43.9997L56.4013 43.9997C59.5401 43.9997 61.0824 40.1785 58.8229 37.9997L43.8005 23.5138C41.7668 21.5527 38.5458 21.5527 36.5121 23.5138L21.4896 37.9997C19.2302 40.1784 20.7725 43.9997 23.9112 43.9997L32 43.9997L32 55.9997L32 61.9997C32 63.1043 32.8955 63.9997 34 63.9997L46 63.9997C47.1046 63.9997 48 63.1043 48 61.9997L48 55.9997L48 43.9997Z"
            fill="currentColor"
          />
          <path
            d="M48 43.9997V41.9997C46.8955 41.9997 46 42.8952 46 43.9997L48 43.9997ZM58.8229 37.9997L60.2112 36.56L58.8229 37.9997ZM43.8005 23.5138L45.1888 22.0741V22.0741L43.8005 23.5138ZM36.5121 23.5138L35.1238 22.0741L35.1238 22.0741L36.5121 23.5138ZM21.4896 37.9997L20.1013 36.56H20.1013L21.4896 37.9997ZM32 43.9997L34 43.9997C34 42.8952 33.1046 41.9997 32 41.9997L32 43.9997ZM32 55.9997L34 55.9997L32 55.9997ZM56.4013 41.9997L48 41.9997V45.9997L56.4013 45.9997L56.4013 41.9997ZM57.4347 39.4394C58.3988 40.3691 57.7407 41.9997 56.4013 41.9997L56.4013 45.9997C61.3395 45.9997 63.7659 39.9878 60.2112 36.56L57.4347 39.4394ZM42.4122 24.9535L57.4347 39.4394L60.2112 36.56L45.1888 22.0741L42.4122 24.9535ZM37.9003 24.9535C39.1593 23.7395 41.1532 23.7395 42.4122 24.9535L45.1888 22.0741C42.3803 19.3659 37.9323 19.3659 35.1238 22.0741L37.9003 24.9535ZM22.8779 39.4394L37.9003 24.9535L35.1238 22.0741L20.1013 36.56L22.8779 39.4394ZM23.9112 41.9997C22.5719 41.9997 21.9137 40.3691 22.8779 39.4394L20.1013 36.56C16.5466 39.9878 18.9731 45.9997 23.9112 45.9997L23.9112 41.9997ZM32 41.9997L23.9112 41.9997L23.9112 45.9997L32 45.9997L32 41.9997ZM34 55.9997L34 43.9997L30 43.9997L30 55.9997L34 55.9997ZM34 61.9997L34 55.9997L30 55.9997L30 61.9997L34 61.9997ZM34 61.9997L30 61.9997C30 64.2089 31.7909 65.9997 34 65.9997L34 61.9997ZM46 61.9997L34 61.9997L34 65.9997L46 65.9997L46 61.9997ZM46 61.9997L46 65.9997C48.2092 65.9997 50 64.2089 50 61.9997L46 61.9997ZM46 55.9997L46 61.9997L50 61.9997L50 55.9997L46 55.9997ZM46 43.9997L46 55.9997L50 55.9997L50 43.9997L46 43.9997Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M16 30L16 29.5L16 16C16 13.7909 17.7909 12 20 12L60 12C62.2091 12 64 13.7909 64 16L64 29.5L64 30"
            stroke="#56CCF2"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M48 43.9997L56.4013 43.9997C59.5401 43.9997 61.0824 40.1785 58.8229 37.9997L43.8005 23.5138C41.7668 21.5527 38.5458 21.5527 36.5121 23.5138L21.4896 37.9997C19.2302 40.1784 20.7725 43.9997 23.9112 43.9997L32 43.9997L32 55.9997L32 61.9997C32 63.1043 32.8955 63.9997 34 63.9997L46 63.9997C47.1046 63.9997 48 63.1043 48 61.9997L48 55.9997L48 43.9997Z"
            fill="#56CCF2"
          />
          <path
            d="M48 43.9997V41.9997C46.8955 41.9997 46 42.8952 46 43.9997L48 43.9997ZM58.8229 37.9997L60.2112 36.56L58.8229 37.9997ZM43.8005 23.5138L45.1888 22.0741V22.0741L43.8005 23.5138ZM36.5121 23.5138L35.1238 22.0741V22.0741L36.5121 23.5138ZM21.4896 37.9997L20.1013 36.56H20.1013L21.4896 37.9997ZM32 43.9997L34 43.9997C34 42.8952 33.1046 41.9997 32 41.9997L32 43.9997ZM32 55.9997L34 55.9997L32 55.9997ZM56.4013 41.9997L48 41.9997V45.9997L56.4013 45.9997L56.4013 41.9997ZM57.4347 39.4394C58.3988 40.3691 57.7407 41.9997 56.4013 41.9997L56.4013 45.9997C61.3395 45.9997 63.7659 39.9878 60.2112 36.56L57.4347 39.4394ZM42.4122 24.9535L57.4347 39.4394L60.2112 36.56L45.1888 22.0741L42.4122 24.9535ZM37.9003 24.9535C39.1593 23.7395 41.1532 23.7395 42.4122 24.9535L45.1888 22.0741C42.3803 19.3659 37.9323 19.3659 35.1238 22.0741L37.9003 24.9535ZM22.8779 39.4394L37.9003 24.9535L35.1238 22.0741L20.1013 36.56L22.8779 39.4394ZM23.9112 41.9997C22.5719 41.9997 21.9137 40.3691 22.8779 39.4394L20.1013 36.56C16.5466 39.9878 18.9731 45.9997 23.9112 45.9997L23.9112 41.9997ZM32 41.9997L23.9112 41.9997L23.9112 45.9997L32 45.9997L32 41.9997ZM34 55.9997L34 43.9997L30 43.9997L30 55.9997L34 55.9997ZM34 61.9997L34 55.9997L30 55.9997L30 61.9997L34 61.9997ZM34 61.9997L30 61.9997C30 64.2089 31.7909 65.9997 34 65.9997L34 61.9997ZM46 61.9997L34 61.9997L34 65.9997L46 65.9997L46 61.9997ZM46 61.9997L46 65.9997C48.2092 65.9997 50 64.2089 50 61.9997L46 61.9997ZM46 55.9997L46 61.9997L50 61.9997L50 55.9997L46 55.9997ZM46 43.9997L46 55.9997L50 55.9997L50 43.9997L46 43.9997Z"
            fill="#56CCF2"
          />
          <path
            d="M56.4013 44L23.9112 44C20.7724 44 19.2301 40.1787 21.4896 38L36.512 23.5141C38.5457 21.553 41.7667 21.553 43.8004 23.5141L58.8229 38C61.0823 40.1787 59.54 44 56.4013 44Z"
            fill="#2F80ED"
            stroke="#2F80ED"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M48 44H56.4013C59.5401 44 61.0823 40.1787 58.8229 38L43.8005 23.5141C41.7667 21.553 38.5458 21.553 36.512 23.5141L21.4896 38C19.2302 40.1787 20.7724 44 23.9112 44H32L32 62C32 63.1046 32.8954 64 34 64H46C47.1046 64 48 63.1046 48 62V44Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M16 30L16 16C16 13.7909 17.7909 12 20 12L60 12C62.2091 12 64 13.7909 64 16V30M56.4013 44H48V62C48 63.1046 47.1046 64 46 64H34C32.8954 64 32 63.1046 32 62L32 44H23.9112C20.7724 44 19.2302 40.1787 21.4896 38L36.512 23.5141C38.5458 21.553 41.7667 21.553 43.8005 23.5141L58.8229 38C61.0823 40.1787 59.5401 44 56.4013 44Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            d="M20 14.5C19.1716 14.5 18.5 15.1716 18.5 16L18.5 30C18.5 31.3807 17.3807 32.5 16 32.5C14.6193 32.5 13.5 31.3807 13.5 30L13.5 16C13.5 12.4102 16.4101 9.5 20 9.5L60 9.5C63.5899 9.5 66.5 12.4101 66.5 16V30C66.5 31.3807 65.3807 32.5 64 32.5C62.6193 32.5 61.5 31.3807 61.5 30V16C61.5 15.1716 60.8284 14.5 60 14.5L20 14.5Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M45.5358 21.7145C42.5336 18.8195 37.7789 18.8195 34.7767 21.7145L19.7542 36.2004C15.8757 39.9404 18.5232 46.5 23.9112 46.5H29.5L29.5 62C29.5 64.4853 31.5147 66.5 34 66.5H46C48.4853 66.5 50.5 64.4853 50.5 62V46.5H56.4013C61.7893 46.5 64.4368 39.9404 60.5583 36.2004L45.5358 21.7145ZM38.2474 25.3137C39.3127 24.2864 40.9998 24.2864 42.0651 25.3137L57.0876 39.7996C57.7279 40.4171 57.2908 41.5 56.4013 41.5H48C46.6193 41.5 45.5 42.6193 45.5 44V61.5L34.5 61.5L34.5 44C34.5 42.6193 33.3807 41.5 32 41.5H23.9112C23.0217 41.5 22.5846 40.4171 23.2249 39.7996L38.2474 25.3137Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreArrowSolidBracketEnd = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreArrowSolidBracketEnd.displayName = 'CoreArrowSolidBracketEnd'

export default CoreArrowSolidBracketEnd
