
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M46.5936 16.6897C42.0661 14.8144 36.979 14.8144 32.4514 16.6897C27.9239 18.5651 24.3268 22.1622 22.4514 26.6897C20.5761 31.2173 20.5761 36.3043 22.4514 40.8319C23.7094 43.8689 25.7421 46.4872 28.3106 48.4481C30.1445 49.8481 31.5234 51.8848 31.5234 54.192V59.7617C31.5234 63.0754 34.2097 65.7617 37.5234 65.7617H41.5234C44.8371 65.7617 47.5234 63.0754 47.5234 59.7617V54.1906C47.5234 51.8837 48.9021 49.8471 50.7357 48.4471C53.3036 46.4863 55.3358 43.8684 56.5936 40.8319C58.4689 36.3043 58.4689 31.2173 56.5936 26.6897C54.7182 22.1622 51.1211 18.5651 46.5936 16.6897Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M47.3348 61.2607H31.7124"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M47.5234 56.2607H31.5234"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M32.9289 16.9289C37.4565 15.0536 42.5435 15.0536 47.0711 16.9289C51.5986 18.8043 55.1957 22.4014 57.0711 26.9289C58.9464 31.4565 58.9464 36.5435 57.0711 41.0711C55.8133 44.1076 53.7811 46.7256 51.2132 48.6863C49.3796 50.0863 48.0009 52.1229 48.0009 54.4298V54.5L32.001 54.5C32.001 54.5 32.0009 54.5 32.0009 54.5V54.4312C32.0009 52.124 30.622 50.0873 28.7881 48.6873C26.2196 46.7264 24.1869 44.1081 22.9289 41.0711C21.0536 36.5435 21.0536 31.4565 22.9289 26.9289C24.8043 22.4014 28.4014 18.8043 32.9289 16.9289ZM32.0009 58.5V59.5088C32.0631 59.503 32.1261 59.5 32.1898 59.5L47.8122 59.5C47.8758 59.5 47.9388 59.503 48.0009 59.5088V58.5L32.001 58.5C32.001 58.5 32.0009 58.5 32.0009 58.5ZM46.8755 63.5L33.1263 63.5C34.2154 65.0146 35.993 66.0009 38.0009 66.0009H42.0009C44.0089 66.0009 45.7864 65.0146 46.8755 63.5Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M46.5936 16.6897C42.0661 14.8144 36.979 14.8144 32.4514 16.6897C27.9239 18.5651 24.3268 22.1622 22.4514 26.6897C20.5761 31.2173 20.5761 36.3043 22.4514 40.8319C23.7094 43.8689 25.7421 46.4872 28.3106 48.4481C30.1445 49.8481 31.5234 51.8848 31.5234 54.192V59.7617C31.5234 63.0754 34.2097 65.7617 37.5234 65.7617H41.5234C44.8371 65.7617 47.5234 63.0754 47.5234 59.7617V54.1906C47.5234 51.8837 48.9021 49.8471 50.7357 48.4471C53.3036 46.4863 55.3358 43.8684 56.5936 40.8319C58.4689 36.3043 58.4689 31.2173 56.5936 26.6897C54.7182 22.1622 51.1211 18.5651 46.5936 16.6897Z"
            fill="#F2994A"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M47.5234 54.7607H31.5234V57.7607H47.5234V54.7607ZM47.5234 59.7607H31.5234V59.7617C31.5234 60.8541 31.8154 61.8784 32.3256 62.7607H46.7213C47.2315 61.8784 47.5234 60.8541 47.5234 59.7617V59.7607Z"
            fill="#F2F2F2"
          />
          <path
            d="M32.4514 16.6897C36.979 14.8144 42.0661 14.8144 46.5936 16.6897C51.1211 18.5651 54.7182 22.1622 56.5936 26.6897C58.4689 31.2173 58.4689 36.3043 56.5936 40.8319C54.7182 45.3594 51.1211 48.9565 46.5936 50.8319C42.0661 52.7072 36.979 52.7072 32.4514 50.8319C27.9239 48.9565 24.3268 45.3594 22.4514 40.8319C20.5761 36.3043 20.5761 31.2173 22.4514 26.6897C24.3268 22.1622 27.9239 18.5651 32.4514 16.6897Z"
            fill="#F2C94C"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M46.5936 16.6897C42.0661 14.8144 36.979 14.8144 32.4514 16.6897C27.9239 18.5651 24.3268 22.1622 22.4514 26.6897C20.5761 31.2173 20.5761 36.3043 22.4514 40.8319C23.7094 43.8689 25.7421 46.4872 28.3106 48.4481C30.1445 49.8481 31.5234 51.8848 31.5234 54.192V59.7617C31.5234 63.0754 34.2097 65.7617 37.5234 65.7617H41.5234C44.8371 65.7617 47.5234 63.0754 47.5234 59.7617V54.1906C47.5234 51.8837 48.9021 49.8471 50.7357 48.4471C53.3036 46.4863 55.3358 43.8684 56.5936 40.8319C58.4689 36.3043 58.4689 31.2173 56.5936 26.6897C54.7182 22.1622 51.1211 18.5651 46.5936 16.6897Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M47.3347 61.2608H31.7123M47.5235 56.2608H31.5235M32.4514 16.6897C36.979 14.8144 42.0661 14.8144 46.5936 16.6897C51.1211 18.5651 54.7182 22.1622 56.5936 26.6897C58.4689 31.2173 58.4689 36.3043 56.5936 40.8319C55.3358 43.8684 53.3036 46.4863 50.7357 48.4471C48.9021 49.8471 47.5234 51.8837 47.5234 54.1906V59.7617C47.5234 63.0754 44.8371 65.7617 41.5234 65.7617H37.5234C34.2097 65.7617 31.5234 63.0754 31.5234 59.7617V54.192C31.5234 51.8848 30.1445 49.8481 28.3106 48.4481C25.7421 46.4872 23.7094 43.8689 22.4514 40.8319C20.5761 36.3043 20.5761 31.2173 22.4514 26.6897C24.3268 22.1622 27.9239 18.5651 32.4514 16.6897Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M50.001 56.5146V60.001C50.001 60.6855 49.915 61.3499 49.7533 61.9841C49.7507 61.9945 49.748 62.005 49.7452 62.0154C48.8521 65.4585 45.7235 68.001 42.001 68.001H38.001C33.5827 68.001 30.001 64.4193 30.001 60.001V54.4313C30.001 52.9505 29.1001 51.4417 27.5745 50.277C24.7281 48.104 22.4754 45.2023 21.0812 41.8365C19.0029 36.8189 19.0029 31.1812 21.0812 26.1636C23.1596 21.146 27.146 17.1596 32.1636 15.0812C37.1812 13.0029 42.8189 13.0029 47.8365 15.0812C52.8541 17.1596 56.8405 21.146 58.9189 26.1636C60.9972 31.1812 60.9972 36.8189 58.9189 41.8365C57.525 45.2017 55.2727 48.1031 52.427 50.276C50.9017 51.4406 50.001 52.9493 50.001 54.4299V56.4855C50.001 56.4904 50.001 56.4952 50.001 56.5001C50.001 56.5049 50.001 56.5097 50.001 56.5146ZM33.6944 18.7767C37.7318 17.1044 42.2683 17.1044 46.3058 18.7767C50.3432 20.4491 53.551 23.6569 55.2234 27.6944C56.8957 31.7318 56.8957 36.2683 55.2234 40.3058C54.1018 43.0135 52.2896 45.3481 49.9995 47.0968C47.8577 48.7322 46.001 51.2966 46.001 54.4299V54.5001H34.001V54.4313C34.001 51.2976 32.1439 48.733 30.0018 47.0976C27.7111 45.3489 25.8985 43.014 24.7767 40.3058C23.1044 36.2683 23.1044 31.7318 24.7767 27.6944C26.4491 23.6569 29.6569 20.4491 33.6944 18.7767ZM34.001 58.5001V59.5001H46.001V58.5001H34.001ZM43.9406 63.5001H36.0613C36.6358 63.8192 37.2972 64.001 38.001 64.001H42.001C42.7048 64.001 43.3661 63.8192 43.9406 63.5001Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreLightbulb2 = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreLightbulb2.displayName = 'CoreLightbulb2'

export default CoreLightbulb2
