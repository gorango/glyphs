
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M52.9737 62.9796C52.2422 63.634 51.293 63.9984 50.3064 63.9983L20.0003 63.9998C17.7911 64 16 62.2091 16 59.9998L16 20.0002C16 17.791 17.7909 16.0002 20 16.0002H60C62.2091 16.0002 64 17.791 64 20.0002V50.3069C64 51.2738 63.65 52.2045 63.0202 52.9297"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M62.9393 53.0605L53.0606 62.9392C52.6692 63.3306 52 63.0533 52 62.4998V55.9999C52 53.7907 53.7909 51.9999 56 51.9999H62.5C63.0535 51.9999 63.3307 52.6691 62.9393 53.0605Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M52.9737 62.9794C52.2422 63.6338 51.293 63.9983 50.3064 63.9981L45.7143 63.9975L20.0003 63.9997C17.7911 63.9999 16 62.2089 16 59.9997L16 20C16 17.7909 17.7909 16 20 16L60 16C62.2091 16 64 17.7909 64 20V50.2832V50.3068C64 51.2736 63.65 52.2043 63.0202 52.9295C63.2849 52.5341 63.0095 51.967 62.5 51.967H56C53.7908 51.967 52 53.7578 52 55.967V62.4669C52 62.9813 52.5779 63.257 52.9737 62.9794Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M52.9737 62.9794C52.2422 63.6338 51.293 63.9983 50.3064 63.9981L45.7143 63.9975L20.0003 63.9997C17.7911 63.9999 16 62.2089 16 59.9997L16 20C16 17.7909 17.7909 16 20 16L60 16C62.2091 16 64 17.7909 64 20V50.2832V50.3068C64 51.2736 63.65 52.2043 63.0202 52.9295C63.2849 52.5341 63.0095 51.967 62.5 51.967H56C53.7908 51.967 52 53.7578 52 55.967V62.4669C52 62.9813 52.5779 63.257 52.9737 62.9794Z"
            fill="#F2C94C"
          />
          <path
            d="M50.3064 63.9981L50.3061 65.9981L50.3064 63.9981ZM52.9737 62.9794L51.8253 61.342C52.6921 60.7341 53.8824 60.907 54.5405 61.7363C55.1985 62.5657 55.0962 63.7642 54.3072 64.47L52.9737 62.9794ZM45.7143 63.9975L45.7141 61.9975H45.7146L45.7143 63.9975ZM20.0003 63.9997L20.0005 65.9997L20.0003 63.9997ZM16 59.9997L18 59.9997L16 59.9997ZM16 20H14H16ZM60 16V14V16ZM63.0202 52.9295L64.5302 54.241C63.8377 55.0383 62.6447 55.1598 61.8057 54.5186C60.9667 53.8773 60.7708 52.6943 61.3583 51.8168L63.0202 52.9295ZM50.3066 61.9981C50.7999 61.9982 51.2745 61.816 51.6402 61.4888L54.3072 64.47C53.2098 65.4517 51.7861 65.9983 50.3061 65.9981L50.3066 61.9981ZM45.7146 61.9975L50.3066 61.9981L50.3061 65.9981L45.714 65.9975L45.7146 61.9975ZM20.0002 61.9997L45.7141 61.9975L45.7145 65.9975L20.0005 65.9997L20.0002 61.9997ZM18 59.9997C18 61.1043 18.8955 61.9998 20.0002 61.9997L20.0005 65.9997C16.6866 65.9999 14 63.3136 14 59.9997L18 59.9997ZM18 20L18 59.9997L14 59.9997L14 20H18ZM20 18C18.8954 18 18 18.8954 18 20H14C14 16.6863 16.6863 14 20 14V18ZM60 18L20 18V14L60 14V18ZM62 20C62 18.8954 61.1046 18 60 18V14C63.3137 14 66 16.6863 66 20H62ZM62 50.2832L62 20H66V50.2832H62ZM62 50.3068V50.2832H66V50.3068H62ZM61.5101 51.6181C61.825 51.2556 62 50.7902 62 50.3068H66C66 51.757 65.475 53.1531 64.5302 54.241L61.5101 51.6181ZM62.5 49.967C64.6698 49.967 65.8024 52.369 64.682 54.0423L61.3583 51.8168C60.7675 52.6992 61.3493 53.967 62.5 53.967V49.967ZM56 49.967H62.5V53.967H56V49.967ZM50 55.967C50 52.6533 52.6863 49.967 56 49.967V53.967C54.8954 53.967 54 54.8624 54 55.967H50ZM50 62.4669V55.967H54V62.4669H50ZM54.1221 64.6169C52.4461 65.7923 50 64.6551 50 62.4669H54C54 61.3075 52.7097 60.7218 51.8253 61.342L54.1221 64.6169Z"
            fill="#F2C94C"
          />
          <path
            d="M62.9393 53.0604L53.0606 62.939C52.6692 63.3304 52 63.0532 52 62.4997V55.9997C52 53.7906 53.7909 51.9997 56 51.9997H62.5C63.0535 51.9997 63.3307 52.669 62.9393 53.0604Z"
            fill="#F2994A"
          />
          <path
            d="M53.0606 62.939L54.4748 64.3532L54.4748 64.3532L53.0606 62.939ZM62.9393 53.0604L64.3535 54.4746L64.3535 54.4746L62.9393 53.0604ZM51.6464 61.5248L61.5251 51.6461L64.3535 54.4746L54.4748 64.3532L51.6464 61.5248ZM50 62.4997V55.9997H54V62.4997H50ZM56 49.9997H62.5V53.9997H56V49.9997ZM50 55.9997C50 52.686 52.6863 49.9997 56 49.9997V53.9997C54.8954 53.9997 54 54.8951 54 55.9997H50ZM61.5251 51.6461C60.6566 52.5147 61.2717 53.9997 62.5 53.9997V49.9997C64.8353 49.9997 66.0049 52.8232 64.3535 54.4746L61.5251 51.6461ZM54.4748 64.3532C52.8235 66.0045 50 64.835 50 62.4997H54C54 61.2714 52.515 60.6563 51.6464 61.5248L54.4748 64.3532Z"
            fill="#F2994A"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M52.9737 62.9796C52.2422 63.634 51.293 63.9984 50.3064 63.9983L20.0003 63.9998C17.7911 64 16 62.2091 16 59.9998L16 20.0002C16 17.791 17.7909 16.0002 20 16.0002H60C62.2091 16.0002 64 17.791 64 20.0002V50.307C64 51.2738 63.65 52.2045 63.0202 52.9297C63.2849 52.5343 63.0095 51.9671 62.5 51.9671H56C53.7908 51.9671 52 53.758 52 55.9671V62.4671C52 62.9815 52.5779 63.2572 52.9737 62.9796Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M62.9393 53.0605L53.0606 62.9392C52.6692 63.3306 52 63.0534 52 62.4999V55.9999C52 53.7907 53.7909 51.9999 56 51.9999H62.5C63.0535 51.9999 63.3307 52.6691 62.9393 53.0605Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M52.9737 62.9796C52.2422 63.634 51.293 63.9984 50.3064 63.9983L20.0003 63.9998C17.7911 64 16 62.2091 16 59.9998L16 20.0002C16 17.791 17.7909 16.0002 20 16.0002H60C62.2091 16.0002 64 17.791 64 20.0002V50.307C64 51.2738 63.65 52.2045 63.0202 52.9297C63.2849 52.5343 63.0095 51.9671 62.5 51.9671H56C53.7908 51.9671 52 53.758 52 55.9671V62.4671C52 62.9815 52.5779 63.2572 52.9737 62.9796Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M62.9393 53.0605L53.0606 62.9392C52.6692 63.3306 52 63.0534 52 62.4999V55.9999C52 53.7907 53.7909 51.9999 56 51.9999H62.5C63.0535 51.9999 63.3307 52.6691 62.9393 53.0605Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M20.0005 65.9997C16.6866 65.9999 14 63.3136 14 59.9997L14 20C14 16.6863 16.6863 14 20 14H60C63.3137 14 66 16.6863 66 20V50.3068C66 51.6374 65.558 52.9224 64.7554 53.9655C64.6469 54.1438 64.5134 54.3147 64.3535 54.4746L54.4748 64.3532C54.3119 64.5162 54.1375 64.6517 53.9555 64.7613C52.9139 65.5592 51.6326 65.9983 50.3061 65.9981L20.0005 65.9997ZM18 59.9997C18 61.1043 18.8955 61.9998 20.0002 61.9997L50 61.9981V55.967C50 52.6533 52.6863 49.967 56 49.967H62V20C62 18.8954 61.1046 18 60 18H20C18.8954 18 18 18.8954 18 20L18 59.9997ZM56 53.9997C54.8954 53.9997 54 54.8951 54 55.9997V59.1712L59.1716 53.9997H56Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreNoteSticky = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreNoteSticky.displayName = 'CoreNoteSticky'

export default CoreNoteSticky
