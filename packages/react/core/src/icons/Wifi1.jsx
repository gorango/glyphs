
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M44.0039 60C44.0039 62.2091 42.213 64 40.0039 64C37.7948 64 36.0039 62.2091 36.0039 60C36.0039 57.7909 37.7948 56 40.0039 56C42.213 56 44.0039 57.7909 44.0039 60Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M26.8745 51.7215C27.7942 50.2849 28.9458 49.0052 30.286 47.9364C32.1182 46.4753 34.256 45.4458 36.5407 44.9243C38.8253 44.4028 41.1982 44.4028 43.4828 44.9243C45.7675 45.4458 47.9053 46.4753 49.7375 47.9364C51.077 49.0046 52.2279 50.2834 53.1473 51.719"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <circle
            cx="40.0039"
            cy="60"
            r="4"
            fill="currentColor"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M30.286 47.9364L32.1565 50.2819H32.1565L30.286 47.9364ZM36.5407 44.9243L37.2082 47.8491L36.5407 44.9243ZM24.3479 50.104C23.4546 51.4994 23.8616 53.3548 25.257 54.2481C26.6524 55.1414 28.5078 54.7344 29.4011 53.3391L24.3479 50.104ZM49.7375 47.9364L47.867 50.2819L47.867 50.2819L49.7375 47.9364ZM50.6211 53.337C51.5147 54.7322 53.3702 55.1388 54.7654 54.2452C56.1606 53.3516 56.5672 51.4961 55.6736 50.1009L50.6211 53.337ZM43.4828 44.9243L44.1504 41.9995L43.4828 44.9243ZM32.1565 50.2819C33.6363 49.1018 35.363 48.2703 37.2082 47.8491L35.8731 41.9995C33.1491 42.6213 30.6001 43.8488 28.4156 45.5909L32.1565 50.2819ZM29.4011 53.3391C30.1439 52.1787 31.074 51.1451 32.1565 50.2819L28.4156 45.5909C26.8175 46.8653 25.4445 48.3911 24.3479 50.104L29.4011 53.3391ZM47.867 50.2819C48.9489 51.1446 49.8785 52.1775 50.6211 53.337L55.6736 50.1009C54.5773 48.3893 53.205 46.8645 51.6079 45.5909L47.867 50.2819ZM42.8153 47.8491C44.6605 48.2703 46.3872 49.1018 47.867 50.2819L51.6079 45.5909C49.4234 43.8488 46.8744 42.6213 44.1504 41.9995L42.8153 47.8491ZM44.1504 41.9995C41.4263 41.3778 38.5972 41.3778 35.8731 41.9995L37.2082 47.8491C39.0535 47.4279 40.97 47.4279 42.8153 47.8491L44.1504 41.9995Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <circle
            cx="40.0039"
            cy="60"
            r="4"
            fill="#BB6BD9"
            stroke="#BB6BD9"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M30.286 47.9364L31.533 49.5H31.533L30.286 47.9364ZM36.5407 44.9243L36.9857 46.8742L36.5407 44.9243ZM25.1901 50.6432C24.5946 51.5734 24.8659 52.8103 25.7962 53.4059C26.7264 54.0015 27.9633 53.7301 28.5589 52.7999L25.1901 50.6432ZM49.7375 47.9364L48.4905 49.5V49.5L49.7375 47.9364ZM51.4632 52.7976C52.0589 53.7278 53.2959 53.9989 54.226 53.4031C55.1562 52.8074 55.4273 51.5704 54.8315 50.6403L51.4632 52.7976ZM43.4828 44.9243L43.9279 42.9744L43.4828 44.9243ZM31.533 49.5C33.1303 48.2263 34.994 47.3288 36.9857 46.8742L36.0956 42.9744C33.518 43.5628 31.1061 44.7243 29.0391 46.3727L31.533 49.5ZM28.5589 52.7999C29.3607 51.5475 30.3646 50.4318 31.533 49.5L29.0391 46.3727C27.5269 47.5786 26.2278 49.0224 25.1901 50.6432L28.5589 52.7999ZM48.4905 49.5C49.6582 50.4313 50.6616 51.5461 51.4632 52.7976L54.8315 50.6403C53.7942 49.0207 52.4957 47.5779 50.9845 46.3727L48.4905 49.5ZM43.0378 46.8742C45.0295 47.3288 46.8932 48.2263 48.4905 49.5L50.9845 46.3727C48.9174 44.7243 46.5055 43.5628 43.9279 42.9744L43.0378 46.8742ZM43.9279 42.9744C41.3503 42.3861 38.6732 42.3861 36.0956 42.9744L36.9857 46.8742C38.9775 46.4196 41.046 46.4196 43.0378 46.8742L43.9279 42.9744Z"
            fill="#9B51E0"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M44 60C44 62.2091 42.2092 64 40 64C37.7909 64 36 62.2091 36 60C36 57.7909 37.7909 56 40 56C42.2092 56 44 57.7909 44 60Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M26.8706 51.7215C27.7903 50.2849 28.9418 49.0052 30.2821 47.9364C32.1143 46.4753 34.2521 45.4458 36.5368 44.9243C38.8214 44.4028 41.1942 44.4028 43.4789 44.9243C45.7636 45.4458 47.9014 46.4753 49.7336 47.9364C51.073 49.0046 52.224 50.2834 53.1434 51.719M44 60C44 62.2091 42.2092 64 40 64C37.7909 64 36 62.2091 36 60C36 57.7909 37.7909 56 40 56C42.2092 56 44 57.7909 44 60Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            d="M43.9279 42.9744C41.3503 42.3861 38.6732 42.3861 36.0956 42.9744C33.518 43.5628 31.1061 44.7243 29.0391 46.3727C27.5269 47.5786 26.2278 49.0224 25.1901 50.6432C24.5946 51.5734 24.8659 52.8103 25.7962 53.4059C26.7264 54.0015 27.9633 53.7301 28.5589 52.7999C29.3607 51.5475 30.3646 50.4318 31.533 49.5C33.1303 48.2263 34.994 47.3288 36.9857 46.8742C38.9775 46.4196 41.046 46.4196 43.0378 46.8742C45.0295 47.3288 46.8932 48.2263 48.4905 49.5C49.6582 50.4313 50.6616 51.5461 51.4632 52.7976C52.0589 53.7278 53.2959 53.9989 54.226 53.4031C55.1562 52.8074 55.4273 51.5704 54.8315 50.6403C53.7942 49.0206 52.4957 47.5779 50.9845 46.3727C48.9174 44.7243 46.5055 43.5628 43.9279 42.9744Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M40.0039 54C36.6902 54 34.0039 56.6863 34.0039 60C34.0039 63.3137 36.6902 66 40.0039 66C43.3176 66 46.0039 63.3137 46.0039 60C46.0039 56.6863 43.3176 54 40.0039 54ZM38.0039 60C38.0039 58.8954 38.8994 58 40.0039 58C41.1085 58 42.0039 58.8954 42.0039 60C42.0039 61.1046 41.1085 62 40.0039 62C38.8994 62 38.0039 61.1046 38.0039 60Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreWifi1 = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreWifi1.displayName = 'CoreWifi1'

export default CoreWifi1
