
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M10 60V20"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M10 40H38"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M38 60V20"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M50 60H58.3368C64.7782 60 70 54.7782 70 48.3368C70 41.9361 64.8415 36.7313 58.441 36.6741L58.0217 36.6704C57.85 36.6688 57.7527 36.473 57.8551 36.3352L69.5071 20.6629C69.7108 20.389 69.5153 20 69.1739 20H50"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M35 60.1083C35 61.7651 36.3431 63.1083 38 63.1083C39.6569 63.1083 41 61.7651 41 60.1083H35ZM41 20.1083C41 18.4514 39.6569 17.1083 38 17.1083C36.3431 17.1083 35 18.4514 35 20.1083H41ZM7 60.1083C7 61.7651 8.34315 63.1083 10 63.1083C11.6569 63.1083 13 61.7651 13 60.1083H7ZM13 20.1083C13 18.4514 11.6569 17.1083 10 17.1083C8.34315 17.1083 7 18.4514 7 20.1083H13ZM10 37.1083C8.34315 37.1083 7 38.4514 7 40.1083C7 41.7651 8.34315 43.1083 10 43.1083V37.1083ZM38 43.1083C39.6569 43.1083 41 41.7651 41 40.1083C41 38.4514 39.6569 37.1083 38 37.1083V43.1083ZM41 60.1083V20.1083H35V60.1083H41ZM13 60.1083V20.1083H7V60.1083H13ZM10 43.1083H38V37.1083H10V43.1083Z"
            fill="currentColor"
          />
          <path
            d="M50 57C48.3431 57 47 58.3431 47 60C47 61.6569 48.3431 63 50 63V57ZM69.5071 20.6629L67.0996 18.873L67.0996 18.873L69.5071 20.6629ZM57.8551 36.3352L55.4476 34.5452L55.4476 34.5452L57.8551 36.3352ZM50 17C48.3431 17 47 18.3431 47 20C47 21.6569 48.3431 23 50 23V17ZM58.441 36.6741L58.4678 33.6742H58.4678L58.441 36.6741ZM58.0217 36.6704L58.0485 33.6705L58.0217 36.6704ZM58.3368 57H50V63H58.3368V57ZM67.0996 18.873L55.4476 34.5452L60.2627 38.1251L71.9146 22.4529L67.0996 18.873ZM50 23H69.1739V17H50V23ZM58.4678 33.6742L58.0485 33.6705L57.9949 39.6702L58.4142 39.674L58.4678 33.6742ZM55.4476 34.5452C53.881 36.6525 55.3693 39.6468 57.9949 39.6702L58.0485 33.6705C60.3307 33.6909 61.6244 36.2935 60.2627 38.1251L55.4476 34.5452ZM73 48.3368C73 40.2897 66.5146 33.7461 58.4678 33.6742L58.4142 39.674C63.1684 39.7164 67 43.5825 67 48.3368H73ZM67 48.3368C67 53.1214 63.1214 57 58.3368 57V63C66.4351 63 73 56.4351 73 48.3368H67ZM71.9146 22.4529C73.5898 20.1997 71.9816 17 69.1739 17V23C67.0489 23 65.8317 20.5783 67.0996 18.873L71.9146 22.4529Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M36 60.1083C36 61.2128 36.8954 62.1083 38 62.1083C39.1046 62.1083 40 61.2128 40 60.1083H36ZM40 20.1083C40 19.0037 39.1046 18.1083 38 18.1083C36.8954 18.1083 36 19.0037 36 20.1083H40ZM8 60.1083C8 61.2128 8.89543 62.1083 10 62.1083C11.1046 62.1083 12 61.2128 12 60.1083H8ZM12 20.1083C12 19.0037 11.1046 18.1083 10 18.1083C8.89543 18.1083 8 19.0037 8 20.1083H12ZM10 38.1083C8.89543 38.1083 8 39.0037 8 40.1083C8 41.2128 8.89543 42.1083 10 42.1083V38.1083ZM38 42.1083C39.1046 42.1083 40 41.2128 40 40.1083C40 39.0037 39.1046 38.1083 38 38.1083V42.1083ZM40 60.1083V20.1083H36V60.1083H40ZM12 60.1083V20.1083H8V60.1083H12ZM10 42.1083H38V38.1083H10V42.1083Z"
            fill="#56CCF2"
          />
          <path
            d="M50 58C48.8954 58 48 58.8954 48 60C48 61.1046 48.8954 62 50 62V58ZM69.5071 20.6629L67.9021 19.4696V19.4696L69.5071 20.6629ZM57.8551 36.3352L56.2501 35.1419L56.2501 35.1419L57.8551 36.3352ZM50 18C48.8954 18 48 18.8954 48 20C48 21.1046 48.8954 22 50 22V18ZM58.441 36.6741L58.4589 34.6742H58.4588L58.441 36.6741ZM58.0217 36.6704L58.0396 34.6704L58.0217 36.6704ZM58.3368 58H50V62H58.3368V58ZM67.9021 19.4696L56.2501 35.1419L59.4602 37.5285L71.1121 21.8562L67.9021 19.4696ZM50 22H69.1739V18H50V22ZM58.4588 34.6742L58.0396 34.6704L58.0039 38.6703L58.4231 38.674L58.4588 34.6742ZM56.2501 35.1419C55.1715 36.5926 56.1962 38.6541 58.0039 38.6703L58.0396 34.6704C59.5038 34.6835 60.3338 36.3533 59.4602 37.5285L56.2501 35.1419ZM72 48.3368C72 40.8385 65.9569 34.7412 58.4589 34.6742L58.4231 38.674C63.7261 38.7214 68 43.0337 68 48.3368H72ZM68 48.3368C68 53.6736 63.6736 58 58.3368 58V62C65.8828 62 72 55.8828 72 48.3368H68ZM71.1121 21.8562C72.2968 20.2628 71.1595 18 69.1739 18V22C67.871 22 67.1248 20.5152 67.9021 19.4696L71.1121 21.8562Z"
            fill="#2F80ED"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M38 60.1082V20.1082M10 60.1082V20.1082M10 40.1082H38M50 60H58.3368C64.7782 60 70 54.7782 70 48.3368C70 41.9361 64.8415 36.7313 58.441 36.6741L58.0217 36.6704C57.85 36.6688 57.7527 36.473 57.8551 36.3352L69.5071 20.6629C69.7108 20.389 69.5153 20 69.1739 20H50"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M10 18.1083C11.1046 18.1083 12 19.0037 12 20.1083V38.1083H36V20.1083C36 19.0037 36.8954 18.1083 38 18.1083C39.1046 18.1083 40 19.0037 40 20.1083V60.1083C40 61.2128 39.1046 62.1083 38 62.1083C36.8954 62.1083 36 61.2128 36 60.1083V42.1083H12V60.1083C12 61.2128 11.1046 62.1083 10 62.1083C8.89543 62.1083 8 61.2128 8 60.1083V20.1083C8 19.0037 8.89543 18.1083 10 18.1083Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M48 20C48 18.8954 48.8954 18 50 18H69.1739C71.1595 18 72.2968 20.2628 71.1121 21.8562L61.3369 35.0042C67.4447 36.3725 72 41.8266 72 48.3368C72 55.8828 65.8828 62 58.3368 62H50C48.8954 62 48 61.1046 48 60C48 58.8954 48.8954 58 50 58H58.3368C63.6736 58 68 53.6736 68 48.3368C68 43.0337 63.7261 38.7214 58.4231 38.674L58.0039 38.6703C56.1962 38.6541 55.1715 36.5926 56.2501 35.1419L66.0208 22H50C48.8954 22 48 21.1046 48 20Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreH3 = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreH3.displayName = 'CoreH3'

export default CoreH3
