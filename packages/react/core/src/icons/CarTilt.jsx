
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M8 67.0732H72"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M14.9706 57.7401C11.8464 54.6159 11.8464 49.5506 14.9706 46.4264L40.4264 20.9706C43.5506 17.8464 48.6159 17.8464 51.7401 20.9706L55.9828 25.2132C57.5449 26.7753 57.5449 29.308 55.9828 30.8701L24.8701 61.9828C23.308 63.5449 20.7753 63.5449 19.2132 61.9828L14.9706 57.7401Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M24.0737 62.6006L27.9608 66.4877C28.7418 67.2687 30.0081 67.2687 30.7892 66.4877L35.0318 62.245C35.8129 61.464 35.8129 60.1976 35.0318 59.4166L31.2339 55.6187L24.8699 61.9826C24.6258 62.2268 24.3579 62.4328 24.0737 62.6006Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M49.6187 37.2339L53.4166 41.0318C54.1976 41.8129 55.464 41.8129 56.245 41.0318L60.4877 36.7892C61.2687 36.0081 61.2687 34.7418 60.4877 33.9608L56.6006 30.0737C56.4328 30.3579 56.2268 30.6258 55.9826 30.8699L49.6187 37.2339Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M41.7564 19.6407L13.6407 47.7564L9.44978 38.2087C8.12472 35.1899 8.78714 31.6675 11.1183 29.3363L23.3364 17.1183C25.6675 14.7871 29.1899 14.1247 32.2087 15.4498L41.7564 19.6407Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M20.8899 53.76C19.7183 52.5884 19.7183 50.6889 20.8899 49.5174C22.0615 48.3458 23.961 48.3458 25.1326 49.5174C26.3041 50.6889 26.3041 52.5884 25.1326 53.76C23.961 54.9316 22.0615 54.9316 20.8899 53.76Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M47.76 26.8899C46.5884 25.7183 44.6889 25.7183 43.5174 26.8899C42.3458 28.0615 42.3458 29.961 43.5174 31.1326C44.6889 32.3041 46.5884 32.3041 47.76 31.1326C48.9316 29.961 48.9316 28.0615 47.76 26.8899Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M43.7563 19.6408L45.5241 21.4085C46.108 20.8247 46.3659 19.9902 46.2133 19.1787C46.0607 18.3672 45.5172 17.6835 44.7612 17.3516L43.7563 19.6408ZM15.6407 47.7564L13.3515 48.7612C13.6834 49.5173 14.3672 50.0607 15.1786 50.2133C15.9901 50.3659 16.8246 50.108 17.4085 49.5242L15.6407 47.7564ZM11.4497 38.2087L13.7389 37.2038V37.2038L11.4497 38.2087ZM13.1182 29.3364L11.3505 27.5686L13.1182 29.3364ZM25.3363 17.1183L27.1041 18.8861L25.3363 17.1183ZM34.2086 15.4498L33.2038 17.739L33.2038 17.739L34.2086 15.4498ZM41.9886 17.873L13.8729 45.9886L17.4085 49.5242L45.5241 21.4085L41.9886 17.873ZM9.16055 39.2135L13.3515 48.7612L17.9299 46.7516L13.7389 37.2038L9.16055 39.2135ZM11.3505 27.5686C8.29083 30.6282 7.4214 35.2514 9.16055 39.2135L13.7389 37.2038C12.8279 35.1285 13.2833 32.7068 14.886 31.1041L11.3505 27.5686ZM23.5685 15.3505L11.3505 27.5686L14.886 31.1041L27.1041 18.8861L23.5685 15.3505ZM35.2134 13.1606C31.2514 11.4215 26.6282 12.2909 23.5685 15.3505L27.1041 18.8861C28.7067 17.2834 31.1284 16.828 33.2038 17.739L35.2134 13.1606ZM44.7612 17.3516L35.2134 13.1606L33.2038 17.739L42.7515 21.9299L44.7612 17.3516Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M27.8763 64.4032L29.9606 66.4874C30.7416 67.2685 32.0079 67.2685 32.789 66.4874L37.0316 62.2448C37.8127 61.4637 37.8127 60.1974 37.0316 59.4164L35.0015 57.3862L28.6375 63.7501C28.397 63.9906 28.1424 64.2083 27.8763 64.4032ZM53.3862 39.0014L55.4164 41.0316C56.1975 41.8126 57.4638 41.8126 58.2448 41.0316L62.4875 36.7889C63.2685 36.0079 63.2685 34.7416 62.4875 33.9605L60.4033 31.8763C60.2084 32.1424 59.9907 32.397 59.7502 32.6375L53.3862 39.0014ZM56.4918 28.7206C56.422 28.858 56.3296 28.987 56.2147 29.1019L50.125 35.1916C50.1584 35.0428 50.233 34.9013 50.3488 34.7855L56.2414 28.8929C56.3159 28.8184 56.401 28.761 56.4918 28.7206ZM24.7206 60.4918C24.761 60.4009 24.8185 60.3158 24.893 60.2413L30.7855 54.3488C30.9014 54.2329 31.0428 54.1583 31.1917 54.1249L25.102 60.2146C24.987 60.3296 24.8581 60.4219 24.7206 60.4918Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M16.9703 57.7399C13.8461 54.6157 13.8461 49.5503 16.9703 46.4262L42.4262 20.9703C45.5504 17.8461 50.6157 17.8461 53.7399 20.9703L57.9825 25.213C59.5446 26.775 59.5446 29.3077 57.9825 30.8698L26.8698 61.9825C25.3077 63.5446 22.7751 63.5446 21.213 61.9825L16.9703 57.7399ZM22.6272 53.4972C21.4556 52.3256 21.4556 50.4262 22.6272 49.2546C23.7988 48.083 25.6983 48.083 26.8698 49.2546C28.0414 50.4262 28.0414 52.3256 26.8698 53.4972C25.6983 54.6688 23.7988 54.6688 22.6272 53.4972ZM45.2546 26.6272C46.4262 25.4556 48.3257 25.4556 49.4972 26.6272C50.6688 27.7987 50.6688 29.6982 49.4972 30.8698C48.3257 32.0414 46.4262 32.0414 45.2546 30.8698C44.083 29.6982 44.083 27.7987 45.2546 26.6272Z"
            fill="currentColor"
          />
          <path
            d="M10 67.0732H74"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M43.7563 19.6408L15.6407 47.7564L11.4497 38.2087C10.1247 35.19 10.7871 31.6675 13.1182 29.3364L25.3363 17.1183C27.6674 14.7872 31.1899 14.1247 34.2086 15.4498L43.7563 19.6408Z"
            fill="#56CCF2"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M26.0737 62.6006L29.9608 66.4876C30.7418 67.2687 32.0081 67.2687 32.7892 66.4876L37.0318 62.245C37.8129 61.4639 37.8129 60.1976 37.0318 59.4166L33.2339 55.6186L26.8699 61.9826C26.6258 62.2268 26.3579 62.4328 26.0737 62.6006ZM51.6187 37.2339L55.4166 41.0318C56.1977 41.8128 57.464 41.8128 58.245 41.0318L62.4877 36.7891C63.2687 36.0081 63.2687 34.7418 62.4877 33.9607L58.6006 30.0737C58.4328 30.3578 58.2268 30.6257 57.9826 30.8699L51.6187 37.2339Z"
            fill="#828282"
          />
          <path
            d="M16.9703 57.7399C13.8461 54.6157 13.8461 49.5503 16.9703 46.4262L42.4262 20.9703C45.5504 17.8461 50.6157 17.8461 53.7399 20.9703L57.9825 25.213C59.5446 26.775 59.5446 29.3077 57.9825 30.8698L26.8698 61.9825C25.3077 63.5446 22.7751 63.5446 21.213 61.9825L16.9703 57.7399Z"
            fill="#EB5757"
          />
          <rect
            x="20.7686"
            y="51.6387"
            width="6"
            height="6"
            rx="3"
            transform="rotate(-45 20.7686 51.6387)"
            fill="#F2C94C"
          />
          <rect
            width="6"
            height="6"
            rx="3"
            transform="matrix(-0.707107 0.707107 0.707107 0.707107 47.6387 24.7686)"
            fill="#F2C94C"
          />
          <path
            d="M10 67.0732H74"
            stroke="#828282"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M41.7562 19.6407L13.6406 47.7564L9.44963 38.2087C8.12456 35.1899 8.78699 31.6675 11.1181 29.3363L23.3362 17.1183C25.6673 14.7871 29.1898 14.1247 32.2085 15.4498L41.7562 19.6407Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M24.0739 62.6008L27.9609 66.4879C28.742 67.2689 30.0083 67.2689 30.7893 66.4879L35.032 62.2452C35.813 61.4642 35.813 60.1978 35.032 59.4168L31.234 55.6189L24.8701 61.9828C24.6259 62.227 24.358 62.433 24.0739 62.6008Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M49.6188 37.2341L53.4168 41.032C54.1978 41.8131 55.4641 41.8131 56.2452 41.032L60.4878 36.7894C61.2689 36.0083 61.2689 34.742 60.4878 33.9609L56.6008 30.0739C56.4329 30.3581 56.227 30.6259 55.9828 30.8701L49.6188 37.2341Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M14.9706 57.7401C11.8464 54.6159 11.8464 49.5506 14.9706 46.4264L40.4264 20.9706C43.5506 17.8464 48.6159 17.8464 51.7401 20.9706L55.9828 25.2132C57.5448 26.7753 57.5449 29.308 55.9828 30.8701L24.8701 61.9828C23.308 63.5449 20.7753 63.5449 19.2132 61.9828L14.9706 57.7401Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M20.8898 53.7599C19.7182 52.5883 19.7182 50.6888 20.8898 49.5173C22.0614 48.3457 23.9609 48.3457 25.1325 49.5173C26.304 50.6888 26.304 52.5883 25.1325 53.7599C23.9609 54.9315 22.0614 54.9315 20.8898 53.7599Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M47.7599 26.8898C46.5883 25.7183 44.6888 25.7183 43.5172 26.8898C42.3457 28.0614 42.3457 29.9609 43.5172 31.1325C44.6888 32.3041 46.5883 32.3041 47.7599 31.1325C48.9314 29.9609 48.9314 28.0614 47.7599 26.8898Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M24.8701 61.9828L31.234 55.6189L35.032 59.4168C35.813 60.1978 35.813 61.4642 35.032 62.2452L30.7893 66.4879C30.0083 67.2689 28.742 67.2689 27.9609 66.4879L24.0739 62.6008C24.358 62.433 24.6259 62.227 24.8701 61.9828ZM24.8701 61.9828L55.9828 30.8701M24.8701 61.9828C23.308 63.5449 20.7753 63.5449 19.2132 61.9828L14.9706 57.7401C11.8464 54.6159 11.8464 49.5506 14.9706 46.4264L40.4264 20.9706C43.5506 17.8464 48.6159 17.8464 51.7401 20.9706L55.9828 25.2132C57.5449 26.7753 57.5449 29.308 55.9828 30.8701M55.9828 30.8701C56.227 30.626 56.4329 30.3581 56.6008 30.0739L60.4878 33.9609C61.2689 34.742 61.2689 36.0083 60.4878 36.7894L56.2452 41.032C55.4641 41.8131 54.1978 41.8131 53.4168 41.032L49.6188 37.2341L55.9828 30.8701ZM8 67.0733H72M41.7562 19.6407L13.6406 47.7564L9.44963 38.2087C8.12456 35.1899 8.78699 31.6675 11.1181 29.3363L23.3362 17.1183C25.6673 14.7871 29.1898 14.1247 32.2085 15.4498L41.7562 19.6407ZM25.1325 53.7599C23.9609 54.9315 22.0614 54.9315 20.8898 53.7599C19.7182 52.5883 19.7182 50.6888 20.8898 49.5173C22.0614 48.3457 23.9609 48.3457 25.1325 49.5173C26.304 50.6888 26.304 52.5883 25.1325 53.7599ZM47.7599 31.1325C48.9314 29.9609 48.9314 28.0614 47.7599 26.8898C46.5883 25.7183 44.6888 25.7183 43.5172 26.8898C42.3457 28.0614 42.3457 29.9609 43.5172 31.1325C44.6888 32.3041 46.5883 32.3041 47.7599 31.1325Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M19.4756 48.1031C17.523 50.0557 17.523 53.2215 19.4756 55.1742C21.4282 57.1268 24.5941 57.1268 26.5467 55.1742C28.4993 53.2215 28.4993 50.0557 26.5467 48.1031C24.5941 46.1505 21.4282 46.1505 19.4756 48.1031ZM22.304 52.3457C21.9135 51.9552 21.9135 51.3221 22.304 50.9315C22.6946 50.541 23.3277 50.541 23.7182 50.9315C24.1088 51.3221 24.1088 51.9552 23.7182 52.3457C23.3277 52.7363 22.6946 52.7363 22.304 52.3457Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M49.1741 25.4757C47.2215 23.5231 44.0556 23.5231 42.103 25.4757C40.1504 27.4283 40.1504 30.5941 42.103 32.5468C44.0556 34.4994 47.2215 34.4994 49.1741 32.5468C51.1267 30.5941 51.1267 27.4283 49.1741 25.4757ZM44.9314 28.3041C45.322 27.9136 45.9551 27.9136 46.3457 28.3041C46.7362 28.6946 46.7362 29.3278 46.3457 29.7183C45.9551 30.1089 45.322 30.1089 44.9314 29.7183C44.5409 29.3278 44.5409 28.6946 44.9314 28.3041Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M9.70392 27.9222C6.78999 30.8361 5.96196 35.2392 7.61829 39.0126L11.5302 47.9246C9.84428 51.6139 10.5197 56.1177 13.5563 59.1544L17.799 63.397C18.7189 64.317 19.8633 64.8758 21.0558 65.0733H8C6.89543 65.0733 6 65.9688 6 67.0733C6 68.1779 6.89543 69.0733 8 69.0733H29.3221C29.3575 69.0738 29.3928 69.0738 29.4281 69.0733H72C73.1046 69.0733 74 68.1779 74 67.0733C74 65.9688 73.1046 65.0733 72 65.0733H35.0323L36.4462 63.6595C38.0083 62.0974 38.0083 59.5647 36.4462 58.0026L34.0624 55.6189L49.6188 40.0625L52.0025 42.4463C53.5646 44.0084 56.0973 44.0084 57.6594 42.4463L61.902 38.2036C63.4641 36.6415 63.4641 34.1089 61.902 32.5468L58.9507 29.5954C59.4853 27.5937 58.9673 25.3694 57.397 23.7991L53.1543 19.5564C50.1176 16.5197 45.6137 15.8443 41.9243 17.5304L33.0124 13.6185C29.239 11.9622 24.8359 12.7902 21.922 15.7041L9.70392 27.9222ZM29.3755 65.0733L33.6178 60.8311L31.234 58.4473L26.9914 62.69L29.3755 65.0733ZM23.7179 65.0733L23.5954 64.9508C23.4078 65.0009 23.2182 65.0417 23.0274 65.0733H23.7179ZM38.2727 20.2959L14.2957 44.2729L11.281 37.4049C10.2872 35.1408 10.784 32.499 12.5323 30.7506L24.7504 18.5326C26.4988 16.7842 29.1406 16.2874 31.4046 17.2812L38.2727 20.2959ZM16.3848 56.326C14.0416 53.9828 14.0416 50.1838 16.3848 47.8407L41.8434 22.382C44.1868 20.0417 47.9837 20.0427 50.3259 22.3849L54.5685 26.6275C55.3496 27.4085 55.3496 28.6749 54.5685 29.4559L23.4558 60.5686C22.6748 61.3497 21.4085 61.3497 20.6274 60.5686L16.3848 56.326ZM54.831 39.6178L52.4473 37.2341L56.6899 32.9915L59.0736 35.3752L54.831 39.6178Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreCarTilt = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreCarTilt.displayName = 'CoreCarTilt'

export default CoreCarTilt
