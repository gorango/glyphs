
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M34.7691 12.8002C37.8881 10.5341 42.1116 10.5341 45.2307 12.8002C48.3498 15.0663 49.6549 19.0831 48.4635 22.7498C47.2721 26.4164 43.8553 28.899 39.9999 28.899C36.1445 28.899 32.7276 26.4164 31.5363 22.7498C30.3449 19.0831 31.65 15.0663 34.7691 12.8002Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M51.0126 43V37.0005C51.0126 36.8126 51.1063 36.637 51.2624 36.5325L60.7833 30.1546C63.0775 28.6177 63.6915 25.512 62.1546 23.2178C60.6177 20.9236 57.512 20.3096 55.2178 21.8465L45.3069 28.4856C44.776 28.8412 44.1515 29.031 43.5126 29.031H36.5403C35.8977 29.031 35.2696 28.8408 34.735 28.4842L24.775 21.8409C22.4777 20.3086 19.3732 20.9288 17.8409 23.2261C16.3086 25.5234 16.9288 28.6279 19.2261 30.1601L28.7955 36.5429C28.9485 36.6449 29.0403 36.8167 29.0403 37.0005V43"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M41.7118 55C43.1855 55 44.6077 54.4576 45.7071 53.4763L49.9954 49.6488C51.2708 48.5104 52 46.882 52 45.1725V43.6942C52 43.3108 51.6892 43 51.3058 43L28.6942 43C28.3108 43 28 43.3108 28 43.6942L28 45.1725C28 46.882 28.7292 48.5104 30.0046 49.6488L34.2929 53.4763C35.3923 54.4576 36.8145 55 38.2882 55L41.7118 55Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M28.4788 47.5216L21.5597 54.4407C19.8106 56.1898 19.6034 58.9551 21.0723 60.9454L27.0173 69.0004C28.6571 71.2222 31.7876 71.694 34.0094 70.0542C36.2312 68.4143 36.703 65.2839 35.0632 63.0621L32.0419 58.9684C31.8301 58.6814 31.8599 58.2826 32.1122 58.0304L35.7199 54.4227M44.3158 54.4056L47.9514 58.0412L47.9623 58.052C48.2109 58.2975 48.2407 58.6885 48.0323 58.9689L44.9998 63.0482C43.3523 65.2644 43.8134 68.3965 46.0295 70.0439C48.2457 71.6914 51.3777 71.2304 53.0252 69.0142L59.0132 60.9592C60.4998 58.9594 60.287 56.1702 58.5143 54.4191L55.0009 50.9485L51.5367 47.4844"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M45.2289 14.527C42.1098 12.2608 37.8863 12.2608 34.7672 14.527C31.6482 16.7931 30.343 20.8099 31.5344 24.4766C32.7258 28.1432 36.1427 30.6257 39.998 30.6257C43.8534 30.6257 47.2703 28.1432 48.4617 24.4766C49.653 20.8099 48.3479 16.7931 45.2289 14.527ZM60.7813 31.8812C63.0756 30.3443 63.6895 27.2386 62.1527 24.9444C60.6158 22.6501 57.5101 22.0361 55.2158 23.573L45.3049 30.2122C44.7741 30.5678 44.1495 30.7576 43.5106 30.7576H36.5384C35.8958 30.7576 35.2676 30.5673 34.733 30.2108L24.773 23.5675C22.4757 22.0352 19.3712 22.6553 17.839 24.9526C16.3067 27.2499 16.9268 30.3544 19.2241 31.8867L28.7935 38.2695C28.9465 38.3715 29.0384 38.5432 29.0384 38.7271V44.7266L51.0106 44.7266V38.7271C51.0106 38.5392 51.1043 38.3636 51.2604 38.259L60.7813 31.8812ZM25.5028 52.2221L28.4769 49.248C28.819 50.052 29.3363 50.7805 30.0027 51.3753L34.2909 55.2028C34.7224 55.5879 35.2035 55.9054 35.718 56.1491L32.5739 59.2931L32.1103 59.7568C31.858 60.009 31.8282 60.4078 32.04 60.6948L35.0613 64.7885C36.7011 67.0103 36.2293 70.1407 34.0075 71.7806C31.7857 73.4204 28.6552 72.9486 27.0154 70.7268L21.0704 62.6718C19.6015 60.6815 19.8087 57.9162 21.5578 56.1671L25.0392 52.6857L25.5028 52.2221ZM47.4751 59.2931L44.3139 56.132C44.8149 55.8907 45.2837 55.579 45.7052 55.2028L49.9934 51.3753C50.6701 50.7714 51.193 50.0295 51.5348 49.2108L54.5461 52.2221L54.999 52.6749L58.5124 56.1455C60.2851 57.8966 60.4979 60.6858 59.0113 62.6856L53.0233 70.7406C51.3758 72.9567 48.2438 73.4178 46.0276 71.7703C43.8115 70.1228 43.3504 66.9908 44.9979 64.7746L48.0304 60.6953C48.2388 60.4149 48.209 60.0239 47.9604 59.7784L47.9495 59.7676L47.9387 59.7568L47.4751 59.2931Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M62.1546 23.2178C63.6915 25.512 63.0775 28.6177 60.7833 30.1546L51.2624 36.5325C51.1063 36.637 51.0126 36.8126 51.0126 37.0005V43L29.0403 43L29.0403 37.0005C29.0403 36.8167 28.9485 36.6449 28.7955 36.5429L19.2261 30.1601C16.9288 28.6279 16.3086 25.5234 17.8409 23.2261C19.3732 20.9288 22.4777 20.3086 24.775 21.8409L34.735 28.4842C35.2696 28.8408 35.8977 29.031 36.5403 29.031H43.5126C44.1515 29.031 44.776 28.8412 45.3069 28.4856L55.2178 21.8465C57.512 20.3096 60.6177 20.9236 62.1546 23.2178ZM28.4789 47.5214L25.5048 50.4955L25.0412 50.9591L21.5598 54.4405C19.8106 56.1897 19.6034 58.9549 21.0724 60.9452L27.0174 69.0002C28.6572 71.222 31.7877 71.6938 34.0095 70.054C36.2313 68.4142 36.7031 65.2837 35.0633 63.0619L32.0419 58.9682C31.8301 58.6812 31.86 58.2824 32.1122 58.0302L32.5759 57.5666L35.7199 54.4225C35.2055 54.1789 34.7243 53.8614 34.2929 53.4763L30.0046 49.6488C29.3383 49.054 28.821 48.3254 28.4789 47.5214ZM44.3159 54.4054L47.477 57.5666L47.9407 58.0302L47.9515 58.041L47.9624 58.0518C48.2109 58.2973 48.2408 58.6884 48.0324 58.9688L44.9999 63.048C43.3524 65.2642 43.8134 68.3963 46.0296 70.0437C48.2457 71.6912 51.3778 71.2302 53.0253 69.014L59.0132 60.959C60.4999 58.9592 60.2871 56.1701 58.5143 54.4189L55.0009 50.9483L54.5481 50.4955L51.5368 47.4842C51.1949 48.3029 50.672 49.0448 49.9954 49.6488L45.7071 53.4763C45.2857 53.8524 44.8169 54.1641 44.3159 54.4054Z"
            fill="#F2C94C"
          />
          <path
            d="M34.7692 12.8004C37.8882 10.5343 42.1118 10.5343 45.2308 12.8004C48.3499 15.0665 49.655 19.0833 48.4636 22.75C47.2723 26.4167 43.8554 28.8992 40 28.8992C36.1446 28.8992 32.7277 26.4167 31.5364 22.75C30.345 19.0833 31.6501 15.0665 34.7692 12.8004Z"
            fill="#F2994A"
          />
          <path
            d="M41.7118 55C43.1855 55 44.6077 54.4576 45.7071 53.4763L49.9954 49.6488C51.2708 48.5104 52 46.882 52 45.1725L52 43.6942C52 43.3108 51.6892 43 51.3058 43L28.6942 43C28.3108 43 28 43.3108 28 43.6942L28 45.1725C28 46.882 28.7292 48.5104 30.0046 49.6488L34.2929 53.4763C35.3923 54.4576 36.8145 55 38.2882 55L41.7118 55Z"
            fill="#F2F2F2"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M62.1546 23.2176C63.6915 25.5118 63.0775 28.6175 60.7833 30.1544L51.2624 36.5322C51.1063 36.6368 51.0126 36.8124 51.0126 37.0003V42.9998L29.0403 42.9998V37.0003C29.0403 36.8164 28.9485 36.6447 28.7955 36.5427L19.2261 30.1599C16.9288 28.6276 16.3086 25.5231 17.8409 23.2259C19.3732 20.9286 22.4777 20.3084 24.775 21.8407L34.735 28.484C35.2696 28.8405 35.8977 29.0308 36.5403 29.0308H43.5126C44.1515 29.0308 44.776 28.841 45.3069 28.4854L55.2178 21.8462C57.512 20.3094 60.6177 20.9233 62.1546 23.2176Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M28.4789 47.5212L21.5598 54.4403C19.8106 56.1894 19.6034 58.9547 21.0724 60.945L27.0174 69C28.6572 71.2218 31.7877 71.6936 34.0095 70.0538C36.2313 68.4139 36.7031 65.2835 35.0633 63.0617L32.0419 58.968C31.8301 58.681 31.86 58.2822 32.1122 58.03L35.7199 54.4223C35.2055 54.1786 34.7243 53.8611 34.2929 53.4761L30.0046 49.6485C29.3383 49.0538 28.821 48.3252 28.4789 47.5212Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M44.3159 54.4052L47.9515 58.0408L47.9624 58.0516C48.2109 58.2971 48.2408 58.6881 48.0324 58.9685L44.9999 63.0478C43.3524 65.264 43.8134 68.3961 46.0296 70.0435C48.2457 71.691 51.3778 71.23 53.0253 69.0138L59.0132 60.9588C60.4999 58.959 60.2871 56.1698 58.5143 54.4187L55.0009 50.9481L51.5368 47.484C51.1949 48.3027 50.672 49.0446 49.9954 49.6485L45.7071 53.4761C45.2857 53.8522 44.8169 54.1639 44.3159 54.4052Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M34.7692 12.8002C37.8882 10.5341 42.1118 10.5341 45.2308 12.8002C48.3499 15.0663 49.655 19.0831 48.4636 22.7498C47.2723 26.4164 43.8554 28.899 40 28.899C36.1446 28.899 32.7277 26.4164 31.5364 22.7498C30.345 19.0831 31.6501 15.0663 34.7692 12.8002Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M41.7118 54.9998C43.1855 54.9998 44.6077 54.4574 45.7071 53.4761L49.9954 49.6485C51.2708 48.5102 52 46.8818 52 45.1723V43.694C52 43.3106 51.6892 42.9998 51.3058 42.9998H28.6942C28.3108 42.9998 28 43.3106 28 43.694V45.1723C28 46.8818 28.7292 48.5102 30.0046 49.6485L34.2929 53.4761C35.3923 54.4574 36.8145 54.9998 38.2882 54.9998H41.7118Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M34.2929 53.4761C34.7243 53.8611 35.2055 54.1786 35.7199 54.4223L32.1122 58.03C31.86 58.2822 31.8301 58.681 32.0419 58.968L35.0633 63.0617C36.7031 65.2835 36.2313 68.4139 34.0095 70.0538C31.7877 71.6936 28.6572 71.2218 27.0174 69L21.0724 60.945C19.6034 58.9547 19.8106 56.1894 21.5598 54.4403L28.4789 47.5212C28.821 48.3252 29.3383 49.0538 30.0046 49.6485M34.2929 53.4761L30.0046 49.6485M34.2929 53.4761C35.3923 54.4574 36.8145 54.9998 38.2882 54.9998H41.7118C43.1855 54.9998 44.6077 54.4574 45.7071 53.4761M30.0046 49.6485C28.7292 48.5102 28 46.8818 28 45.1723V43.694C28 43.3106 28.3108 42.9998 28.6942 42.9998H51.3058C51.6892 42.9998 52 43.3106 52 43.694V45.1723C52 46.8818 51.2708 48.5102 49.9954 49.6485M49.9954 49.6485C50.672 49.0446 51.1949 48.3027 51.5368 47.484L55.0009 50.9481L58.5143 54.4187C60.2871 56.1698 60.4999 58.959 59.0132 60.9588L53.0253 69.0138C51.3778 71.23 48.2457 71.691 46.0296 70.0435C43.8134 68.3961 43.3524 65.264 44.9999 63.0478L48.0324 58.9685C48.2408 58.6881 48.2109 58.2971 47.9624 58.0516L47.9515 58.0408L44.3159 54.4052C44.8169 54.1639 45.2857 53.8522 45.7071 53.4761M49.9954 49.6485L45.7071 53.4761M60.7833 30.1544C63.0775 28.6175 63.6915 25.5118 62.1546 23.2176C60.6177 20.9233 57.512 20.3094 55.2178 21.8462L45.3069 28.4854C44.776 28.841 44.1515 29.0308 43.5126 29.0308H36.5403C35.8977 29.0308 35.2696 28.8405 34.735 28.484L24.775 21.8407C22.4777 20.3084 19.3732 20.9286 17.8409 23.2259C16.3086 25.5231 16.9288 28.6276 19.2261 30.1599L28.7955 36.5427C28.9485 36.6447 29.0403 36.8164 29.0403 37.0003V42.9998L51.0126 42.9998V37.0003C51.0126 36.8124 51.1063 36.6368 51.2624 36.5322L60.7833 30.1544ZM31.5364 22.7498C30.345 19.0831 31.6501 15.0663 34.7692 12.8002C37.8882 10.5341 42.1118 10.5341 45.2308 12.8002C48.3499 15.0663 49.655 19.0831 48.4636 22.7498C47.2723 26.4164 43.8554 28.899 40 28.899C36.1446 28.899 32.7277 26.4164 31.5364 22.7498Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M46.4063 11.1821C42.5863 8.40673 37.4136 8.40673 33.5936 11.1821C30.0131 13.7835 28.3843 18.2685 29.3956 22.5186L25.8847 20.1768C22.6685 18.0316 18.3222 18.8999 16.177 22.1161C14.0318 25.3323 14.9001 29.6786 18.1163 31.8238L27.0403 37.7761V41.567C26.4072 42.06 26 42.8294 26 43.694L26 45.1723C26 45.7819 26.0695 46.3839 26.204 46.9676L20.1455 53.0261C17.6967 55.4749 17.4067 59.3462 19.4632 62.1326L25.4082 70.1876C27.7039 73.2982 32.0866 73.9587 35.1971 71.6629C38.3077 69.3672 38.9682 64.9845 36.6724 61.874L34.3047 58.6659L36.238 56.7326C36.902 56.9087 37.5907 56.9998 38.2882 56.9998H41.7117C42.4238 56.9998 43.1268 56.9048 43.8037 56.7214L45.7579 58.6757L43.3947 61.8546C41.0883 64.9572 41.7337 69.3422 44.8363 71.6486C47.939 73.955 52.3239 73.3096 54.6303 70.207L60.6183 62.152C62.6996 59.3523 62.4017 55.4474 59.9198 52.9958L56.4151 49.5339L56.4064 49.5252L53.8058 46.9245C53.9338 46.3543 54 45.7669 54 45.1723V43.694C54 42.8537 53.6153 42.1033 53.0125 41.6092V37.7671L61.8963 31.816C65.1083 29.6644 65.9678 25.3164 63.8162 22.1045C61.6646 18.8925 57.3166 18.033 54.1047 20.1846L50.6013 22.5314C51.6189 18.2776 49.9904 13.7861 46.4063 11.1821ZM31.0403 40.9998H49.0125V37.0003C49.0125 36.5288 49.1422 36.0744 49.3776 35.6818L49.3962 35.6513C49.5859 35.3447 49.8408 35.0772 50.1493 34.8706L59.6701 28.4928C61.0467 27.5706 61.4151 25.7072 60.4929 24.3307C59.5708 22.9541 57.7074 22.5857 56.3309 23.5079L46.4199 30.147C45.5598 30.7232 44.5478 31.0308 43.5125 31.0308H36.5403C35.5027 31.0308 34.4884 30.7236 33.6252 30.1478L23.6652 23.5045C22.2868 22.5852 20.4241 22.9573 19.5047 24.3356C18.5854 25.714 18.9575 27.5767 20.3358 28.4961L29.9052 34.8788C30.6144 35.3518 31.0403 36.1479 31.0403 37.0003V40.9998ZM22.974 55.8545C21.9245 56.904 21.8002 58.5631 22.6815 59.7573L28.6265 67.8123C29.6104 69.1454 31.4887 69.4285 32.8218 68.4446C34.1549 67.4607 34.438 65.5824 33.4541 64.2493L30.4327 60.1557C29.6333 59.0725 29.7461 57.5677 30.698 56.6158L32.6359 54.6779L28.6728 51.1406C28.4988 50.9853 28.3324 50.8231 28.1738 50.6546L22.974 55.8545ZM36.576 52.6148C37.107 52.8663 37.6912 52.9998 38.2882 52.9998H41.7117C42.3176 52.9998 42.9105 52.8623 43.4478 52.6034C43.7818 52.4425 44.0943 52.2348 44.3753 51.984L48.6635 48.1564C49.1146 47.7538 49.4632 47.2594 49.6912 46.7134C49.8928 46.2304 50 45.7073 50 45.1723V44.9998H30V45.1723C30 45.7165 30.1108 46.2483 30.3192 46.7382C30.5473 47.2743 30.8921 47.7599 31.3364 48.1564L35.6246 51.984C35.9123 52.2407 36.233 52.4523 36.576 52.6148ZM49.3548 56.6158L49.3569 56.6179L49.3657 56.6266L49.3679 56.6287C50.3255 57.5747 50.4405 59.0814 49.6374 60.1617L46.6049 64.241C45.6164 65.5707 45.893 67.45 47.2227 68.4384C48.5524 69.4269 50.4317 69.1503 51.4201 67.8206L57.4081 59.7656C58.3001 58.5657 58.1724 56.8922 57.1088 55.8415L53.5867 52.3624L51.8517 50.6273C51.6855 50.8056 51.5105 50.9769 51.3271 51.1406L47.392 54.653L49.3548 56.6158ZM44.0552 14.4182C41.6371 12.6614 38.3628 12.6614 35.9447 14.4182C33.5266 16.175 32.5148 19.2891 33.4385 22.1317C34.3621 24.9744 37.0111 26.899 40 26.899C42.9889 26.899 45.6379 24.9744 46.5615 22.1317C47.4851 19.2891 46.4733 16.175 44.0552 14.4182Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreBaby = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreBaby.displayName = 'CoreBaby'

export default CoreBaby
