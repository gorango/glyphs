
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M8.8125 66.375C8.8125 66.6511 9.03636 66.875 9.3125 66.875H46.3938C52.695 66.875 58.8086 64.7305 63.729 60.7941L69.6551 56.0533C71.2723 54.7595 71.5345 52.3996 70.2408 50.7824C68.947 49.1652 66.5871 48.903 64.9699 50.1967L59.0438 54.9376C58.2404 55.5804 57.2235 55.875 56.1945 55.875H34.8124C34.6744 55.875 34.5625 55.7631 34.5625 55.6251C34.5625 55.4896 34.6705 55.3787 34.806 55.3768C34.897 55.3756 34.988 55.375 35.0791 55.375H44.8125C46.8836 55.375 48.5625 53.6961 48.5625 51.625C48.5625 49.5539 46.8836 47.875 44.8125 47.875H35.0791C30.4929 47.875 25.9925 49.0114 21.974 51.1644C20.6071 51.8968 19.1042 52.375 17.5535 52.375H9.3125C9.03636 52.375 8.8125 52.5989 8.8125 52.875V66.375Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M41.8127 19.1355C41.8127 19.1355 41.8127 19.1355 41.8127 19.1355ZM41.8127 19.1355L43.3279 17.6034C44.7345 16.1813 46.6421 15.3823 48.6312 15.3823C50.6204 15.3823 52.528 16.1813 53.9345 17.6034C55.3411 19.0256 56.1312 20.9544 56.1312 22.9657C56.1312 24.9769 55.3411 26.9057 53.9345 28.3279L41.8127 40.5844M41.8127 19.1355L40.2974 17.6034C38.8909 16.1813 36.9833 15.3823 34.9941 15.3823C33.005 15.3823 31.0974 16.1813 29.6908 17.6034C28.2843 19.0256 27.4941 20.9544 27.4941 22.9657C27.4941 24.9769 28.2843 26.9057 29.6908 28.3279L41.8127 40.5844M41.8127 40.5844C41.8127 40.5844 41.8127 40.5844 41.8127 40.5844Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M8.8125 66.375C8.8125 66.6511 9.03636 66.875 9.3125 66.875H46.3938C52.695 66.875 58.8086 64.7305 63.729 60.7941L69.6551 56.0533C71.2723 54.7595 71.5345 52.3996 70.2408 50.7824C68.947 49.1652 66.5871 48.903 64.9699 50.1967L59.0438 54.9376C58.2404 55.5804 57.2235 55.875 56.1945 55.875H55.3125L34.8124 55.875C34.6744 55.875 34.5625 55.7631 34.5625 55.6251C34.5625 55.4896 34.6705 55.3787 34.806 55.3768C34.897 55.3756 34.988 55.375 35.0791 55.375H44.8125C46.8836 55.375 48.5625 53.6961 48.5625 51.625C48.5625 49.5539 46.8836 47.875 44.8125 47.875H35.0791C30.4929 47.875 25.9925 49.0114 21.974 51.1644C20.6071 51.8968 19.1042 52.375 17.5535 52.375H9.3125C9.03636 52.375 8.8125 52.5989 8.8125 52.875L8.8125 66.375Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M29.6908 17.6034C28.2843 19.0256 27.4941 20.9544 27.4941 22.9657C27.4941 24.9769 28.2843 26.9057 29.6908 28.3279L41.8127 40.5844C41.8127 40.5844 41.8127 40.5844 41.8127 40.5844C41.8127 40.5844 41.8127 40.5844 41.8127 40.5844C41.8127 40.5844 41.8127 40.5844 41.8127 40.5844C41.8127 40.5844 41.8127 40.5844 41.8127 40.5844L53.9345 28.3279C55.3411 26.9057 56.1312 24.9769 56.1312 22.9657C56.1312 20.9544 55.3411 19.0256 53.9345 17.6034C52.528 16.1813 50.6204 15.3823 48.6312 15.3823C46.6421 15.3823 44.7345 16.1813 43.3279 17.6034L42.1829 18.7612L41.8127 19.1355C41.8127 19.1355 41.8127 19.1355 41.8127 19.1355C41.8127 19.1355 41.8127 19.1355 41.8127 19.1355L41.4425 18.7612L40.2974 17.6034C38.8909 16.1813 36.9833 15.3823 34.9941 15.3823C33.005 15.3823 31.0974 16.1813 29.6908 17.6034Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M8.8125 66.375C8.8125 66.6511 9.03636 66.875 9.3125 66.875H46.3938C52.695 66.875 58.8086 64.7305 63.729 60.7941L69.6551 56.0533C71.2723 54.7595 71.5345 52.3996 70.2408 50.7824C68.947 49.1652 66.5871 48.903 64.9699 50.1967L59.0438 54.9376C58.2404 55.5804 57.2235 55.875 56.1945 55.875H55.3125L34.8124 55.875C34.6744 55.875 34.5625 55.7631 34.5625 55.6251C34.5625 55.4896 34.6705 55.3787 34.806 55.3768C34.897 55.3756 34.988 55.375 35.0791 55.375H44.8125C46.8836 55.375 48.5625 53.6961 48.5625 51.625C48.5625 49.5539 46.8836 47.875 44.8125 47.875H35.0791C30.4929 47.875 25.9925 49.0114 21.974 51.1644C20.6071 51.8968 19.1042 52.375 17.5535 52.375H9.3125C9.03636 52.375 8.8125 52.5989 8.8125 52.875L8.8125 66.375Z"
            fill="#F2C94C"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M29.6908 17.6034C28.2842 19.0256 27.4941 20.9544 27.4941 22.9657C27.4941 24.9769 28.2842 26.9057 29.6908 28.3279L41.8126 40.5844C41.8126 40.5844 41.8126 40.5844 41.8126 40.5844C41.8126 40.5844 41.8126 40.5844 41.8126 40.5844C41.8126 40.5844 41.8126 40.5844 41.8126 40.5844C41.8126 40.5844 41.8127 40.5844 41.8127 40.5844L53.9345 28.3279C55.341 26.9057 56.1312 24.9769 56.1312 22.9657C56.1312 20.9544 55.341 19.0256 53.9345 17.6034C52.528 16.1813 50.6203 15.3823 48.6312 15.3823C46.642 15.3823 44.7344 16.1813 43.3279 17.6034L42.1828 18.7612L41.8126 19.1355C41.8126 19.1355 41.8126 19.1355 41.8126 19.1355C41.8126 19.1355 41.8126 19.1355 41.8126 19.1355L41.4424 18.7612L40.2974 17.6034C38.8908 16.1813 36.9832 15.3823 34.9941 15.3823C33.0049 15.3823 31.0973 16.1813 29.6908 17.6034Z"
            fill="#EB5757"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M8.8125 66.3752C8.8125 66.6514 9.03636 66.8752 9.3125 66.8752H46.3938C52.695 66.8752 58.8086 64.7307 63.729 60.7943L69.6551 56.0535C71.2723 54.7597 71.5345 52.3998 70.2408 50.7826C68.947 49.1654 66.5871 48.9032 64.9699 50.197L59.0438 54.9378C58.2404 55.5806 57.2235 55.8752 56.1945 55.8752H34.8124C34.6744 55.8752 34.5625 55.7634 34.5625 55.6254C34.5625 55.4899 34.6705 55.3789 34.806 55.3771C34.897 55.3758 34.988 55.3752 35.0791 55.3752H44.8125C46.8836 55.3752 48.5625 53.6963 48.5625 51.6252C48.5625 49.5542 46.8836 47.8752 44.8125 47.8752H35.0791C30.4929 47.8752 25.9925 49.0117 21.974 51.1646C20.6071 51.897 19.1042 52.3752 17.5535 52.3752H9.3125C9.03636 52.3752 8.8125 52.5991 8.8125 52.8752V66.3752Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M29.6907 17.6034C28.2842 19.0256 27.494 20.9544 27.494 22.9657C27.494 24.9769 28.2842 26.9057 29.6907 28.3279L41.8126 40.5844L53.9344 28.3279C55.3409 26.9057 56.1311 24.9769 56.1311 22.9657C56.1311 20.9544 55.3409 19.0256 53.9344 17.6034C52.5279 16.1813 50.6202 15.3823 48.6311 15.3823C46.642 15.3823 44.7343 16.1813 43.3278 17.6034L41.8126 19.1355L40.2973 17.6034C38.8908 16.1813 36.9831 15.3823 34.994 15.3823C33.0049 15.3823 31.0972 16.1813 29.6907 17.6034Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M41.8126 19.1355C41.8126 19.1355 41.8126 19.1355 41.8126 19.1355ZM41.8126 19.1355L43.3278 17.6034C44.7343 16.1813 46.642 15.3823 48.6311 15.3823C50.6202 15.3823 52.5279 16.1813 53.9344 17.6034C55.3409 19.0256 56.1311 20.9544 56.1311 22.9657C56.1311 24.9769 55.3409 26.9057 53.9344 28.3279L41.8126 40.5844M41.8126 19.1355L40.2973 17.6034C38.8908 16.1813 36.9831 15.3823 34.994 15.3823C33.0049 15.3823 31.0972 16.1813 29.6907 17.6034C28.2842 19.0256 27.494 20.9544 27.494 22.9657C27.494 24.9769 28.2842 26.9057 29.6907 28.3279L41.8126 40.5844M41.8126 40.5844C41.8126 40.5844 41.8126 40.5844 41.8126 40.5844ZM9.3125 66.8752H46.3938C52.695 66.8752 58.8086 64.7307 63.729 60.7943L69.6551 56.0535C71.2723 54.7597 71.5345 52.3998 70.2408 50.7826C68.947 49.1654 66.5871 48.9032 64.9699 50.197L59.0438 54.9378C58.2404 55.5806 57.2235 55.8752 56.1945 55.8752H34.8124C34.6744 55.8752 34.5625 55.7634 34.5625 55.6254C34.5625 55.4899 34.6705 55.3789 34.806 55.3771C34.897 55.3758 34.988 55.3752 35.0791 55.3752H44.8125C46.8836 55.3752 48.5625 53.6963 48.5625 51.6252C48.5625 49.5542 46.8836 47.8752 44.8125 47.8752H35.0791C30.4929 47.8752 25.9925 49.0117 21.974 51.1646C20.6071 51.897 19.1042 52.3752 17.5535 52.3752H9.3125C9.03636 52.3752 8.8125 52.5991 8.8125 52.8752V66.3752C8.8125 66.6514 9.03636 66.8752 9.3125 66.8752Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M41.9058 16.1971C43.6856 14.3974 46.1044 13.3823 48.6311 13.3823C51.1578 13.3823 53.5765 14.3974 55.3564 16.1971C57.1355 17.9959 58.1311 20.4311 58.1311 22.9657C58.1311 23.142 58.1263 23.3179 58.1167 23.4931C58.0427 25.9231 57.0582 28.2428 55.3498 29.9747L43.9933 41.4878C42.7919 42.7057 40.8327 42.7057 39.6313 41.4878L28.2748 29.9747C26.562 28.2383 25.5768 25.911 25.5074 23.4742C25.4985 23.3052 25.494 23.1357 25.494 22.9657C25.494 20.4311 26.4896 17.9959 28.2687 16.1971C30.0485 14.3974 32.4673 13.3823 34.994 13.3823C37.5207 13.3823 39.9394 14.3974 41.7193 16.197C41.7193 16.197 41.7193 16.197 41.7193 16.1971L41.8125 16.2913L41.9058 16.1971ZM41.8126 37.7402L31.1127 26.9215C30.1593 25.9575 29.5878 24.6728 29.5046 23.312C29.5038 23.2738 29.5034 23.2357 29.5034 23.1974C29.5034 21.7039 30.0889 20.277 31.1225 19.2292C32.1552 18.1822 33.5499 17.5992 34.9984 17.5992C36.4468 17.5992 37.8416 18.1822 38.8742 19.2292L40.0185 20.3892C41.006 21.3903 42.6186 21.3903 43.6061 20.3892L44.7504 19.2292C45.7831 18.1822 47.1778 17.5992 48.6263 17.5992C50.0747 17.5992 51.4695 18.1822 52.5021 19.2292C53.5357 20.277 54.1212 21.7039 54.1212 23.1974C54.1212 23.2394 54.1207 23.2813 54.1198 23.3231C54.0342 24.6798 53.4632 25.9601 52.5124 26.9215L41.8126 37.7402ZM35.0791 49.8752C30.8234 49.8752 26.6474 50.9297 22.9185 52.9276C21.3431 53.7717 19.5157 54.3752 17.5535 54.3752H10.8125V64.8752H46.3938C52.2408 64.8752 57.9138 62.8852 62.4797 59.2326L68.4057 54.4917C69.1604 53.888 69.2828 52.7867 68.679 52.032C68.0753 51.2773 66.974 51.1549 66.2193 51.7587L60.2932 56.4995C59.074 57.4749 57.5927 57.8752 56.1945 57.8752H34.8124C33.5698 57.8752 32.5625 56.868 32.5625 55.6254C32.5625 54.4115 33.534 53.394 34.779 53.3772C34.879 53.3759 34.9791 53.3752 35.0791 53.3752H44.8125C45.779 53.3752 46.5625 52.5917 46.5625 51.6252C46.5625 50.6587 45.779 49.8752 44.8125 49.8752H35.0791ZM21.0295 49.4017C25.3376 47.0936 30.1623 45.8752 35.0791 45.8752H44.8125C47.9881 45.8752 50.5625 48.4496 50.5625 51.6252C50.5625 52.4237 50.3997 53.1841 50.1056 53.8752H56.1945C56.8543 53.8752 57.4067 53.6863 57.7944 53.3761L63.7205 48.6352C66.2003 46.6514 69.8187 47.0535 71.8025 49.5332C73.7863 52.013 73.3843 55.6314 70.9045 57.6152L64.9784 62.3561C59.7034 66.5761 53.1491 68.8752 46.3938 68.8752H9.3125C7.93179 68.8752 6.8125 67.7559 6.8125 66.3752V52.8752C6.8125 51.4945 7.93179 50.3752 9.3125 50.3752H17.5535C18.6928 50.3752 19.8711 50.0224 21.0295 49.4017Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreHandHoldingHeart = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreHandHoldingHeart.displayName = 'CoreHandHoldingHeart'

export default CoreHandHoldingHeart
