
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M39.7279 23.9285L36.8995 21.1C34.274 18.4745 30.713 16.9995 27 16.9995C23.287 16.9995 19.726 18.4745 17.1005 21.1C14.475 23.7255 13 27.2865 13 30.9995C13 34.7125 14.475 38.2735 17.1005 40.899L31.1813 54.9798C31.2016 55.0003 31.222 55.0208 31.2425 55.0413L38.3136 62.1124C38.7041 62.5029 39.216 62.6982 39.7279 62.6982"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M39.728 23.9283L42.5563 21.1C45.1818 18.4745 48.7428 16.9995 52.4558 16.9995C56.1688 16.9995 59.7298 18.4745 62.3553 21.1C64.9808 23.7255 66.4558 27.2865 66.4558 30.9995C66.4558 34.7125 64.9808 38.2735 62.3553 40.899L41.1421 62.1122C40.7516 62.5027 40.2398 62.698 39.728 62.698"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M17.373 20.8056C14.7475 23.4311 13.2725 26.992 13.2725 30.7051C13.2725 34.4181 14.7475 37.9791 17.373 40.6046L31.5151 54.7467L38.5862 61.8178C39.3672 62.5988 40.6335 62.5988 41.4146 61.8178L48.4857 54.7467L62.6278 40.6046C65.2533 37.9791 66.7283 34.4181 66.7283 30.7051C66.7283 26.992 65.2533 23.4311 62.6278 20.8056C60.0023 18.1801 56.4413 16.7051 52.7283 16.7051C49.0153 16.7051 45.4543 18.1801 42.8288 20.8056L40.6914 22.943C40.3098 23.3246 39.691 23.3246 39.3094 22.943L37.172 20.8056C34.5464 18.1801 30.9855 16.7051 27.2725 16.7051C23.5594 16.7051 19.9985 18.1801 17.373 20.8056Z"
            fill="currentColor"
          />
          <path
            d="M13.2725 30.7051H11.2725H13.2725ZM17.373 40.6046L18.7872 39.1904L17.373 40.6046ZM31.5151 54.7467L30.1009 56.1609L31.5151 54.7467ZM48.4857 54.7467L47.0714 53.3325L48.4857 54.7467ZM27.2725 16.7051L27.2725 14.7051H27.2725V16.7051ZM38.5862 61.8178L40.0004 60.4036L38.5862 61.8178ZM41.4146 61.8178L40.0004 60.4036L41.4146 61.8178ZM15.9588 19.3914C12.9582 22.392 11.2725 26.4616 11.2725 30.7051H15.2725C15.2725 27.5225 16.5367 24.4702 18.7872 22.2198L15.9588 19.3914ZM11.2725 30.7051C11.2725 34.9485 12.9582 39.0182 15.9588 42.0188L18.7872 39.1904C16.5367 36.9399 15.2725 33.8877 15.2725 30.7051H11.2725ZM15.9588 42.0188L30.1009 56.1609L32.9293 53.3325L18.7872 39.1904L15.9588 42.0188ZM30.1009 56.1609L37.172 63.232L40.0004 60.4036L32.9293 53.3325L30.1009 56.1609ZM42.8288 63.232L49.8999 56.1609L47.0714 53.3325L40.0004 60.4036L42.8288 63.232ZM49.8999 56.1609L64.042 42.0188L61.2136 39.1904L47.0714 53.3325L49.8999 56.1609ZM64.042 42.0188C67.0426 39.0182 68.7283 34.9485 68.7283 30.7051H64.7283C64.7283 33.8877 63.464 36.9399 61.2136 39.1904L64.042 42.0188ZM68.7283 30.7051C68.7283 26.4616 67.0426 22.392 64.042 19.3914L61.2136 22.2198C63.464 24.4702 64.7283 27.5225 64.7283 30.7051H68.7283ZM64.042 19.3914C61.0414 16.3908 56.9718 14.7051 52.7283 14.7051V18.7051C55.9109 18.7051 58.9631 19.9694 61.2136 22.2198L64.042 19.3914ZM52.7283 14.7051C48.4848 14.7051 44.4152 16.3908 41.4146 19.3914L44.243 22.2198C46.4935 19.9694 49.5457 18.7051 52.7283 18.7051V14.7051ZM41.4146 19.3914L39.2772 21.5288L42.1056 24.3572L44.243 22.2198L41.4146 19.3914ZM40.7236 21.5288L38.5862 19.3914L35.7577 22.2198L37.8951 24.3572L40.7236 21.5288ZM38.5862 19.3914C35.5856 16.3908 31.5159 14.7051 27.2725 14.7051L27.2725 18.7051C30.4551 18.7051 33.5073 19.9694 35.7577 22.2198L38.5862 19.3914ZM27.2725 14.7051C23.029 14.7051 18.9593 16.3908 15.9588 19.3914L18.7872 22.2198C21.0376 19.9694 24.0899 18.7051 27.2725 18.7051V14.7051ZM39.2772 21.5288C39.6766 21.1294 40.3242 21.1294 40.7236 21.5288L37.8951 24.3572C39.0578 25.5199 40.9429 25.5199 42.1056 24.3572L39.2772 21.5288ZM37.172 63.232C38.7341 64.7941 41.2667 64.7941 42.8288 63.232L40.0004 60.4036L37.172 63.232Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M17.373 20.8056C14.7475 23.4311 13.2725 26.992 13.2725 30.7051C13.2725 34.4181 14.7475 37.9791 17.373 40.6046L31.5151 54.7467L38.5862 61.8178C39.3672 62.5988 40.6335 62.5988 41.4146 61.8178L48.4857 54.7467L62.6278 40.6046C65.2533 37.9791 66.7283 34.4181 66.7283 30.7051C66.7283 26.992 65.2533 23.4311 62.6278 20.8056C60.0023 18.1801 56.4413 16.7051 52.7283 16.7051C49.0153 16.7051 45.4543 18.1801 42.8288 20.8056L40.6914 22.943C40.3098 23.3246 39.691 23.3246 39.3094 22.943L37.172 20.8056C34.5464 18.1801 30.9855 16.7051 27.2725 16.7051C23.5594 16.7051 19.9985 18.1801 17.373 20.8056Z"
            fill="#EB5757"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M28.6864 30.4028C27.3736 31.7155 26.6361 33.496 26.6361 35.3525C26.6361 37.2091 27.3736 38.9895 28.6864 40.3023L40.0001 51.616C40.0001 51.616 40.0001 51.616 40.0001 51.616C40.0001 51.616 40.0001 51.616 40.0001 51.616C40.0002 51.616 40.0002 51.616 40.0002 51.616L51.3139 40.3023C52.6266 38.9895 53.3641 37.2091 53.3641 35.3525C53.3641 33.496 52.6266 31.7155 51.3139 30.4028C50.0011 29.09 48.2206 28.3525 46.3641 28.3525C44.5076 28.3525 42.7271 29.09 41.4144 30.4028L40.3457 31.4715L40.0002 31.817C40.0001 31.817 40.0001 31.817 40.0001 31.817C40.0001 31.817 40.0001 31.817 40.0001 31.817L39.6546 31.4715L38.5859 30.4028C37.2731 29.09 35.4927 28.3525 33.6362 28.3525C31.7796 28.3525 29.9992 29.09 28.6864 30.4028Z"
            fill="#F2F2F2"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M17.373 20.8056C14.7475 23.4311 13.2725 26.992 13.2725 30.7051C13.2725 34.4181 14.7475 37.9791 17.373 40.6046L38.5862 61.8178C39.3672 62.5988 40.6335 62.5988 41.4146 61.8178L62.6278 40.6046C65.2533 37.9791 66.7283 34.4181 66.7283 30.7051C66.7283 26.992 65.2533 23.4311 62.6278 20.8056C60.0023 18.1801 56.4413 16.7051 52.7283 16.7051C49.0153 16.7051 45.4543 18.1801 42.8288 20.8056L40.6914 22.943C40.3098 23.3246 39.691 23.3246 39.3094 22.943L37.172 20.8056C34.5464 18.1801 30.9855 16.7051 27.2725 16.7051C23.5594 16.7051 19.9985 18.1801 17.373 20.8056Z"
            fill="currentColor"
            fill-opacity="0.25"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            d="M39.7278 60.6987L32.6567 53.6276L32.603 53.5736L18.5147 39.4853C16.2643 37.2348 15 34.1826 15 31C15 27.8174 16.2643 24.7652 18.5147 22.5147C20.7652 20.2643 23.8174 19 27 19C30.1826 19 33.2348 20.2643 35.4853 22.5147L38.3137 25.3432C38.6888 25.7182 39.1975 25.9289 39.7279 25.9289C40.2584 25.9289 40.7671 25.7182 41.1421 25.3432L43.9704 22.5149C46.2208 20.2645 49.2731 19.0002 52.4557 19.0002C55.6383 19.0002 58.6905 20.2645 60.941 22.5149C63.1914 24.7653 64.4557 27.8176 64.4557 31.0002C64.4557 34.1828 63.1914 37.235 60.941 39.4855L39.7278 60.6987ZM39.7278 60.6987C39.7277 60.6987 39.7278 60.6986 39.7278 60.6987ZM27 15C22.7565 15 18.6869 16.6857 15.6863 19.6863C12.6857 22.6869 11 26.7565 11 31C11 35.2435 12.6857 39.3131 15.6863 42.3137L29.7596 56.3869L29.8283 56.456L36.8993 63.5271C38.4614 65.0892 40.9941 65.0892 42.5562 63.5271C42.5576 63.5257 42.5591 63.5242 42.5605 63.5228L63.7694 42.3139C66.77 39.3133 68.4557 35.2436 68.4557 31.0002C68.4557 26.7567 66.77 22.687 63.7694 19.6865C60.7688 16.6859 56.6992 15.0002 52.4557 15.0002C48.2122 15.0002 44.1426 16.6859 41.142 19.6865L39.7279 21.1005L38.3137 19.6863C35.3131 16.6857 31.2435 15 27 15Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreHeart = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreHeart.displayName = 'CoreHeart'

export default CoreHeart
