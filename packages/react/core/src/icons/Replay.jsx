
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M21.4139 58.2558C23.5359 60.4091 26.0851 62.1399 28.9323 63.3193L30.1018 63.8037C36.4404 66.4292 43.5623 66.4292 49.9008 63.8037C56.2393 61.1782 61.2753 56.1423 63.9008 49.8037C66.5263 43.4652 66.5263 36.3433 63.9008 30.0047C61.2753 23.6662 56.2393 18.6302 49.9008 16.0047C43.5623 13.3792 36.4404 13.3792 30.1018 16.0047C23.7633 18.6302 18.7273 23.6662 16.1018 30.0047C15.1722 32.2491 14.5717 34.5916 14.3004 36.9628M14.2984 36.9801C14.295 37.0101 14.2916 37.0402 14.2883 37.0702"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M23.4037 37.0703L6.5961 37.0703C4.89999 37.0703 4.05057 39.121 5.24991 40.3203L12.8786 47.949C14.0502 49.1206 15.9497 49.1206 17.1212 47.949L24.7499 40.3203C25.9492 39.121 25.0998 37.0703 23.4037 37.0703Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M49.9969 38.2442C51.3866 39.0023 51.3866 40.9978 49.9969 41.7558L34.1735 50.3867C32.8408 51.1137 31.2158 50.149 31.2158 48.6309L31.2158 31.3691C31.2158 29.851 32.8408 28.8864 34.1735 29.6133L49.9969 38.2442Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            d="M28.9323 63.3193L27.7842 66.0909L27.7842 66.0909L28.9323 63.3193ZM30.1018 63.8037L31.2499 61.0321L31.2499 61.0321L30.1018 63.8037ZM19.2771 60.3616C18.1142 59.1815 18.128 57.282 19.3081 56.1191C20.4882 54.9561 22.3877 54.97 23.5507 56.1501L19.2771 60.3616ZM16.1018 30.0047L13.3302 28.8567L16.1018 30.0047ZM17.2809 37.3039C17.0926 38.95 15.6055 40.1317 13.9594 39.9434C12.3133 39.755 11.1315 38.2679 11.3198 36.6218L17.2809 37.3039ZM11.3176 36.641C11.5049 34.9948 12.9912 33.812 14.6375 33.9993C16.2837 34.1865 17.4664 35.6728 17.2792 37.3191L11.3176 36.641ZM17.2703 37.3988C17.0888 39.0457 15.6067 40.2337 13.9598 40.0522C12.3129 39.8707 11.1249 38.3886 11.3064 36.7417L17.2703 37.3988ZM30.1018 16.0047L28.9538 13.2331L28.9538 13.2331L30.1018 16.0047ZM49.9008 16.0047L51.0489 13.2331L51.0489 13.2331L49.9008 16.0047ZM63.9008 30.0047L66.6724 28.8567L66.6724 28.8567L63.9008 30.0047ZM49.9008 63.8037L51.0489 66.5753L51.0488 66.5753L49.9008 63.8037ZM30.0803 60.5476L31.2499 61.0321L28.9538 66.5753L27.7842 66.0909L30.0803 60.5476ZM27.7842 66.0909C24.5626 64.7565 21.6781 62.7979 19.2771 60.3616L23.5507 56.1501C25.3937 58.0202 27.6075 59.5234 30.0803 60.5476L27.7842 66.0909ZM18.8734 31.1528C18.0516 33.137 17.5208 35.2077 17.2809 37.3039L11.3198 36.6218C11.6226 33.9755 12.2928 31.3612 13.3302 28.8567L18.8734 31.1528ZM17.2792 37.3191C17.2762 37.3457 17.2732 37.3722 17.2703 37.3988L11.3064 36.7417C11.3101 36.7081 11.3138 36.6746 11.3176 36.641L17.2792 37.3191ZM31.2499 18.7764C25.6464 21.0974 21.1945 25.5493 18.8734 31.1528L13.3302 28.8567C16.2602 21.783 21.8801 16.1631 28.9538 13.2331L31.2499 18.7764ZM48.7528 18.7764C43.1493 16.4553 36.8533 16.4553 31.2499 18.7764L28.9538 13.2331C36.0274 10.3031 43.9752 10.3031 51.0489 13.2331L48.7528 18.7764ZM61.1292 31.1528C58.8081 25.5493 54.3562 21.0974 48.7528 18.7764L51.0489 13.2331C58.1225 16.1631 63.7424 21.783 66.6724 28.8567L61.1292 31.1528ZM61.1292 48.6557C63.4502 43.0522 63.4502 36.7562 61.1292 31.1528L66.6724 28.8567C69.6024 35.9303 69.6024 43.8781 66.6724 50.9518L61.1292 48.6557ZM48.7527 61.0321C54.3562 58.711 58.8081 54.2591 61.1292 48.6557L66.6724 50.9518C63.7424 58.0254 58.1225 63.6454 51.0489 66.5753L48.7527 61.0321ZM51.0488 66.5753C43.9752 69.5053 36.0274 69.5053 28.9538 66.5753L31.2499 61.0321C36.8533 63.3531 43.1493 63.3531 48.7528 61.0321L51.0488 66.5753Z"
            fill="currentColor"
          />
          <path
            d="M23.4038 37.0703L6.59619 37.0703C4.90008 37.0703 4.05067 39.121 5.25 40.3203L12.8787 47.949C14.0503 49.1206 15.9497 49.1206 17.1213 47.949L24.75 40.3203C25.9493 39.121 25.0999 37.0703 23.4038 37.0703Z"
            fill="currentColor"
          />
          <path
            d="M49.9969 38.2442C51.3866 39.0022 51.3866 40.9978 49.9969 41.7558L34.1735 50.3867C32.8408 51.1137 31.2158 50.149 31.2158 48.6309L31.2158 31.3691C31.2158 29.851 32.8408 28.8863 34.1735 29.6133L49.9969 38.2442Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            d="M28.9323 63.3193L28.1669 65.167L28.1669 65.167L28.9323 63.3193ZM30.1018 63.8037L30.8672 61.9559L30.8672 61.9559L30.1018 63.8037ZM19.9894 59.6597C19.2141 58.8729 19.2233 57.6066 20.0101 56.8313C20.7968 56.056 22.0631 56.0652 22.8384 56.852L19.9894 59.6597ZM16.1018 30.0047L17.9496 30.7701L17.9496 30.7701L16.1018 30.0047ZM16.2874 37.1902C16.1619 38.2876 15.1705 39.0754 14.073 38.9499C12.9756 38.8243 12.1878 37.8329 12.3134 36.7355L16.2874 37.1902ZM12.3112 36.754C12.4361 35.6565 13.427 34.868 14.5244 34.9929C15.6219 35.1177 16.4104 36.1086 16.2856 37.2061L12.3112 36.754ZM16.2763 37.2893C16.1553 38.3872 15.1672 39.1792 14.0693 39.0582C12.9714 38.9372 12.1794 37.9491 12.3004 36.8512L16.2763 37.2893ZM30.1018 16.0047L29.3364 14.157V14.157L30.1018 16.0047ZM49.9008 16.0047L50.6662 14.157L50.6662 14.157L49.9008 16.0047ZM63.9008 30.0047L65.7486 29.2393L65.7486 29.2393L63.9008 30.0047ZM49.9008 63.8037L50.6662 65.6515L49.9008 63.8037ZM29.6976 61.4715L30.8672 61.9559L29.3364 65.6515L28.1669 65.167L29.6976 61.4715ZM28.1669 65.167C25.0701 63.8843 22.2974 62.0016 19.9894 59.6597L22.8384 56.852C24.7745 58.8165 27.1 60.3956 29.6976 61.4715L28.1669 65.167ZM17.9496 30.7701C17.0918 32.841 16.5378 35.0023 16.2874 37.1902L12.3134 36.7355C12.6056 34.1809 13.2526 31.6571 14.2541 29.2394L17.9496 30.7701ZM16.2856 37.2061C16.2825 37.2338 16.2794 37.2616 16.2763 37.2893L12.3004 36.8512C12.3039 36.8188 12.3076 36.7864 12.3112 36.754L16.2856 37.2061ZM30.8672 17.8525C25.0187 20.275 20.3721 24.9216 17.9496 30.7701L14.2541 29.2394C17.0825 22.4108 22.5078 16.9855 29.3364 14.157L30.8672 17.8525ZM49.1354 17.8525C43.2869 15.43 36.7157 15.43 30.8672 17.8525L29.3364 14.157C36.165 11.3285 43.8376 11.3285 50.6662 14.157L49.1354 17.8525ZM62.053 30.7701C59.6305 24.9216 54.9839 20.275 49.1354 17.8525L50.6662 14.157C57.4948 16.9855 62.9201 22.4108 65.7486 29.2393L62.053 30.7701ZM62.053 49.0383C64.4756 43.1899 64.4756 36.6186 62.053 30.7701L65.7486 29.2393C68.5771 36.0679 68.5771 43.7405 65.7486 50.5691L62.053 49.0383ZM49.1354 61.9559C54.9839 59.5334 59.6305 54.8868 62.053 49.0383L65.7486 50.5691C62.9201 57.3977 57.4948 62.823 50.6662 65.6515L49.1354 61.9559ZM50.6662 65.6515C43.8376 68.48 36.165 68.48 29.3364 65.6515L30.8672 61.9559C36.7157 64.3785 43.2869 64.3785 49.1354 61.9559L50.6662 65.6515Z"
            fill="#56CCF2"
          />
          <path
            d="M23.4038 37.0703L6.59619 37.0703C4.90008 37.0703 4.05067 39.121 5.25 40.3203L12.8787 47.949C14.0503 49.1206 15.9497 49.1206 17.1213 47.949L24.75 40.3203C25.9493 39.121 25.0999 37.0703 23.4038 37.0703Z"
            fill="#9B51E0"
          />
          <path
            d="M49.9969 38.2442C51.3866 39.0022 51.3866 40.9978 49.9969 41.7558L34.1735 50.3867C32.8408 51.1137 31.2158 50.149 31.2158 48.6309L31.2158 31.3691C31.2158 29.851 32.8408 28.8863 34.1735 29.6133L49.9969 38.2442Z"
            fill="#9B51E0"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M23.4037 37.0703H6.5961C4.89999 37.0703 4.05057 39.121 5.24991 40.3203L12.8786 47.949C14.0502 49.1206 15.9497 49.1206 17.1212 47.949L24.7499 40.3203C25.9492 39.121 25.0998 37.0703 23.4037 37.0703Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M49.9968 38.2442C51.3865 39.0023 51.3865 40.9978 49.9968 41.7558L34.1734 50.3867C32.8407 51.1137 31.2157 50.1491 31.2157 48.6309V31.3691C31.2157 29.851 32.8407 28.8864 34.1734 29.6133L49.9968 38.2442Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M21.4138 58.2558C23.5359 60.4091 26.085 62.1399 28.9322 63.3193L30.1017 63.8037C36.4403 66.4292 43.5622 66.4292 49.9007 63.8037C56.2393 61.1782 61.2752 56.1423 63.9007 49.8037C66.5262 43.4652 66.5262 36.3433 63.9007 30.0047C61.2752 23.6662 56.2393 18.6302 49.9007 16.0047C43.5622 13.3792 36.4403 13.3792 30.1017 16.0047C23.7632 18.6302 18.7273 23.6662 16.1017 30.0047C15.1721 32.2491 14.5716 34.5916 14.3003 36.9628M14.2984 36.9801C14.2949 37.0101 14.2916 37.0402 14.2883 37.0703M6.5961 37.0703H23.4037C25.0998 37.0703 25.9492 39.121 24.7499 40.3203L17.1212 47.949C15.9497 49.1206 14.0502 49.1206 12.8786 47.949L5.24991 40.3203C4.05057 39.121 4.89999 37.0703 6.5961 37.0703ZM31.2157 31.3691V48.6309C31.2157 50.1491 32.8407 51.1137 34.1734 50.3867L49.9968 41.7558C51.3865 40.9978 51.3865 39.0023 49.9968 38.2442L34.1734 29.6133C32.8407 28.8864 31.2157 29.851 31.2157 31.3691Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M6.5962 35.0704H12.555C12.9045 33.0859 13.4709 31.1302 14.2541 29.2394C17.0826 22.4108 22.5079 16.9855 29.3365 14.157C36.1651 11.3285 43.8376 11.3285 50.6662 14.157C57.4948 16.9855 62.9201 22.4108 65.7486 29.2394C68.5771 36.068 68.5771 43.7405 65.7486 50.5691C62.9201 57.3977 57.4948 62.823 50.6662 65.6515C43.8376 68.48 36.1651 68.48 29.3365 65.6515L28.1669 65.1671C25.0701 63.8844 22.2974 62.0017 19.9894 59.6597C19.2141 58.873 19.2234 57.6067 20.0101 56.8314C20.7968 56.0561 22.0631 56.0653 22.8384 56.852C24.7745 58.8166 27.1001 60.3956 29.6977 61.4716L30.8672 61.956C36.7157 64.3785 43.287 64.3785 49.1355 61.956C54.984 59.5335 59.6306 54.8869 62.0531 49.0384C64.4756 43.1899 64.4756 36.6186 62.0531 30.7701C59.6306 24.9217 54.984 20.2751 49.1355 17.8525C43.287 15.43 36.7157 15.43 30.8672 17.8525C25.0187 20.2751 20.3721 24.9217 17.9496 30.7701C17.3702 32.1689 16.9294 33.6089 16.6272 35.0704H23.4038C26.8817 35.0704 28.6235 39.2753 26.1642 41.7346L18.5355 49.3633C16.5829 51.3159 13.4171 51.3159 11.4645 49.3633L3.83579 41.7346C1.37654 39.2753 3.11828 35.0704 6.5962 35.0704ZM14.3106 39.0704C14.2974 39.0705 14.2843 39.0705 14.2711 39.0704H6.82844L14.2929 46.5349C14.6834 46.9254 15.3166 46.9254 15.7071 46.5349L23.1716 39.0704H14.3106Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M35.1312 27.8576C32.4657 26.4037 29.2158 28.3329 29.2158 31.3692L29.2158 48.631C29.2158 51.6672 32.4657 53.5965 35.1312 52.1426L50.9546 43.5117C53.734 41.9956 53.734 38.0046 50.9546 36.4885L35.1312 27.8576ZM33.2158 31.3692L49.0392 40.0001L33.2158 48.631L33.2158 31.3692Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreReplay = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreReplay.displayName = 'CoreReplay'

export default CoreReplay
