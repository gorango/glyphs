
import { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M47 60V68.25C47 69.3546 46.1046 70.25 45 70.25H23C21.8954 70.25 21 69.3546 21 68.25V51.6096C20.8428 51.4664 20.6874 51.321 20.5336 51.1734L20.1714 50.8257C15.5899 46.4274 13 40.351 13 34C13 27.649 15.5899 21.5726 20.1714 17.1743L20.5336 16.8266C25.0966 12.4461 31.1768 10 37.5021 10H38.4979C44.8232 10 50.9034 12.4461 55.4664 16.8266L55.8286 17.1743C58.7645 19.9928 60.8825 23.5003 62.0253 27.3276C62.0771 27.3684 62.1174 27.4259 62.137 27.4971L65.6148 40.1932C65.6359 40.2703 65.6546 40.3473 65.671 40.4242"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M55 32.75L52.9303 31.9739C52.3404 31.7527 52.3888 30.9028 53 30.75L55 30.25"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M43.6212 41.5149C43.8438 40.6246 44.6438 40 45.5615 40H64.4384C65.7396 40 66.6943 41.2228 66.3787 42.4851L63.5149 53.9403C62.6246 57.5016 59.4247 60 55.7538 60H41.5615C40.2604 60 39.3057 58.7772 39.6212 57.5149L43.6212 41.5149Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M65.375 46.5H52M63.625 53.5H52"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M39.895 56.4206C39.5099 57.961 37.5696 58.46 36.4892 57.2964L22.2926 42.0078C19.574 39.0801 22.3548 34.4146 26.2233 35.4129L42.0781 39.5045C43.1419 39.779 43.7851 40.8603 43.5187 41.9261"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M20.5336 16.8266C25.0966 12.4461 31.1768 10 37.5021 10H38.4979C44.8232 10 50.9034 12.4461 55.4664 16.8266L55.8286 17.1743C58.7645 19.9928 60.8825 23.5003 62.0253 27.3276C62.0771 27.3684 62.1174 27.4259 62.137 27.4971L65.6148 40.1932C65.6359 40.2703 65.6546 40.3473 65.671 40.4242C65.3347 40.1601 64.9092 40 64.4384 40H45.5616C45.4786 40 45.3967 40.0051 45.316 40.015C44.8689 38.8457 43.8812 37.9038 42.5778 37.5675L26.723 33.4759C20.9202 31.9784 16.7491 38.9767 20.827 43.3683L35.0235 58.6569C36.4221 60.163 38.5411 60.2763 40.0709 59.3335C40.4331 59.7389 40.9603 60 41.5616 60H47V68.25C47 69.3546 46.1046 70.25 45 70.25H23C21.8954 70.25 21 69.3546 21 68.25V51.6096C20.8428 51.4664 20.6874 51.321 20.5336 51.1734L20.1714 50.8257C15.5899 46.4274 13 40.351 13 34C13 27.649 15.5899 21.5726 20.1714 17.1743L20.5336 16.8266ZM25.7235 37.349C23.7892 36.8498 22.3988 39.1826 23.7581 40.6465L37.9547 55.9351L41.5783 41.4406L25.7235 37.349ZM57.4254 29.6437C57.5891 30.2987 57.478 30.958 57.1651 31.4999C57.5254 32.1247 57.6138 32.8998 57.3408 33.6278C56.856 34.9206 55.415 35.5756 54.1222 35.0908L52.0525 34.3147C49.1656 33.2321 49.4025 29.0724 52.3937 28.3246L54.3937 27.8246C55.7331 27.4898 57.0905 28.3042 57.4254 29.6437Z"
            fill="currentColor"
          />
          <path
            d="M43.6213 41.5149C43.8439 40.6246 44.6438 40 45.5616 40H64.4384C65.7396 40 66.6943 41.2228 66.3787 42.4851L63.5149 53.9403C62.6246 57.5016 59.4247 60 55.7538 60H41.5616C40.2604 60 39.3057 58.7772 39.6213 57.5149L43.6213 41.5149Z"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M65.375 48.5C66.4796 48.5 67.375 47.6046 67.375 46.5C67.375 45.3954 66.4796 44.5 65.375 44.5V48.5ZM52 44.5C50.8954 44.5 50 45.3954 50 46.5C50 47.6046 50.8954 48.5 52 48.5V44.5ZM63.625 55.5C64.7296 55.5 65.625 54.6046 65.625 53.5C65.625 52.3954 64.7296 51.5 63.625 51.5V55.5ZM52 51.5C50.8954 51.5 50 52.3954 50 53.5C50 54.6046 50.8954 55.5 52 55.5V51.5ZM65.375 44.5H52V48.5H65.375V44.5ZM63.625 51.5H52V55.5H63.625V51.5Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M20.5336 16.8266C25.0966 12.4461 31.1768 10 37.5021 10H38.4979C44.8232 10 50.9034 12.4461 55.4664 16.8266L55.8286 17.1743C58.7645 19.9928 60.8825 23.5003 62.0253 27.3276C62.0771 27.3684 62.1174 27.4259 62.137 27.4971L65.6148 40.1932C65.6359 40.2703 65.6546 40.3473 65.671 40.4242C65.3347 40.1601 64.9092 40 64.4384 40H45.5616C44.6438 40 43.8439 40.6246 43.6213 41.5149L39.6213 57.5149C39.3057 58.7772 40.2604 60 41.5616 60H47V68.25C47 69.3546 46.1046 70.25 45 70.25H23C21.8954 70.25 21 69.3546 21 68.25V51.6096C20.8428 51.4664 20.6874 51.321 20.5336 51.1734L20.1714 50.8257C15.5899 46.4274 13 40.351 13 34C13 27.649 15.5899 21.5726 20.1714 17.1743L20.5336 16.8266Z"
            fill="#F2C94C"
          />
          <path
            d="M20.5336 16.8266L19.1486 15.3838L20.5336 16.8266ZM55.4664 16.8266L54.0813 18.2694L54.0813 18.2694L55.4664 16.8266ZM55.8286 17.1743L57.2137 15.7316L57.2137 15.7316L55.8286 17.1743ZM62.0253 27.3276L60.1089 27.8998C60.2268 28.2947 60.4638 28.6435 60.7875 28.8986L62.0253 27.3276ZM62.137 27.4971L64.0659 26.9687V26.9687L62.137 27.4971ZM65.6148 40.1932L63.6859 40.7216V40.7216L65.6148 40.1932ZM65.671 40.4242L64.4357 41.9971C65.0978 42.5171 66.0146 42.5668 66.729 42.1215C67.4433 41.6762 67.8024 40.8312 67.6272 40.0078L65.671 40.4242ZM43.6213 41.5149L45.5616 42V42L43.6213 41.5149ZM39.6213 57.5149L37.681 57.0299L39.6213 57.5149ZM47 60H49C49 58.8954 48.1046 58 47 58V60ZM21 51.6096H23C23 51.0469 22.763 50.5102 22.347 50.1313L21 51.6096ZM20.5336 51.1734L21.9187 49.7306L21.9187 49.7306L20.5336 51.1734ZM20.1714 50.8257L21.5565 49.3829L20.1714 50.8257ZM20.1714 17.1743L21.5565 18.6171H21.5565L20.1714 17.1743ZM37.5021 8C30.6605 8 24.084 10.6458 19.1486 15.3838L21.9187 18.2694C26.1092 14.2465 31.6931 12 37.5021 12V8ZM38.4979 8H37.5021V12H38.4979V8ZM56.8514 15.3838C51.916 10.6458 45.3395 8 38.4979 8V12C44.3069 12 49.8908 14.2465 54.0813 18.2694L56.8514 15.3838ZM57.2137 15.7316L56.8514 15.3838L54.0813 18.2694L54.4435 18.6171L57.2137 15.7316ZM63.9417 26.7554C62.701 22.6001 60.4013 18.7917 57.2137 15.7316L54.4435 18.6171C57.1276 21.1938 59.064 24.4005 60.1089 27.8998L63.9417 26.7554ZM64.0659 26.9687C63.9299 26.4721 63.6401 26.0538 63.2631 25.7567L60.7875 28.8986C60.514 28.6831 60.305 28.3796 60.208 28.0255L64.0659 26.9687ZM67.5437 39.6648L64.0659 26.9687L60.208 28.0255L63.6859 40.7216L67.5437 39.6648ZM67.6272 40.0078C67.6028 39.8933 67.575 39.7789 67.5437 39.6648L63.6859 40.7216C63.6968 40.7616 63.7064 40.8013 63.7148 40.8406L67.6272 40.0078ZM64.4384 42C64.4425 42 64.4441 42.0003 64.4436 42.0002C64.4432 42.0002 64.442 41.9999 64.4404 41.9994C64.437 41.9982 64.4354 41.9969 64.4357 41.9971L66.9062 38.8513C66.231 38.321 65.3739 38 64.4384 38V42ZM45.5616 42H64.4384V38H45.5616V42ZM45.5616 42V42V38C43.7261 38 42.1261 39.2492 41.681 41.0299L45.5616 42ZM41.5616 58L45.5616 42L41.681 41.0299L37.681 57.0299L41.5616 58ZM41.5616 58V58L37.681 57.0299C37.0498 59.5544 38.9593 62 41.5616 62V58ZM47 58H41.5616V62H47V58ZM49 68.25V60H45V68.25H49ZM45 72.25C47.2091 72.25 49 70.4591 49 68.25H45V72.25ZM23 72.25H45V68.25H23V72.25ZM19 68.25C19 70.4591 20.7909 72.25 23 72.25V68.25H19ZM19 51.6096V68.25H23V51.6096H19ZM19.1485 52.6162C19.3148 52.7758 19.483 52.9331 19.653 53.0879L22.347 50.1313C22.2027 49.9997 22.0599 49.8662 21.9187 49.7306L19.1485 52.6162ZM18.7863 52.2684L19.1486 52.6162L21.9187 49.7306L21.5565 49.3829L18.7863 52.2684ZM11 34C11 40.8956 13.8119 47.493 18.7863 52.2684L21.5565 49.3829C17.3678 45.3618 15 39.8064 15 34H11ZM18.7863 15.7316C13.8119 20.507 11 27.1044 11 34H15C15 28.1936 17.3678 22.6382 21.5565 18.6171L18.7863 15.7316ZM19.1486 15.3838L18.7863 15.7316L21.5565 18.6171L21.9187 18.2694L19.1486 15.3838Z"
            fill="#F2C94C"
          />
          <path
            d="M41.5783 41.4406L37.9547 55.935L23.7581 40.6465C22.3989 39.1826 23.7892 36.8498 25.7235 37.349L41.5783 41.4406Z"
            stroke="#F2F2F2"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M43.6213 41.5149C43.8439 40.6246 44.6438 40 45.5616 40H64.4384C65.7396 40 66.6943 41.2228 66.3787 42.4851L63.5149 53.9403C62.6246 57.5016 59.4247 60 55.7538 60H41.5616C40.2604 60 39.3057 58.7772 39.6213 57.5149L43.6213 41.5149Z"
            fill="#56CCF2"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M64.1166 51.5335L63.5149 53.9402C63.3783 54.4869 63.1871 55.0086 62.9483 55.5H52C50.8954 55.5 50 54.6046 50 53.5C50 52.3954 50.8954 51.5 52 51.5H63.75C63.8752 51.5 63.9978 51.5115 64.1166 51.5335ZM65.8666 44.5335L64.875 48.5H52C50.8954 48.5 50 47.6046 50 46.5C50 45.3954 50.8954 44.5 52 44.5H65.5C65.6252 44.5 65.7478 44.5115 65.8666 44.5335Z"
            fill="#F2F2F2"
          />
          <path
            d="M55 30.25L53 30.75V30.75C52.3889 30.9028 52.3405 31.7527 52.9303 31.9739L55 32.75"
            stroke="#4F4F4F"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M20.5336 16.7016C25.0966 12.3211 31.1768 9.875 37.5021 9.875H38.4979C44.8232 9.875 50.9034 12.3211 55.4664 16.7016L55.8286 17.0493C58.7645 19.8678 60.8825 23.3753 62.0253 27.2026C62.0771 27.2434 62.1174 27.3009 62.137 27.3721L65.6148 40.0682C65.6359 40.1453 65.6546 40.2223 65.671 40.2992C65.3347 40.0351 64.9092 39.875 64.4384 39.875H45.5616C44.6438 39.875 43.8439 40.4996 43.6213 41.3899L39.6213 57.3899C39.3057 58.6522 40.2604 59.875 41.5616 59.875H47V68.125C47 69.2296 46.1046 70.125 45 70.125H23C21.8954 70.125 21 69.2296 21 68.125V51.4846C20.8428 51.3414 20.6874 51.196 20.5336 51.0484L20.1714 50.7007C15.5899 46.3024 13 40.226 13 33.875C13 27.524 15.5899 21.4476 20.1714 17.0493L20.5336 16.7016Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M36.4891 57.171C37.5695 58.3345 39.5099 57.8355 39.895 56.2951L43.5186 41.8006C43.7851 40.7348 43.1419 39.6535 42.0781 39.379L26.2232 35.2874C22.3547 34.2891 19.574 38.9547 22.2925 41.8824L36.4891 57.171Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M43.6213 41.3899C43.8439 40.4996 44.6438 39.875 45.5616 39.875H64.4384C65.7396 39.875 66.6943 41.0978 66.3787 42.3601L63.5149 53.8153C62.6246 57.3766 59.4247 59.875 55.7538 59.875H41.5616C40.2604 59.875 39.3057 58.6522 39.6213 57.3899L43.6213 41.3899Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M64.4384 39.875C64.9092 39.875 65.3347 40.0351 65.671 40.2992C65.6546 40.2223 65.6359 40.1453 65.6148 40.0682L62.137 27.3721C62.1174 27.3009 62.0771 27.2434 62.0253 27.2026C60.8825 23.3753 58.7645 19.8678 55.8286 17.0493L55.4664 16.7016C50.9034 12.3211 44.8232 9.875 38.4979 9.875H37.5021C31.1768 9.875 25.0966 12.3211 20.5336 16.7016L20.1714 17.0493C15.5899 21.4476 13 27.524 13 33.875C13 40.226 15.5899 46.3024 20.1714 50.7007L20.5336 51.0484C20.6874 51.196 20.8428 51.3414 21 51.4846V68.125C21 69.2296 21.8954 70.125 23 70.125H45C46.1046 70.125 47 69.2296 47 68.125V59.875H41.5616M64.4384 39.875H45.5616C44.6438 39.875 43.8439 40.4996 43.6213 41.3899L39.6213 57.3899C39.3057 58.6522 40.2604 59.875 41.5616 59.875M64.4384 39.875C65.7396 39.875 66.6943 41.0978 66.3787 42.3601L63.5149 53.8153C62.6246 57.3766 59.4247 59.875 55.7538 59.875H41.5616M65.375 46.3751H52M63.625 53.3751H52M55 32.625L52.9303 31.8489C52.3405 31.6277 52.3889 30.7778 53 30.625L55 30.125M26.2232 35.2874L42.0781 39.379C43.1419 39.6535 43.7851 40.7348 43.5186 41.8006L39.895 56.2951C39.5099 57.8355 37.5695 58.3345 36.4891 57.171L22.2925 41.8824C19.574 38.9547 22.3547 34.2891 26.2232 35.2874Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            d="M56.5616 31.4998C56.9378 31.0292 57.0978 30.3946 56.9404 29.7649C56.6725 28.6933 55.5866 28.0418 54.5151 28.3097L52.515 28.8097C49.9999 29.4385 49.8007 32.9362 52.2282 33.8465L54.2979 34.6227C55.3321 35.0105 56.4849 34.4865 56.8728 33.4522C57.1293 32.7681 56.9869 32.032 56.5616 31.4998Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M67.468 39.3879L64.066 26.9687C64.0131 26.7755 63.9369 26.5942 63.8414 26.4272C62.5791 22.3996 60.3173 18.711 57.2138 15.7316L56.8516 15.3838C51.9161 10.6458 45.3396 8 38.498 8H37.5022C30.6606 8 24.0841 10.6458 19.1487 15.3838L18.7865 15.7316C13.8121 20.507 11.0001 27.1044 11.0001 34C11.0001 40.8956 13.8121 47.493 18.7865 52.2684L19.0001 52.4736V68.25C19.0001 70.4591 20.791 72.25 23.0001 72.25H45.0001C47.2093 72.25 49.0001 70.4591 49.0001 68.25V62H55.7539C60.3426 62 64.3424 58.877 65.4553 54.4254L68.3191 42.9701C68.6521 41.6382 68.278 40.3283 67.468 39.3879ZM21.9188 18.2694C26.1093 14.2465 31.6933 12 37.5022 12H38.498C44.307 12 49.8909 14.2465 54.0814 18.2694L54.4437 18.6171C57.1277 21.1938 59.0642 24.4005 60.109 27.8998C60.1529 28.0469 60.2134 28.1876 60.2887 28.3194L62.9405 38H45.5617C45.0313 38 44.5206 38.1043 44.0517 38.2956C43.629 37.9628 43.132 37.7104 42.5779 37.5675L26.7231 33.4759C20.9203 31.9784 16.7492 38.9767 20.8271 43.3683L35.0236 58.6569C35.8691 59.5674 36.9779 59.9689 38.0607 59.9357C38.7347 61.1504 40.0278 62 41.5617 62H45.0001V68.25H23.0001V51.6096C23.0001 51.0469 22.7631 50.5102 22.3472 50.1313C22.2028 49.9997 22.06 49.8662 21.9188 49.7306L21.5566 49.3829C17.3679 45.3618 15.0001 39.8064 15.0001 34C15.0001 28.1936 17.3679 22.6382 21.5566 18.6171L21.9188 18.2694ZM45.5617 42H64.4386L61.5748 53.4552C60.907 56.1262 58.5071 58 55.7539 58H41.5617L45.5617 42ZM25.7236 37.349L41.5784 41.4406L37.9548 55.9351L23.7583 40.6465C22.399 39.1826 23.7893 36.8498 25.7236 37.349Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreHeadSideMask = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreHeadSideMask.displayName = 'CoreHeadSideMask'

export default CoreHeadSideMask
