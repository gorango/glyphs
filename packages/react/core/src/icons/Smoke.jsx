
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M10.6862 40.6862C7.68568 43.6868 6 47.7564 6 51.9998C6 56.2433 7.68582 60.3131 10.6864 63.3137C13.6869 66.3142 17.7566 68 22 68H58C61.1825 68 64.2348 66.7357 66.4852 64.4853C68.7356 62.2348 70 59.1825 70 55.9999C70 52.8173 68.7357 49.7651 66.4853 47.5147M10.6862 40.6862C13.6868 37.6857 17.7566 36 22 36C26.2434 36 30.3132 37.6857 33.3138 40.6862C33.7691 41.1416 34.1942 41.6216 34.5877 42.1231C36.7934 40.7467 39.3583 40 42 40C45.713 40 49.2741 41.475 51.8996 44.1004C52.2374 44.4383 52.5562 44.7916 52.8552 45.1588C54.4481 44.4029 56.2033 44 58 44C61.1826 44 64.2349 45.2643 66.4853 47.5147M10.6862 40.6862C10.5829 40.7895 10.4812 40.8941 10.381 40.9999M66.4853 47.5147C66.4956 47.5249 66.5058 47.5351 66.5159 47.5454"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M66.4853 47.5147C66.4956 47.5249 66.5058 47.5351 66.5159 47.5454C67.5212 46.9134 68.4606 46.1667 69.3136 45.3137C72.3142 42.3131 74 38.2433 74 33.9998C74 29.7564 72.3143 25.6868 69.3138 22.6862C66.3132 19.6857 62.2434 18 58 18C53.7566 18 49.6868 19.6857 46.6862 22.6862C46.2309 23.1416 45.8058 23.6216 45.4123 24.1231C43.2066 22.7467 40.6417 22 38 22C34.287 22 30.7259 23.475 28.1004 26.1004C27.7626 26.4383 27.4438 26.7916 27.1448 27.1588C25.5519 26.4029 23.7967 26 22 26C18.8174 26 15.7651 27.2643 13.5147 29.5147C11.2643 31.7651 10 34.8173 10 37.9999C10 39.0207 10.1301 40.028 10.381 40.9999"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
          <path
            d="M10 37.9999C10 38.2004 10.005 38.4005 10.015 38.5999C7.43552 35.6835 6 31.9156 6 27.9998C6 23.7564 7.68568 19.6868 10.6862 16.6862C13.6868 13.6857 17.7566 12 22 12C26.2434 12 30.3132 13.6857 33.3138 16.6862C33.7691 17.1416 34.1942 17.6216 34.5877 18.1231C36.7934 16.7466 39.3583 16 42 16C45.416 16 48.7034 17.2484 51.2519 19.4926"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M10.6862 40.6862C7.68568 43.6868 6 47.7564 6 51.9998C6 56.2433 7.68582 60.3131 10.6864 63.3137C13.6869 66.3142 17.7566 68 22 68H42H58C61.1825 68 64.2348 66.7357 66.4852 64.4853C68.7356 62.2348 70 59.1825 70 55.9999C70 52.8173 68.7357 49.7651 66.4853 47.5147C64.2349 45.2643 61.1826 44 58 44C56.2033 44 54.4481 44.4029 52.8552 45.1588C52.5562 44.7916 52.2374 44.4383 51.8996 44.1004C49.2741 41.475 45.713 40 42 40C39.3583 40 36.7934 40.7466 34.5877 42.1231C34.1942 41.6216 33.7691 41.1416 33.3138 40.6862C30.3132 37.6857 26.2434 36 22 36C17.7566 36 13.6868 37.6857 10.6862 40.6862Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M69.3138 22.6862C72.3144 25.6868 74 29.7564 74 33.9998C74 38.0971 72.4283 42.0326 69.619 44.9999C69.5188 44.8941 69.4171 44.7895 69.3138 44.6862C66.3132 41.6857 62.2434 40 58 40C56.616 40 55.2505 40.1793 53.9345 40.5251C50.6523 37.6179 46.4095 36 42 36C39.7471 36 37.5377 36.4224 35.4778 37.2232C31.8019 33.8702 26.9973 32 22 32C17.7288 32 13.5982 33.3663 10.1929 35.857C10.626 33.4707 11.776 31.2534 13.5147 29.5147C15.7651 27.2643 18.8175 26 22 26C23.7967 26 25.552 26.4029 27.1448 27.1588C27.4438 26.7916 27.7626 26.4383 28.1005 26.1004C30.726 23.475 34.2871 22 38 22C40.6418 22 43.2066 22.7466 45.4123 24.1231C45.8058 23.6216 46.2309 23.1416 46.6863 22.6862C49.6868 19.6857 53.7566 18 58 18C62.2434 18 66.3133 19.6857 69.3138 22.6862Z"
            fill="currentColor"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M10.6862 16.6862C7.68568 19.6868 6 23.7564 6 27.9998C6 29.7145 6.27527 31.4009 6.80132 32.9998C7.57707 30.642 8.8982 28.4743 10.6862 26.6862C13.6868 23.6857 17.7566 22 22 22C23.384 22 24.7496 22.1793 26.0656 22.5251C29.3477 19.6179 33.5906 18 38 18C40.2529 18 42.4623 18.4224 44.5222 19.2232C45.4066 18.4165 46.3563 17.6956 47.3584 17.066C45.6756 16.3689 43.8568 16 42 16C39.3583 16 36.7934 16.7466 34.5877 18.1231C34.1942 17.6216 33.7691 17.1416 33.3138 16.6862C30.3132 13.6857 26.2434 12 22 12C17.7566 12 13.6868 13.6857 10.6862 16.6862Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M10.6862 40.6862C7.68568 43.6868 6 47.7564 6 51.9998C6 56.2433 7.68582 60.3131 10.6864 63.3137C13.6869 66.3142 17.7566 68 22 68H42H58C61.1825 68 64.2348 66.7357 66.4852 64.4853C68.7356 62.2348 70 59.1825 70 55.9999C70 52.8173 68.7357 49.7651 66.4853 47.5147C64.2349 45.2643 61.1826 44 58 44C56.2033 44 54.4481 44.4029 52.8552 45.1588C52.5562 44.7916 52.2374 44.4383 51.8996 44.1004C49.2741 41.475 45.713 40 42 40C39.3583 40 36.7934 40.7466 34.5877 42.1231C34.1942 41.6216 33.7691 41.1416 33.3138 40.6862C30.3132 37.6857 26.2434 36 22 36C17.7566 36 13.6868 37.6857 10.6862 40.6862Z"
            fill="#828282"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M74 33.9998C74 29.7564 72.3143 25.6868 69.3138 22.6862C66.3132 19.6857 62.2434 18 58 18C53.7566 18 49.6868 19.6857 46.6862 22.6862C46.2309 23.1416 45.8058 23.6216 45.4123 24.1231C43.2066 22.7466 40.6417 22 38 22C34.287 22 30.7259 23.475 28.1004 26.1004C27.7626 26.4383 27.4438 26.7916 27.1448 27.1588C25.5519 26.4029 23.7967 26 22 26C18.8174 26 15.7651 27.2643 13.5147 29.5147C11.2643 31.7651 10 34.8173 10 37.9999C10 39.0207 10.1301 40.028 10.381 40.9999C10.4812 40.8941 10.5829 40.7895 10.6862 40.6862C13.6868 37.6857 17.7566 36 22 36C26.2434 36 30.3132 37.6857 33.3138 40.6862C33.7691 41.1416 34.1942 41.6216 34.5877 42.1231C36.7934 40.7467 39.3583 40 42 40C45.713 40 49.2741 41.475 51.8996 44.1004C52.2374 44.4383 52.5562 44.7916 52.8552 45.1588C54.4481 44.4029 56.2033 44 58 44C61.1826 44 64.2349 45.2643 66.4853 47.5147C66.4956 47.5249 66.5058 47.5351 66.5159 47.5454C67.5212 46.9134 68.4606 46.1667 69.3136 45.3137C72.3142 42.3131 74 38.2433 74 33.9998Z"
            fill="#4F4F4F"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M6 27.9998C6 23.7564 7.68568 19.6868 10.6862 16.6862C13.6868 13.6857 17.7566 12 22 12C26.2434 12 30.3132 13.6857 33.3138 16.6862C33.7691 17.1416 34.1942 17.6216 34.5877 18.1231C36.7934 16.7466 39.3583 16 42 16C45.416 16 48.7034 17.2484 51.2519 19.4926C49.5707 20.2746 48.0224 21.35 46.6862 22.6862C46.2309 23.1416 45.8058 23.6216 45.4123 24.1231C43.2066 22.7466 40.6417 22 38 22C34.287 22 30.7259 23.475 28.1004 26.1004C27.7626 26.4383 27.4438 26.7916 27.1448 27.1588C25.5519 26.4029 23.7967 26 22 26C18.8174 26 15.7651 27.2643 13.5147 29.5147C11.2643 31.7651 10 34.8173 10 37.9999C10 38.2004 10.005 38.4005 10.015 38.5999C7.43552 35.6835 6 31.9156 6 27.9998Z"
            fill="#BDBDBD"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M10.6862 40.6862C7.68568 43.6868 6 47.7564 6 51.9998C6 56.2433 7.68582 60.3131 10.6864 63.3137C13.6869 66.3142 17.7566 68 22 68H58C61.1825 68 64.2348 66.7357 66.4852 64.4853C68.7356 62.2348 70 59.1825 70 55.9999C70 52.8173 68.7357 49.7651 66.4853 47.5147C64.2349 45.2643 61.1826 44 58 44C56.2033 44 54.4481 44.4029 52.8552 45.1588C52.5562 44.7916 52.2374 44.4383 51.8996 44.1004C49.2741 41.475 45.713 40 42 40C39.3583 40 36.7934 40.7467 34.5877 42.1231C34.1942 41.6216 33.7691 41.1416 33.3138 40.6862C30.3132 37.6857 26.2434 36 22 36C17.7566 36 13.6868 37.6857 10.6862 40.6862Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M74 33.9998C74 29.7564 72.3143 25.6868 69.3138 22.6862C66.3132 19.6857 62.2434 18 58 18C53.7566 18 49.6868 19.6857 46.6862 22.6862C46.2309 23.1416 45.8058 23.6216 45.4123 24.1231C43.2066 22.7467 40.6417 22 38 22C34.287 22 30.7259 23.475 28.1004 26.1004C27.7626 26.4383 27.4438 26.7916 27.1448 27.1588C25.5519 26.4029 23.7967 26 22 26C18.8174 26 15.7651 27.2643 13.5147 29.5147C11.2643 31.7651 10 34.8173 10 37.9999C10 39.0207 10.1301 40.028 10.381 40.9999C10.4812 40.8941 10.5829 40.7895 10.6862 40.6862C13.6868 37.6857 17.7566 36 22 36C26.2434 36 30.3132 37.6857 33.3138 40.6862C33.7691 41.1416 34.1942 41.6216 34.5877 42.1231C36.7934 40.7467 39.3583 40 42 40C45.713 40 49.2741 41.475 51.8996 44.1004C52.2374 44.4383 52.5562 44.7916 52.8552 45.1588C54.4481 44.4029 56.2033 44 58 44C61.1826 44 64.2349 45.2643 66.4853 47.5147C66.4956 47.5249 66.5058 47.5351 66.5159 47.5454C67.5212 46.9134 68.4606 46.1667 69.3136 45.3137C72.3142 42.3131 74 38.2433 74 33.9998Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M6 27.9998C6 23.7564 7.68568 19.6868 10.6862 16.6862C13.6868 13.6857 17.7566 12 22 12C26.2434 12 30.3132 13.6857 33.3138 16.6862C33.7691 17.1416 34.1942 17.6216 34.5877 18.1231C36.7934 16.7466 39.3583 16 42 16C45.416 16 48.7034 17.2484 51.2519 19.4926C49.5707 20.2746 48.0224 21.35 46.6862 22.6862C46.2309 23.1416 45.8058 23.6216 45.4123 24.1231C43.2066 22.7467 40.6417 22 38 22C34.287 22 30.7259 23.475 28.1004 26.1004C27.7626 26.4383 27.4438 26.7916 27.1448 27.1588C25.5519 26.4029 23.7967 26 22 26C18.8174 26 15.7651 27.2643 13.5147 29.5147C11.2643 31.7651 10 34.8173 10 37.9999C10 38.2004 10.005 38.4005 10.015 38.5999C7.43552 35.6835 6 31.9156 6 27.9998Z"
            fill="currentColor"
            fill-opacity="0.25"
          />
          <path
            d="M10.6862 40.6862C7.68568 43.6868 6 47.7564 6 51.9998C6 56.2433 7.68582 60.3131 10.6864 63.3137C13.6869 66.3142 17.7566 68 22 68H58C61.1825 68 64.2348 66.7357 66.4852 64.4853C68.7356 62.2348 70 59.1825 70 55.9999C70 52.8173 68.7357 49.7651 66.4853 47.5147M10.6862 40.6862C13.6868 37.6857 17.7566 36 22 36C26.2434 36 30.3132 37.6857 33.3138 40.6862C33.7691 41.1416 34.1942 41.6216 34.5877 42.1231C36.7934 40.7467 39.3583 40 42 40C45.713 40 49.2741 41.475 51.8996 44.1004C52.2374 44.4383 52.5562 44.7916 52.8552 45.1588C54.4481 44.4029 56.2033 44 58 44C61.1826 44 64.2349 45.2643 66.4853 47.5147M10.6862 40.6862C10.5829 40.7895 10.4812 40.8941 10.381 40.9999C10.1301 40.028 10 39.0207 10 37.9999M66.4853 47.5147C66.4956 47.5249 66.5058 47.5351 66.5159 47.5454C67.5212 46.9134 68.4606 46.1667 69.3136 45.3137C72.3142 42.3131 74 38.2433 74 33.9998C74 29.7564 72.3143 25.6868 69.3138 22.6862C66.3132 19.6857 62.2434 18 58 18C53.7566 18 49.6868 19.6857 46.6862 22.6862M46.6862 22.6862C46.2309 23.1416 45.8058 23.6216 45.4123 24.1231C43.2066 22.7467 40.6417 22 38 22C34.287 22 30.7259 23.475 28.1004 26.1004C27.7626 26.4383 27.4438 26.7916 27.1448 27.1588C25.5519 26.4029 23.7967 26 22 26C18.8174 26 15.7651 27.2643 13.5147 29.5147C11.2643 31.7651 10 34.8173 10 37.9999M46.6862 22.6862C48.0224 21.35 49.5707 20.2746 51.2519 19.4926C48.7034 17.2484 45.416 16 42 16C39.3583 16 36.7934 16.7466 34.5877 18.1231C34.1942 17.6216 33.7691 17.1416 33.3138 16.6862C30.3132 13.6857 26.2434 12 22 12C17.7566 12 13.6868 13.6857 10.6862 16.6862C7.68568 19.6868 6 23.7564 6 27.9998C6 31.9156 7.43552 35.6835 10.015 38.5999C10.005 38.4005 10 38.2004 10 37.9999"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            d="M34.859 20.3113L35.6466 19.8198C37.5373 18.6399 39.7357 18 42 18C43.9453 18 45.8419 18.4723 47.5365 19.3535C46.7353 19.9259 45.9774 20.5667 45.272 21.272C45.1663 21.3777 45.062 21.4846 44.9592 21.5927C42.8092 20.5542 40.4331 20 38 20C36.9374 20 35.8858 20.1057 34.859 20.3113ZM34.859 20.3113L33.931 20.526M33.931 20.526L33.0143 19.3577C32.67 18.919 32.2981 18.499 31.8996 18.1004C29.2741 15.475 25.713 14 22 14C18.287 14 14.7259 15.475 12.1004 18.1004C9.47497 20.7259 8 24.2868 8 27.9998C8 29.7255 8.31864 31.4184 8.92333 32.9998C9.6142 31.193 10.6785 29.5318 12.0676 28.1334C12.0785 28.1224 12.0895 28.1114 12.1005 28.1005C14.726 25.475 18.287 24 22 24C23.58 24 25.1324 24.2671 26.597 24.7762C26.6082 24.7649 26.6194 24.7535 26.6306 24.7422L26.6313 24.7414C26.6496 24.723 26.6679 24.7046 26.6862 24.6862C28.7073 22.6652 31.2135 21.2407 33.931 20.526ZM9.27201 15.272C12.6476 11.8964 17.2262 10 22 10C26.7738 10 31.3524 11.8964 34.728 15.272C34.8337 15.3777 34.938 15.4846 35.0408 15.5927C37.1908 14.5542 39.5669 14 42 14C45.473 14 48.8296 15.1291 51.5791 17.1842C53.6101 16.4086 55.784 16 58 16C62.7738 16 67.3524 17.8964 70.728 21.272C74.1036 24.6476 76 29.226 76 33.9998C76 38.7737 74.1035 43.3523 70.7278 46.7279C70.3114 47.1444 69.8766 47.5383 69.4254 47.909C71.0893 50.2587 72 53.0824 72 55.9999C72 59.7129 70.5249 63.274 67.8994 65.8995C65.274 68.5249 61.713 70 58 70H22C17.2262 70 12.6478 68.1035 9.27219 64.7279C5.89655 61.3523 4 56.7737 4 51.9998C4 47.7512 5.50209 43.6573 8.2122 40.4284C8.15228 40.0882 8.10484 39.7452 8.07014 39.3999C5.4497 36.1981 4 32.1736 4 27.9998C4 23.226 5.89639 18.6476 9.27201 15.272ZM52.0954 21.3061C50.6243 21.9903 49.2696 22.9312 48.1004 24.1004C47.7019 24.4989 47.33 24.919 46.9857 25.3577L45.877 26.7706L44.3534 25.8198C42.4627 24.6399 40.2643 24 38 24C34.8174 24 31.765 25.2643 29.5147 27.5147C29.225 27.8043 28.9518 28.1072 28.6955 28.4218L27.7047 29.6382L26.2874 28.9657C24.9598 28.3357 23.4972 28 22 28C19.3478 28 16.8042 29.0536 14.9289 30.9289C13.2953 32.5625 12.2853 34.7031 12.052 36.9809C12.0514 36.9872 12.0507 36.9935 12.0501 36.9998C14.9779 35.0579 18.4345 34 22 34C26.7738 34 31.3524 35.8964 34.728 39.272C34.8337 39.3777 34.938 39.4846 35.0408 39.5927C37.1908 38.5542 39.5669 38 42 38C46.2434 38 50.3132 39.6857 53.3138 42.6862C53.3437 42.7161 53.3734 42.7461 53.403 42.7762C54.8676 42.2671 56.42 42 58 42C61.1572 42 64.2046 43.0665 66.6603 44.9999C67.0925 44.6596 67.5064 44.2924 67.8994 43.8995C70.5249 41.274 72 37.7128 72 33.9998C72 30.2868 70.525 26.7259 67.8996 24.1004C65.2741 21.475 61.713 20 58 20C55.9405 20 53.9277 20.4538 52.0954 21.3061ZM12.1883 42.0134L11.2569 43.0228C9.1612 45.5306 8 48.7054 8 51.9998C8 55.7128 9.4751 59.274 12.1006 61.8995C14.7261 64.5249 18.2871 66 22 66H58C60.6521 66 63.1957 64.9464 65.071 63.0711C66.9464 61.1957 68 58.652 68 55.9999C68 53.3632 66.9587 50.8339 65.1039 48.9618L65.0966 48.9545L65.0711 48.9289C63.1958 47.0536 60.6521 46 58 46C56.5028 46 55.0402 46.3357 53.7126 46.9657L52.2953 47.6382L51.3045 46.4218C51.0482 46.1072 50.775 45.8043 50.4853 45.5147C48.235 43.2643 45.1826 42 42 42C39.7357 42 37.5373 42.6399 35.6466 43.8198L34.123 44.7706L33.0143 43.3577C32.7131 42.9738 32.3906 42.6042 32.0478 42.2509C31.9988 42.2004 31.9494 42.1502 31.8996 42.1004C29.2741 39.475 25.713 38 22 38C18.3282 38 14.805 39.4424 12.1883 42.0134Z"
            stroke="currentColor"
          />
        </>
      )
  }
}

const CoreSmoke = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreSmoke.displayName = 'CoreSmoke'

export default CoreSmoke
