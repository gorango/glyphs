
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M48.8999 18.5138C52.4156 16.6885 56.8491 17.2511 59.799 20.201C62.7489 23.1509 63.3115 27.5844 61.4862 31.1001C65.2629 32.2955 68 35.8282 68 40C68 44.1718 65.2629 47.7045 61.4862 48.8999C63.3115 52.4156 62.7489 56.8491 59.799 59.799C56.8491 62.7489 52.4156 63.3115 48.8999 61.4862C47.7045 65.2629 44.1718 68 40 68C35.8282 68 32.2955 65.2629 31.1001 61.4862C27.5844 63.3115 23.1509 62.7489 20.201 59.799C17.2511 56.8491 16.6885 52.4156 18.5138 48.8999C14.7371 47.7045 12 44.1718 12 40C12 35.8282 14.7371 32.2955 18.5138 31.1001C16.6885 27.5844 17.2511 23.1509 20.201 20.201C23.1509 17.2511 27.5844 16.6885 31.1001 18.5138C32.2955 14.7371 35.8282 12 40 12C44.1718 12 47.7045 14.7371 48.8999 18.5138Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M49.0934 18.0467C52.6756 16.3669 57.0757 17.0067 60.0347 19.9656C62.9936 22.9246 63.6334 27.3247 61.9536 30.9068C65.6743 32.252 68.3333 35.8157 68.3333 40.0003C68.3333 44.1849 65.6743 47.7486 61.9536 49.0938C63.6334 52.676 62.9936 57.0761 60.0347 60.035C57.0757 62.994 52.6756 63.6337 49.0934 61.9539C47.7483 65.6747 44.1845 68.3337 40 68.3337C35.8154 68.3337 32.2516 65.6747 30.9065 61.9539C27.3243 63.6337 22.9242 62.994 19.9653 60.035C17.0063 57.0761 16.3665 52.676 18.0464 49.0938C14.3256 47.7486 11.6666 44.1849 11.6666 40.0003C11.6666 35.8157 14.3256 32.252 18.0464 30.9068C16.3665 27.3247 17.0063 22.9246 19.9653 19.9656C22.9242 17.0067 27.3243 16.3669 30.9065 18.0467C32.2516 14.326 35.8154 11.667 40 11.667C44.1845 11.667 47.7483 14.326 49.0934 18.0467Z"
            fill="currentColor"
          />
          <path
            d="M60.0347 19.9656L61.0953 18.905L60.0347 19.9656ZM49.0934 18.0467L47.6828 18.5567L48.2418 20.1029L49.7303 19.4048L49.0934 18.0467ZM61.9536 30.9068L60.5955 30.27L59.8974 31.7585L61.4436 32.3175L61.9536 30.9068ZM61.9536 49.0938L61.4436 47.6832L59.8974 48.2421L60.5955 49.7307L61.9536 49.0938ZM60.0347 60.035L58.974 58.9744L60.0347 60.035ZM49.0934 61.9539L49.7303 60.5958L48.2418 59.8978L47.6828 61.4439L49.0934 61.9539ZM30.9065 61.9539L32.3171 61.4439L31.7582 59.8978L30.2696 60.5958L30.9065 61.9539ZM19.9653 60.035L18.9046 61.0957H18.9046L19.9653 60.035ZM18.0464 49.0938L19.4045 49.7307L20.1025 48.2421L18.5563 47.6832L18.0464 49.0938ZM18.0464 30.9068L18.5563 32.3175L20.1025 31.7585L19.4045 30.27L18.0464 30.9068ZM19.9653 19.9656L21.0259 21.0263L19.9653 19.9656ZM30.9065 18.0467L30.2696 19.4048L31.7582 20.1029L32.3171 18.5567L30.9065 18.0467ZM61.0953 18.905C57.6756 15.4852 52.5925 14.7491 48.4566 16.6886L49.7303 19.4048C52.7587 17.9847 56.4759 18.5282 58.974 21.0263L61.0953 18.905ZM63.3116 31.5437C65.2512 27.4078 64.5151 22.3247 61.0953 18.905L58.974 21.0263C61.4721 23.5244 62.0156 27.2416 60.5955 30.27L63.3116 31.5437ZM69.8333 40.0003C69.8333 35.1641 66.7595 31.0493 62.4635 29.4962L61.4436 32.3175C64.5891 33.4547 66.8333 36.4674 66.8333 40.0003L69.8333 40.0003ZM62.4635 50.5044C66.7595 48.9513 69.8333 44.8366 69.8333 40.0003L66.8333 40.0003C66.8333 43.5332 64.5891 46.546 61.4436 47.6832L62.4635 50.5044ZM61.0953 61.0957C64.5151 57.6759 65.2512 52.5929 63.3116 48.4569L60.5955 49.7307C62.0156 52.759 61.4721 56.4762 58.974 58.9744L61.0953 61.0957ZM48.4566 63.312C52.5925 65.2515 57.6756 64.5154 61.0953 61.0957L58.974 58.9744C56.4759 61.4725 52.7587 62.016 49.7303 60.5958L48.4566 63.312ZM40 69.8337C44.8362 69.8337 48.951 66.7599 50.5041 62.4639L47.6828 61.4439C46.5456 64.5895 43.5329 66.8337 40 66.8337L40 69.8337ZM29.4958 62.4639C31.049 66.7599 35.1637 69.8337 40 69.8337L40 66.8337C36.4671 66.8337 33.4543 64.5895 32.3171 61.4439L29.4958 62.4639ZM18.9046 61.0957C22.3244 64.5154 27.4074 65.2515 31.5433 63.312L30.2696 60.5958C27.2413 62.016 23.5241 61.4725 21.0259 58.9744L18.9046 61.0957ZM16.6883 48.4569C14.7488 52.5929 15.4849 57.6759 18.9046 61.0957L21.0259 58.9744C18.5278 56.4762 17.9843 52.759 19.4045 49.7307L16.6883 48.4569ZM10.1666 40.0003C10.1666 44.8366 13.2404 48.9513 17.5364 50.5044L18.5563 47.6832C15.4108 46.546 13.1666 43.5332 13.1666 40.0003H10.1666ZM17.5364 29.4962C13.2404 31.0493 10.1666 35.1641 10.1666 40.0003H13.1666C13.1666 36.4674 15.4108 33.4547 18.5563 32.3175L17.5364 29.4962ZM18.9046 18.905C15.4849 22.3247 14.7488 27.4078 16.6883 31.5437L19.4045 30.27C17.9843 27.2416 18.5278 23.5244 21.0259 21.0263L18.9046 18.905ZM31.5433 16.6886C27.4074 14.7491 22.3244 15.4852 18.9046 18.905L21.0259 21.0263C23.5241 18.5282 27.2413 17.9847 30.2696 19.4048L31.5433 16.6886ZM40 10.167C35.1637 10.167 31.0489 13.2407 29.4958 17.5367L32.3171 18.5567C33.4543 15.4112 36.4671 13.167 40 13.167V10.167ZM50.5041 17.5367C48.951 13.2407 44.8362 10.167 40 10.167V13.167C43.5329 13.167 46.5456 15.4112 47.6828 18.5567L50.5041 17.5367Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M49.0934 18.0467C52.6756 16.3669 57.0757 17.0067 60.0347 19.9656C62.9936 22.9246 63.6334 27.3247 61.9536 30.9068C65.6743 32.252 68.3333 35.8157 68.3333 40.0003C68.3333 44.1849 65.6743 47.7486 61.9536 49.0938C63.6334 52.676 62.9936 57.0761 60.0347 60.035C57.0757 62.994 52.6756 63.6337 49.0934 61.9539C47.7483 65.6747 44.1845 68.3337 40 68.3337C35.8154 68.3337 32.2516 65.6747 30.9065 61.9539C27.3243 63.6337 22.9242 62.994 19.9653 60.035C17.0063 57.0761 16.3665 52.676 18.0464 49.0938C14.3256 47.7486 11.6666 44.1849 11.6666 40.0003C11.6666 35.8157 14.3256 32.252 18.0464 30.9068C16.3665 27.3247 17.0063 22.9246 19.9653 19.9656C22.9242 17.0067 27.3243 16.3669 30.9065 18.0467C32.2516 14.326 35.8154 11.667 40 11.667C44.1845 11.667 47.7483 14.326 49.0934 18.0467Z"
            fill="#EB5757"
          />
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M45.521 26.6713C47.6959 25.6514 50.3674 26.0398 52.1639 27.8363C53.9604 29.6328 54.3488 32.3043 53.329 34.4792C55.588 35.2959 57.2024 37.4596 57.2024 40.0002C57.2024 42.5409 55.588 44.7046 53.329 45.5213C54.3488 47.6962 53.9604 50.3676 52.1639 52.1642C50.3674 53.9607 47.6959 54.3491 45.521 53.3292C44.7043 55.5882 42.5406 57.2026 40 57.2026C37.4593 57.2026 35.2956 55.5882 34.4789 53.3292C32.3041 54.3491 29.6326 53.9607 27.8361 52.1642C26.0396 50.3676 25.6511 47.6962 26.671 45.5213C24.412 44.7046 22.7976 42.5409 22.7976 40.0002C22.7976 37.4596 24.412 35.2959 26.671 34.4792C25.6511 32.3043 26.0396 29.6328 27.8361 27.8363C29.6326 26.0398 32.3041 25.6514 34.4789 26.6713C35.2956 24.4122 37.4593 22.7979 40 22.7979C42.5406 22.7979 44.7043 24.4122 45.521 26.6713Z"
            fill="#F2F2F2"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M49.0934 18.0467C52.6756 16.3669 57.0757 17.0067 60.0347 19.9656C62.9936 22.9246 63.6334 27.3247 61.9536 30.9068C65.6743 32.252 68.3333 35.8157 68.3333 40.0003C68.3333 44.1849 65.6743 47.7486 61.9536 49.0938C63.6334 52.676 62.9936 57.0761 60.0347 60.035C57.0757 62.994 52.6756 63.6337 49.0934 61.9539C47.7483 65.6747 44.1845 68.3337 40 68.3337C35.8154 68.3337 32.2516 65.6747 30.9065 61.9539C27.3243 63.6337 22.9242 62.994 19.9653 60.035C17.0063 57.0761 16.3665 52.676 18.0464 49.0938C14.3256 47.7486 11.6666 44.1849 11.6666 40.0003C11.6666 35.8157 14.3256 32.252 18.0464 30.9068C16.3665 27.3247 17.0063 22.9246 19.9653 19.9656C22.9242 17.0067 27.3243 16.3669 30.9065 18.0467C32.2516 14.326 35.8154 11.667 40 11.667C44.1845 11.667 47.7483 14.326 49.0934 18.0467Z"
            fill="currentColor"
            fill-opacity="0.25"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M29.8695 15.5437C31.8795 12.0343 35.6613 9.66699 39.9997 9.66699C44.3381 9.66699 48.12 12.0343 50.13 15.5437C54.0328 14.4835 58.3809 15.4837 61.4486 18.5514C64.5163 21.6191 65.5166 25.9672 64.4563 29.8701C67.9658 31.8801 70.333 35.662 70.333 40.0003C70.333 44.3387 67.9658 48.1206 64.4563 50.1306C65.5166 54.0334 64.5163 58.3815 61.4486 61.4492C58.3809 64.5169 54.0328 65.5172 50.13 64.4569C48.12 67.9664 44.3381 70.3337 39.9997 70.3337C35.6613 70.3337 31.8795 67.9664 29.8695 64.4569C25.9666 65.5172 21.6185 64.5169 18.5508 61.4492C15.4831 58.3815 14.4828 54.0334 15.5431 50.1306C12.0337 48.1206 9.66638 44.3387 9.66638 40.0003C9.66638 35.662 12.0337 31.8801 15.5431 29.8701C14.4828 25.9672 15.4831 21.6191 18.5508 18.5514C21.6185 15.4837 25.9666 14.4835 29.8695 15.5437ZM39.9997 13.667C36.684 13.667 33.855 15.7729 32.7871 18.7267L32.0418 20.7882L30.0571 19.8575C27.2133 18.524 23.7238 19.0353 21.3792 21.3798C19.0347 23.7244 18.5233 27.2139 19.8569 30.0577L20.7876 32.0424L18.7261 32.7877C15.7723 33.8556 13.6664 36.6847 13.6664 40.0003C13.6664 43.316 15.7723 46.1451 18.7261 47.2129L20.7876 47.9582L19.8569 49.943C18.5233 52.7867 19.0347 56.2763 21.3792 58.6208C23.7238 60.9653 27.2133 61.4767 30.0571 60.1431L32.0418 59.2124L32.7871 61.2739C33.855 64.2278 36.684 66.3337 39.9997 66.3337C43.3154 66.3337 46.1445 64.2278 47.2123 61.2739L47.9576 59.2124L49.9423 60.1431C52.7861 61.4767 56.2757 60.9653 58.6202 58.6208C60.9647 56.2763 61.4761 52.7867 60.1425 49.943L59.2118 47.9582L61.2733 47.2129C64.2271 46.1451 66.333 43.316 66.333 40.0003C66.333 36.6847 64.2271 33.8556 61.2733 32.7877L59.2118 32.0424L60.1425 30.0577C61.4761 27.2139 60.9647 23.7244 58.6202 21.3798C56.2757 19.0353 52.7861 18.524 49.9423 19.8575L47.9576 20.7882L47.2123 18.7267C46.1445 15.7729 43.3154 13.667 39.9997 13.667Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreBadge = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreBadge.displayName = 'CoreBadge'

export default CoreBadge
