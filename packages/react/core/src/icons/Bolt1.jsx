
import React, { forwardRef } from 'react'
import { transform } from '../utils'

const renderString = ({ variant, strokeWidth='3', strokeLinecap='round', strokeLinejoin='round' }) => {
  switch (variant) {    
    case 'path':
      return (
        <>
          <path
            d="M33.9175 45.9997L19.9202 45.9997C19.1112 45.9997 18.637 45.089 19.101 44.4262L44.1803 8.59859C44.741 7.79762 45.9995 8.19434 45.9995 9.17205V33.9997L59.9968 33.9997C60.8059 33.9997 61.28 34.9104 60.8161 35.5732L35.7367 71.4008C35.1761 72.2018 33.9175 71.805 33.9175 70.8273V45.9997Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'bold':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M33.999 45.8295L20.0017 45.8295C19.1927 45.8295 18.7186 44.9188 19.1825 44.2561L44.2619 8.42842C44.8225 7.62745 46.0811 8.02418 46.0811 9.00189V33.8295L60.0784 33.8295C60.8874 33.8295 61.3616 34.7402 60.8976 35.403L35.8183 71.2306C35.2576 72.0316 33.999 71.6349 33.999 70.6572L33.999 45.8295Z"
            fill="currentColor"
          />
          <path
            d="M33.999 45.8295H35.499C35.499 45.0011 34.8275 44.3295 33.999 44.3295V45.8295ZM20.0017 45.8295L20.0017 44.3295H20.0017V45.8295ZM19.1825 44.2561L20.4114 45.1162H20.4114L19.1825 44.2561ZM44.2619 8.42842L45.4907 9.28862V9.28862L44.2619 8.42842ZM46.0811 9.00189H44.5811H46.0811ZM46.0811 33.8295H44.5811C44.5811 34.658 45.2527 35.3295 46.0811 35.3295V33.8295ZM60.0784 33.8295V35.3295V33.8295ZM60.8976 35.403L59.6688 34.5428V34.5428L60.8976 35.403ZM35.8183 71.2306L34.5894 70.3704L34.5894 70.3704L35.8183 71.2306ZM33.999 44.3295L20.0017 44.3295L20.0017 47.3295L33.999 47.3295V44.3295ZM20.0017 44.3295C20.4063 44.3295 20.6433 44.7849 20.4114 45.1162L17.9537 43.3959C16.7938 45.0528 17.9792 47.3295 20.0017 47.3295V44.3295ZM20.4114 45.1162L45.4907 9.28862L43.033 7.56823L17.9537 43.3959L20.4114 45.1162ZM45.4907 9.28862C45.2104 9.68911 44.5811 9.49074 44.5811 9.00189L47.5811 9.00189C47.5811 6.55761 44.4347 5.5658 43.033 7.56823L45.4907 9.28862ZM44.5811 9.00189V33.8295H47.5811V9.00189L44.5811 9.00189ZM46.0811 35.3295L60.0784 35.3295V32.3295L46.0811 32.3295V35.3295ZM60.0784 35.3295C59.6739 35.3295 59.4368 34.8742 59.6688 34.5428L62.1265 36.2632C63.2863 34.6062 62.1009 32.3295 60.0784 32.3295V35.3295ZM59.6688 34.5428L34.5894 70.3704L37.0471 72.0908L62.1265 36.2632L59.6688 34.5428ZM34.5894 70.3704C34.8698 69.9699 35.499 70.1683 35.499 70.6572H32.499C32.499 73.1014 35.6454 74.0933 37.0471 72.0908L34.5894 70.3704ZM35.499 70.6572L35.499 45.8295H32.499L32.499 70.6572H35.499Z"
            fill="currentColor"
          />
        </>
      )
    case 'poly':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M33.999 45.8295L20.0017 45.8295C19.1927 45.8295 18.7186 44.9188 19.1825 44.2561L44.2619 8.42842C44.8225 7.62745 46.0811 8.02417 46.0811 9.00189V33.8295L60.0784 33.8295C60.8874 33.8295 61.3616 34.7402 60.8976 35.403L35.8183 71.2306C35.2576 72.0316 33.999 71.6349 33.999 70.6572L33.999 45.8295Z"
            fill="#2F80ED"
          />
          <path
            d="M33.999 46.001L46.1705 33.8295H46.0811V9.00189C46.0811 8.02417 44.8225 7.62745 44.2619 8.42842L19.1825 44.2561C18.7186 44.9188 19.1927 45.8295 20.0017 45.8295L33.999 45.8295V46.001Z"
            fill="#56CCF2"
          />
        </>
      )
    case 'duo':
      return (
        <>
          <path
            d="M33.9175 45.9997L19.9202 45.9997C19.1112 45.9997 18.637 45.089 19.101 44.4262L44.1803 8.59859C44.741 7.79762 45.9995 8.19434 45.9995 9.17205V33.9997L59.9968 33.9997C60.8059 33.9997 61.28 34.9104 60.8161 35.5732L35.7367 71.4008C35.1761 72.2018 33.9175 71.805 33.9175 70.8273V45.9997Z"
            fill="currentColor"
            fill-opacity="0.25"
            stroke="currentColor"
            stroke-width={strokeWidth}
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
    case 'outline':
      return (
        <>
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M48.0811 9.00175C48.0811 6.06862 44.3055 4.87845 42.6234 7.28137L17.5441 43.109C16.1523 45.0973 17.5747 47.8294 20.0018 47.8294L31.9991 47.8294V70.657C31.9991 73.5902 35.7748 74.7803 37.4568 72.3774L62.5361 36.5498C63.928 34.5615 62.5055 31.8294 60.0785 31.8294L48.0811 31.8294V9.00175ZM44.0811 12.1741L21.9225 43.8294L33.9991 43.8294C35.1037 43.8294 35.9991 44.7248 35.9991 45.8294V67.4847L58.1578 35.8294L46.0811 35.8294C44.9766 35.8294 44.0811 34.934 44.0811 33.8294V12.1741Z"
            stroke="currentColor"
            stroke-linecap={strokeLinecap}
            stroke-linejoin={strokeLinejoin}
          />
        </>
      )
  }
}

const CoreBolt1 = forwardRef((props, ref) => {
  const { size, variant, rotate, flip, children } = props

  return (
    <svg
      ref={ref}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 80 80"
      width={size || 40}
      height={size || 40}
      transform={transform(rotate, flip)}
    >
      {children}
      <g>
        {renderString({ size, variant, rotate, flip })}
      </g>
    </svg>
  )
})

CoreBolt1.displayName = 'CoreBolt1'

export default CoreBolt1
